/*! For license information please see extension.js.LICENSE.txt */
(()=>{var e={8185:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.createFileSystemAdapter=n.FILE_SYSTEM_ADAPTER=void 0;const r=t(7147);n.FILE_SYSTEM_ADAPTER={lstat:r.lstat,stat:r.stat,lstatSync:r.lstatSync,statSync:r.statSync,readdir:r.readdir,readdirSync:r.readdirSync},n.createFileSystemAdapter=function(e){return void 0===e?n.FILE_SYSTEM_ADAPTER:Object.assign(Object.assign({},n.FILE_SYSTEM_ADAPTER),e)}},1107:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.IS_SUPPORT_READDIR_WITH_FILE_TYPES=void 0;const t=process.versions.node.split(".");if(void 0===t[0]||void 0===t[1])throw new Error(`Unexpected behavior. The 'process.versions.node' variable has invalid value: ${process.versions.node}`);const r=Number.parseInt(t[0],10),i=Number.parseInt(t[1],10),o=r>10,a=10===r&&i>=10;n.IS_SUPPORT_READDIR_WITH_FILE_TYPES=o||a},5923:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.Settings=n.scandirSync=n.scandir=void 0;const r=t(1411),i=t(3953),o=t(6913);function a(e={}){return e instanceof o.default?e:new o.default(e)}n.Settings=o.default,n.scandir=function(e,n,t){"function"!=typeof n?r.read(e,a(n),t):r.read(e,a(),n)},n.scandirSync=function(e,n){const t=a(n);return i.read(e,t)}},1411:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.readdir=n.readdirWithFileTypes=n.read=void 0;const r=t(6203),i=t(4595),o=t(1107),a=t(6582),s=t(4587);function l(e,n,t){n.fs.readdir(e,{withFileTypes:!0},((r,o)=>{if(null!==r)return void u(t,r);const l=o.map((t=>({dirent:t,name:t.name,path:s.joinPathSegments(e,t.name,n.pathSegmentSeparator)})));if(!n.followSymbolicLinks)return void d(t,l);const c=l.map((e=>function(e,n){return t=>{e.dirent.isSymbolicLink()?n.fs.stat(e.path,((r,i)=>{if(null!==r)return n.throwErrorOnBrokenSymbolicLink?void t(r):void t(null,e);e.dirent=a.fs.createDirentFromStats(e.name,i),t(null,e)})):t(null,e)}}(e,n)));i(c,((e,n)=>{null===e?d(t,n):u(t,e)}))}))}function c(e,n,t){n.fs.readdir(e,((o,l)=>{if(null!==o)return void u(t,o);const c=l.map((t=>{const i=s.joinPathSegments(e,t,n.pathSegmentSeparator);return e=>{r.stat(i,n.fsStatSettings,((r,o)=>{if(null!==r)return void e(r);const s={name:t,path:i,dirent:a.fs.createDirentFromStats(t,o)};n.stats&&(s.stats=o),e(null,s)}))}}));i(c,((e,n)=>{null===e?d(t,n):u(t,e)}))}))}function u(e,n){e(n)}function d(e,n){e(null,n)}n.read=function(e,n,t){n.stats||!o.IS_SUPPORT_READDIR_WITH_FILE_TYPES?c(e,n,t):l(e,n,t)},n.readdirWithFileTypes=l,n.readdir=c},4587:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.joinPathSegments=void 0,n.joinPathSegments=function(e,n,t){return e.endsWith(t)?e+n:e+t+n}},3953:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.readdir=n.readdirWithFileTypes=n.read=void 0;const r=t(6203),i=t(1107),o=t(6582),a=t(4587);function s(e,n){return n.fs.readdirSync(e,{withFileTypes:!0}).map((t=>{const r={dirent:t,name:t.name,path:a.joinPathSegments(e,t.name,n.pathSegmentSeparator)};if(r.dirent.isSymbolicLink()&&n.followSymbolicLinks)try{const e=n.fs.statSync(r.path);r.dirent=o.fs.createDirentFromStats(r.name,e)}catch(e){if(n.throwErrorOnBrokenSymbolicLink)throw e}return r}))}function l(e,n){return n.fs.readdirSync(e).map((t=>{const i=a.joinPathSegments(e,t,n.pathSegmentSeparator),s=r.statSync(i,n.fsStatSettings),l={name:t,path:i,dirent:o.fs.createDirentFromStats(t,s)};return n.stats&&(l.stats=s),l}))}n.read=function(e,n){return!n.stats&&i.IS_SUPPORT_READDIR_WITH_FILE_TYPES?s(e,n):l(e,n)},n.readdirWithFileTypes=s,n.readdir=l},6913:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(1017),i=t(6203),o=t(8185);n.default=class{constructor(e={}){this._options=e,this.followSymbolicLinks=this._getValue(this._options.followSymbolicLinks,!1),this.fs=o.createFileSystemAdapter(this._options.fs),this.pathSegmentSeparator=this._getValue(this._options.pathSegmentSeparator,r.sep),this.stats=this._getValue(this._options.stats,!1),this.throwErrorOnBrokenSymbolicLink=this._getValue(this._options.throwErrorOnBrokenSymbolicLink,!0),this.fsStatSettings=new i.Settings({followSymbolicLink:this.followSymbolicLinks,fs:this.fs,throwErrorOnBrokenSymbolicLink:this.throwErrorOnBrokenSymbolicLink})}_getValue(e,n){return null!=e?e:n}}},322:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.createDirentFromStats=void 0;class t{constructor(e,n){this.name=e,this.isBlockDevice=n.isBlockDevice.bind(n),this.isCharacterDevice=n.isCharacterDevice.bind(n),this.isDirectory=n.isDirectory.bind(n),this.isFIFO=n.isFIFO.bind(n),this.isFile=n.isFile.bind(n),this.isSocket=n.isSocket.bind(n),this.isSymbolicLink=n.isSymbolicLink.bind(n)}}n.createDirentFromStats=function(e,n){return new t(e,n)}},6582:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.fs=void 0;const r=t(322);n.fs=r},8980:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.createFileSystemAdapter=n.FILE_SYSTEM_ADAPTER=void 0;const r=t(7147);n.FILE_SYSTEM_ADAPTER={lstat:r.lstat,stat:r.stat,lstatSync:r.lstatSync,statSync:r.statSync},n.createFileSystemAdapter=function(e){return void 0===e?n.FILE_SYSTEM_ADAPTER:Object.assign(Object.assign({},n.FILE_SYSTEM_ADAPTER),e)}},6203:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.statSync=n.stat=n.Settings=void 0;const r=t(2654),i=t(8946),o=t(8328);function a(e={}){return e instanceof o.default?e:new o.default(e)}n.Settings=o.default,n.stat=function(e,n,t){"function"!=typeof n?r.read(e,a(n),t):r.read(e,a(),n)},n.statSync=function(e,n){const t=a(n);return i.read(e,t)}},2654:(e,n)=>{"use strict";function t(e,n){e(n)}function r(e,n){e(null,n)}Object.defineProperty(n,"__esModule",{value:!0}),n.read=void 0,n.read=function(e,n,i){n.fs.lstat(e,((o,a)=>{null===o?a.isSymbolicLink()&&n.followSymbolicLink?n.fs.stat(e,((e,o)=>{if(null!==e)return n.throwErrorOnBrokenSymbolicLink?void t(i,e):void r(i,a);n.markSymbolicLink&&(o.isSymbolicLink=()=>!0),r(i,o)})):r(i,a):t(i,o)}))}},8946:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.read=void 0,n.read=function(e,n){const t=n.fs.lstatSync(e);if(!t.isSymbolicLink()||!n.followSymbolicLink)return t;try{const t=n.fs.statSync(e);return n.markSymbolicLink&&(t.isSymbolicLink=()=>!0),t}catch(e){if(!n.throwErrorOnBrokenSymbolicLink)return t;throw e}}},8328:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(8980);n.default=class{constructor(e={}){this._options=e,this.followSymbolicLink=this._getValue(this._options.followSymbolicLink,!0),this.fs=r.createFileSystemAdapter(this._options.fs),this.markSymbolicLink=this._getValue(this._options.markSymbolicLink,!1),this.throwErrorOnBrokenSymbolicLink=this._getValue(this._options.throwErrorOnBrokenSymbolicLink,!0)}_getValue(e,n){return null!=e?e:n}}},5439:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.Settings=n.walkStream=n.walkSync=n.walk=void 0;const r=t(9346),i=t(215),o=t(4078),a=t(8690);function s(e={}){return e instanceof a.default?e:new a.default(e)}n.Settings=a.default,n.walk=function(e,n,t){"function"!=typeof n?new r.default(e,s(n)).read(t):new r.default(e,s()).read(n)},n.walkSync=function(e,n){const t=s(n);return new o.default(e,t).read()},n.walkStream=function(e,n){const t=s(n);return new i.default(e,t).read()}},9346:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(4714);n.default=class{constructor(e,n){this._root=e,this._settings=n,this._reader=new r.default(this._root,this._settings),this._storage=[]}read(e){this._reader.onError((n=>{!function(e,n){e(n)}(e,n)})),this._reader.onEntry((e=>{this._storage.push(e)})),this._reader.onEnd((()=>{!function(e,n){e(null,n)}(e,this._storage)})),this._reader.read()}}},215:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(2781),i=t(4714);n.default=class{constructor(e,n){this._root=e,this._settings=n,this._reader=new i.default(this._root,this._settings),this._stream=new r.Readable({objectMode:!0,read:()=>{},destroy:()=>{this._reader.isDestroyed||this._reader.destroy()}})}read(){return this._reader.onError((e=>{this._stream.emit("error",e)})),this._reader.onEntry((e=>{this._stream.push(e)})),this._reader.onEnd((()=>{this._stream.push(null)})),this._reader.read(),this._stream}}},4078:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(9555);n.default=class{constructor(e,n){this._root=e,this._settings=n,this._reader=new r.default(this._root,this._settings)}read(){return this._reader.read()}}},4714:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(2361),i=t(5923),o=t(373),a=t(6865),s=t(5274);class l extends s.default{constructor(e,n){super(e,n),this._settings=n,this._scandir=i.scandir,this._emitter=new r.EventEmitter,this._queue=o(this._worker.bind(this),this._settings.concurrency),this._isFatalError=!1,this._isDestroyed=!1,this._queue.drain=()=>{this._isFatalError||this._emitter.emit("end")}}read(){return this._isFatalError=!1,this._isDestroyed=!1,setImmediate((()=>{this._pushToQueue(this._root,this._settings.basePath)})),this._emitter}get isDestroyed(){return this._isDestroyed}destroy(){if(this._isDestroyed)throw new Error("The reader is already destroyed");this._isDestroyed=!0,this._queue.killAndDrain()}onEntry(e){this._emitter.on("entry",e)}onError(e){this._emitter.once("error",e)}onEnd(e){this._emitter.once("end",e)}_pushToQueue(e,n){const t={directory:e,base:n};this._queue.push(t,(e=>{null!==e&&this._handleError(e)}))}_worker(e,n){this._scandir(e.directory,this._settings.fsScandirSettings,((t,r)=>{if(null===t){for(const n of r)this._handleEntry(n,e.base);n(null,void 0)}else n(t,void 0)}))}_handleError(e){!this._isDestroyed&&a.isFatalError(this._settings,e)&&(this._isFatalError=!0,this._isDestroyed=!0,this._emitter.emit("error",e))}_handleEntry(e,n){if(this._isDestroyed||this._isFatalError)return;const t=e.path;void 0!==n&&(e.path=a.joinPathSegments(n,e.name,this._settings.pathSegmentSeparator)),a.isAppliedFilter(this._settings.entryFilter,e)&&this._emitEntry(e),e.dirent.isDirectory()&&a.isAppliedFilter(this._settings.deepFilter,e)&&this._pushToQueue(t,void 0===n?void 0:e.path)}_emitEntry(e){this._emitter.emit("entry",e)}}n.default=l},6865:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.joinPathSegments=n.replacePathSegmentSeparator=n.isAppliedFilter=n.isFatalError=void 0,n.isFatalError=function(e,n){return null===e.errorFilter||!e.errorFilter(n)},n.isAppliedFilter=function(e,n){return null===e||e(n)},n.replacePathSegmentSeparator=function(e,n){return e.split(/[/\\]/).join(n)},n.joinPathSegments=function(e,n,t){return""===e?n:e.endsWith(t)?e+n:e+t+n}},5274:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(6865);n.default=class{constructor(e,n){this._root=e,this._settings=n,this._root=r.replacePathSegmentSeparator(e,n.pathSegmentSeparator)}}},9555:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(5923),i=t(6865),o=t(5274);class a extends o.default{constructor(){super(...arguments),this._scandir=r.scandirSync,this._storage=[],this._queue=new Set}read(){return this._pushToQueue(this._root,this._settings.basePath),this._handleQueue(),this._storage}_pushToQueue(e,n){this._queue.add({directory:e,base:n})}_handleQueue(){for(const e of this._queue.values())this._handleDirectory(e.directory,e.base)}_handleDirectory(e,n){try{const t=this._scandir(e,this._settings.fsScandirSettings);for(const e of t)this._handleEntry(e,n)}catch(e){this._handleError(e)}}_handleError(e){if(i.isFatalError(this._settings,e))throw e}_handleEntry(e,n){const t=e.path;void 0!==n&&(e.path=i.joinPathSegments(n,e.name,this._settings.pathSegmentSeparator)),i.isAppliedFilter(this._settings.entryFilter,e)&&this._pushToStorage(e),e.dirent.isDirectory()&&i.isAppliedFilter(this._settings.deepFilter,e)&&this._pushToQueue(t,void 0===n?void 0:e.path)}_pushToStorage(e){this._storage.push(e)}}n.default=a},8690:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(1017),i=t(5923);n.default=class{constructor(e={}){this._options=e,this.basePath=this._getValue(this._options.basePath,void 0),this.concurrency=this._getValue(this._options.concurrency,Number.POSITIVE_INFINITY),this.deepFilter=this._getValue(this._options.deepFilter,null),this.entryFilter=this._getValue(this._options.entryFilter,null),this.errorFilter=this._getValue(this._options.errorFilter,null),this.pathSegmentSeparator=this._getValue(this._options.pathSegmentSeparator,r.sep),this.fsScandirSettings=new i.Settings({followSymbolicLinks:this._options.followSymbolicLinks,fs:this._options.fs,pathSegmentSeparator:this._options.pathSegmentSeparator,stats:this._options.stats,throwErrorOnBrokenSymbolicLink:this._options.throwErrorOnBrokenSymbolicLink})}_getValue(e,n){return null!=e?e:n}}},5623:e=>{"use strict";function n(e,n,i){e instanceof RegExp&&(e=t(e,i)),n instanceof RegExp&&(n=t(n,i));var o=r(e,n,i);return o&&{start:o[0],end:o[1],pre:i.slice(0,o[0]),body:i.slice(o[0]+e.length,o[1]),post:i.slice(o[1]+n.length)}}function t(e,n){var t=n.match(e);return t?t[0]:null}function r(e,n,t){var r,i,o,a,s,l=t.indexOf(e),c=t.indexOf(n,l+1),u=l;if(l>=0&&c>0){if(e===n)return[l,c];for(r=[],o=t.length;u>=0&&!s;)u==l?(r.push(u),l=t.indexOf(e,u+1)):1==r.length?s=[r.pop(),c]:((i=r.pop())<o&&(o=i,a=c),c=t.indexOf(n,u+1)),u=l<c&&l>=0?l:c;r.length&&(s=[o,a])}return s}e.exports=n,n.range=r},3644:(e,n,t)=>{var r=t(1048),i=t(5623);e.exports=function(e){return e?("{}"===e.substr(0,2)&&(e="\\{\\}"+e.substr(2)),E(function(e){return e.split("\\\\").join(o).split("\\{").join(a).split("\\}").join(s).split("\\,").join(l).split("\\.").join(c)}(e),!0).map(d)):[]};var o="\0SLASH"+Math.random()+"\0",a="\0OPEN"+Math.random()+"\0",s="\0CLOSE"+Math.random()+"\0",l="\0COMMA"+Math.random()+"\0",c="\0PERIOD"+Math.random()+"\0";function u(e){return parseInt(e,10)==e?parseInt(e,10):e.charCodeAt(0)}function d(e){return e.split(o).join("\\").split(a).join("{").split(s).join("}").split(l).join(",").split(c).join(".")}function h(e){if(!e)return[""];var n=[],t=i("{","}",e);if(!t)return e.split(",");var r=t.pre,o=t.body,a=t.post,s=r.split(",");s[s.length-1]+="{"+o+"}";var l=h(a);return a.length&&(s[s.length-1]+=l.shift(),s.push.apply(s,l)),n.push.apply(n,s),n}function p(e){return"{"+e+"}"}function f(e){return/^-?0\d/.test(e)}function m(e,n){return e<=n}function g(e,n){return e>=n}function E(e,n){var t=[],o=i("{","}",e);if(!o||/\$$/.test(o.pre))return[e];var a,l=/^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(o.body),c=/^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(o.body),d=l||c,T=o.body.indexOf(",")>=0;if(!d&&!T)return o.post.match(/,.*\}/)?E(e=o.pre+"{"+o.body+s+o.post):[e];if(d)a=o.body.split(/\.\./);else if(1===(a=h(o.body)).length&&1===(a=E(a[0],!1).map(p)).length)return(y=o.post.length?E(o.post,!1):[""]).map((function(e){return o.pre+a[0]+e}));var R,S=o.pre,y=o.post.length?E(o.post,!1):[""];if(d){var A=u(a[0]),v=u(a[1]),I=Math.max(a[0].length,a[1].length),C=3==a.length?Math.abs(u(a[2])):1,_=m;v<A&&(C*=-1,_=g);var b=a.some(f);R=[];for(var O=A;_(O,v);O+=C){var D;if(c)"\\"===(D=String.fromCharCode(O))&&(D="");else if(D=String(O),b){var N=I-D.length;if(N>0){var w=new Array(N+1).join("0");D=O<0?"-"+w+D.slice(1):w+D}}R.push(D)}}else R=r(a,(function(e){return E(e,!1)}));for(var L=0;L<R.length;L++)for(var x=0;x<y.length;x++){var M=S+R[L]+y[x];(!n||d||M)&&t.push(M)}return t}},6744:(e,n,t)=>{"use strict";const r=t(3349),i=t(7529),o=t(8050),a=t(4339),s=(e,n={})=>{let t=[];if(Array.isArray(e))for(let r of e){let e=s.create(r,n);Array.isArray(e)?t.push(...e):t.push(e)}else t=[].concat(s.create(e,n));return n&&!0===n.expand&&!0===n.nodupes&&(t=[...new Set(t)]),t};s.parse=(e,n={})=>a(e,n),s.stringify=(e,n={})=>r("string"==typeof e?s.parse(e,n):e,n),s.compile=(e,n={})=>("string"==typeof e&&(e=s.parse(e,n)),i(e,n)),s.expand=(e,n={})=>{"string"==typeof e&&(e=s.parse(e,n));let t=o(e,n);return!0===n.noempty&&(t=t.filter(Boolean)),!0===n.nodupes&&(t=[...new Set(t)]),t},s.create=(e,n={})=>""===e||e.length<3?[e]:!0!==n.expand?s.compile(e,n):s.expand(e,n),e.exports=s},7529:(e,n,t)=>{"use strict";const r=t(2664),i=t(3083);e.exports=(e,n={})=>{let t=(e,o={})=>{let a=i.isInvalidBrace(o),s=!0===e.invalid&&!0===n.escapeInvalid,l=!0===a||!0===s,c=!0===n.escapeInvalid?"\\":"",u="";if(!0===e.isOpen)return c+e.value;if(!0===e.isClose)return c+e.value;if("open"===e.type)return l?c+e.value:"(";if("close"===e.type)return l?c+e.value:")";if("comma"===e.type)return"comma"===e.prev.type?"":l?e.value:"|";if(e.value)return e.value;if(e.nodes&&e.ranges>0){let t=i.reduce(e.nodes),o=r(...t,{...n,wrap:!1,toRegex:!0});if(0!==o.length)return t.length>1&&o.length>1?`(${o})`:o}if(e.nodes)for(let n of e.nodes)u+=t(n,e);return u};return t(e)}},6611:e=>{"use strict";e.exports={MAX_LENGTH:65536,CHAR_0:"0",CHAR_9:"9",CHAR_UPPERCASE_A:"A",CHAR_LOWERCASE_A:"a",CHAR_UPPERCASE_Z:"Z",CHAR_LOWERCASE_Z:"z",CHAR_LEFT_PARENTHESES:"(",CHAR_RIGHT_PARENTHESES:")",CHAR_ASTERISK:"*",CHAR_AMPERSAND:"&",CHAR_AT:"@",CHAR_BACKSLASH:"\\",CHAR_BACKTICK:"`",CHAR_CARRIAGE_RETURN:"\r",CHAR_CIRCUMFLEX_ACCENT:"^",CHAR_COLON:":",CHAR_COMMA:",",CHAR_DOLLAR:"$",CHAR_DOT:".",CHAR_DOUBLE_QUOTE:'"',CHAR_EQUAL:"=",CHAR_EXCLAMATION_MARK:"!",CHAR_FORM_FEED:"\f",CHAR_FORWARD_SLASH:"/",CHAR_HASH:"#",CHAR_HYPHEN_MINUS:"-",CHAR_LEFT_ANGLE_BRACKET:"<",CHAR_LEFT_CURLY_BRACE:"{",CHAR_LEFT_SQUARE_BRACKET:"[",CHAR_LINE_FEED:"\n",CHAR_NO_BREAK_SPACE:" ",CHAR_PERCENT:"%",CHAR_PLUS:"+",CHAR_QUESTION_MARK:"?",CHAR_RIGHT_ANGLE_BRACKET:">",CHAR_RIGHT_CURLY_BRACE:"}",CHAR_RIGHT_SQUARE_BRACKET:"]",CHAR_SEMICOLON:";",CHAR_SINGLE_QUOTE:"'",CHAR_SPACE:" ",CHAR_TAB:"\t",CHAR_UNDERSCORE:"_",CHAR_VERTICAL_LINE:"|",CHAR_ZERO_WIDTH_NOBREAK_SPACE:"\ufeff"}},8050:(e,n,t)=>{"use strict";const r=t(2664),i=t(3349),o=t(3083),a=(e="",n="",t=!1)=>{let r=[];if(e=[].concat(e),!(n=[].concat(n)).length)return e;if(!e.length)return t?o.flatten(n).map((e=>`{${e}}`)):n;for(let i of e)if(Array.isArray(i))for(let e of i)r.push(a(e,n,t));else for(let e of n)!0===t&&"string"==typeof e&&(e=`{${e}}`),r.push(Array.isArray(e)?a(i,e,t):i+e);return o.flatten(r)};e.exports=(e,n={})=>{let t=void 0===n.rangeLimit?1e3:n.rangeLimit,s=(e,l={})=>{e.queue=[];let c=l,u=l.queue;for(;"brace"!==c.type&&"root"!==c.type&&c.parent;)c=c.parent,u=c.queue;if(e.invalid||e.dollar)return void u.push(a(u.pop(),i(e,n)));if("brace"===e.type&&!0!==e.invalid&&2===e.nodes.length)return void u.push(a(u.pop(),["{}"]));if(e.nodes&&e.ranges>0){let s=o.reduce(e.nodes);if(o.exceedsLimit(...s,n.step,t))throw new RangeError("expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.");let l=r(...s,n);return 0===l.length&&(l=i(e,n)),u.push(a(u.pop(),l)),void(e.nodes=[])}let d=o.encloseBrace(e),h=e.queue,p=e;for(;"brace"!==p.type&&"root"!==p.type&&p.parent;)p=p.parent,h=p.queue;for(let n=0;n<e.nodes.length;n++){let t=e.nodes[n];"comma"!==t.type||"brace"!==e.type?"close"!==t.type?t.value&&"open"!==t.type?h.push(a(h.pop(),t.value)):t.nodes&&s(t,e):u.push(a(u.pop(),h,d)):(1===n&&h.push(""),h.push(""))}return h};return o.flatten(s(e))}},4339:(e,n,t)=>{"use strict";const r=t(3349),{MAX_LENGTH:i,CHAR_BACKSLASH:o,CHAR_BACKTICK:a,CHAR_COMMA:s,CHAR_DOT:l,CHAR_LEFT_PARENTHESES:c,CHAR_RIGHT_PARENTHESES:u,CHAR_LEFT_CURLY_BRACE:d,CHAR_RIGHT_CURLY_BRACE:h,CHAR_LEFT_SQUARE_BRACKET:p,CHAR_RIGHT_SQUARE_BRACKET:f,CHAR_DOUBLE_QUOTE:m,CHAR_SINGLE_QUOTE:g,CHAR_NO_BREAK_SPACE:E,CHAR_ZERO_WIDTH_NOBREAK_SPACE:T}=t(6611);e.exports=(e,n={})=>{if("string"!=typeof e)throw new TypeError("Expected a string");let t=n||{},R="number"==typeof t.maxLength?Math.min(i,t.maxLength):i;if(e.length>R)throw new SyntaxError(`Input length (${e.length}), exceeds max characters (${R})`);let S,y={type:"root",input:e,nodes:[]},A=[y],v=y,I=y,C=0,_=e.length,b=0,O=0;const D=()=>e[b++],N=e=>{if("text"===e.type&&"dot"===I.type&&(I.type="text"),!I||"text"!==I.type||"text"!==e.type)return v.nodes.push(e),e.parent=v,e.prev=I,I=e,e;I.value+=e.value};for(N({type:"bos"});b<_;)if(v=A[A.length-1],S=D(),S!==T&&S!==E)if(S!==o)if(S!==f)if(S!==p)if(S!==c)if(S!==u)if(S!==m&&S!==g&&S!==a)if(S!==d)if(S!==h)if(S===s&&O>0){if(v.ranges>0){v.ranges=0;let e=v.nodes.shift();v.nodes=[e,{type:"text",value:r(v)}]}N({type:"comma",value:S}),v.commas++}else if(S===l&&O>0&&0===v.commas){let e=v.nodes;if(0===O||0===e.length){N({type:"text",value:S});continue}if("dot"===I.type){if(v.range=[],I.value+=S,I.type="range",3!==v.nodes.length&&5!==v.nodes.length){v.invalid=!0,v.ranges=0,I.type="text";continue}v.ranges++,v.args=[];continue}if("range"===I.type){e.pop();let n=e[e.length-1];n.value+=I.value+S,I=n,v.ranges--;continue}N({type:"dot",value:S})}else N({type:"text",value:S});else{if("brace"!==v.type){N({type:"text",value:S});continue}let e="close";v=A.pop(),v.close=!0,N({type:e,value:S}),O--,v=A[A.length-1]}else{O++;let e=I.value&&"$"===I.value.slice(-1)||!0===v.dollar;v=N({type:"brace",open:!0,close:!1,dollar:e,depth:O,commas:0,ranges:0,nodes:[]}),A.push(v),N({type:"open",value:S})}else{let e,t=S;for(!0!==n.keepQuotes&&(S="");b<_&&(e=D());)if(e!==o){if(e===t){!0===n.keepQuotes&&(S+=e);break}S+=e}else S+=e+D();N({type:"text",value:S})}else{if("paren"!==v.type){N({type:"text",value:S});continue}v=A.pop(),N({type:"text",value:S}),v=A[A.length-1]}else v=N({type:"paren",nodes:[]}),A.push(v),N({type:"text",value:S});else{let e;for(C++;b<_&&(e=D());)if(S+=e,e!==p)if(e!==o){if(e===f&&(C--,0===C))break}else S+=D();else C++;N({type:"text",value:S})}else N({type:"text",value:"\\"+S});else N({type:"text",value:(n.keepEscaping?S:"")+D()});do{if(v=A.pop(),"root"!==v.type){v.nodes.forEach((e=>{e.nodes||("open"===e.type&&(e.isOpen=!0),"close"===e.type&&(e.isClose=!0),e.nodes||(e.type="text"),e.invalid=!0)}));let e=A[A.length-1],n=e.nodes.indexOf(v);e.nodes.splice(n,1,...v.nodes)}}while(A.length>0);return N({type:"eos"}),y}},3349:(e,n,t)=>{"use strict";const r=t(3083);e.exports=(e,n={})=>{let t=(e,i={})=>{let o=n.escapeInvalid&&r.isInvalidBrace(i),a=!0===e.invalid&&!0===n.escapeInvalid,s="";if(e.value)return(o||a)&&r.isOpenOrClose(e)?"\\"+e.value:e.value;if(e.value)return e.value;if(e.nodes)for(let n of e.nodes)s+=t(n);return s};return t(e)}},3083:(e,n)=>{"use strict";n.isInteger=e=>"number"==typeof e?Number.isInteger(e):"string"==typeof e&&""!==e.trim()&&Number.isInteger(Number(e)),n.find=(e,n)=>e.nodes.find((e=>e.type===n)),n.exceedsLimit=(e,t,r=1,i)=>!1!==i&&!(!n.isInteger(e)||!n.isInteger(t))&&(Number(t)-Number(e))/Number(r)>=i,n.escapeNode=(e,n=0,t)=>{let r=e.nodes[n];r&&(t&&r.type===t||"open"===r.type||"close"===r.type)&&!0!==r.escaped&&(r.value="\\"+r.value,r.escaped=!0)},n.encloseBrace=e=>"brace"===e.type&&e.commas>>0+e.ranges>>0==0&&(e.invalid=!0,!0),n.isInvalidBrace=e=>!("brace"!==e.type||!0!==e.invalid&&!e.dollar&&(e.commas>>0+e.ranges>>0!=0&&!0===e.open&&!0===e.close||(e.invalid=!0,0))),n.isOpenOrClose=e=>"open"===e.type||"close"===e.type||!0===e.open||!0===e.close,n.reduce=e=>e.reduce(((e,n)=>("text"===n.type&&e.push(n.value),"range"===n.type&&(n.type="text"),e)),[]),n.flatten=(...e)=>{const n=[],t=e=>{for(let r=0;r<e.length;r++){let i=e[r];Array.isArray(i)?t(i,n):void 0!==i&&n.push(i)}return n};return t(e),n}},1048:e=>{e.exports=function(e,t){for(var r=[],i=0;i<e.length;i++){var o=t(e[i],i);n(o)?r.push.apply(r,o):r.push(o)}return r};var n=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)}},6004:(e,n,t)=>{"use strict";var r=t(6830),i=t(1017).posix.dirname,o="win32"===t(2037).platform(),a=/\\/g,s=/[\{\[].*[\}\]]$/,l=/(^|[^\\])([\{\[]|\([^\)]+$)/,c=/\\([\!\*\?\|\[\]\(\)\{\}])/g;e.exports=function(e,n){Object.assign({flipBackslashes:!0},n).flipBackslashes&&o&&e.indexOf("/")<0&&(e=e.replace(a,"/")),s.test(e)&&(e+="/"),e+="a";do{e=i(e)}while(r(e)||l.test(e));return e.replace(c,"$1")}},3294:(e,n,t)=>{"use strict";const r=t(5135),i=t(7888),o=t(3456),a=t(3403),s=t(4113),l=t(3862),c=t(4426);async function u(e,n){h(e);const t=d(e,o.default,n),r=await Promise.all(t);return c.array.flatten(r)}function d(e,n,t){const o=i.transform([].concat(e)),a=new l.default(t),s=r.generate(o,a),c=new n(a);return s.map(c.read,c)}function h(e){if(![].concat(e).every((e=>c.string.isString(e)&&!c.string.isEmpty(e))))throw new TypeError("Patterns must be a string (non empty) or an array of strings")}!function(e){e.sync=function(e,n){h(e);const t=d(e,s.default,n);return c.array.flatten(t)},e.stream=function(e,n){h(e);const t=d(e,a.default,n);return c.stream.merge(t)},e.generateTasks=function(e,n){h(e);const t=i.transform([].concat(e)),o=new l.default(n);return r.generate(t,o)},e.isDynamicPattern=function(e,n){h(e);const t=new l.default(n);return c.pattern.isDynamicPattern(e,t)},e.escapePath=function(e){return h(e),c.path.escape(e)}}(u||(u={})),e.exports=u},7888:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.removeDuplicateSlashes=n.transform=void 0;const t=/(?!^)\/{2,}/g;function r(e){return e.replace(t,"/")}n.transform=function(e){return e.map((e=>r(e)))},n.removeDuplicateSlashes=r},5135:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.convertPatternGroupToTask=n.convertPatternGroupsToTasks=n.groupPatternsByBaseDirectory=n.getNegativePatternsAsPositive=n.getPositivePatterns=n.convertPatternsToTasks=n.generate=void 0;const r=t(4426);function i(e,n,t){const i=[],o=r.pattern.getPatternsOutsideCurrentDirectory(e),a=r.pattern.getPatternsInsideCurrentDirectory(e),u=s(o),d=s(a);return i.push(...l(u,n,t)),"."in d?i.push(c(".",a,n,t)):i.push(...l(d,n,t)),i}function o(e){return r.pattern.getPositivePatterns(e)}function a(e,n){return r.pattern.getNegativePatterns(e).concat(n).map(r.pattern.convertToPositivePattern)}function s(e){return e.reduce(((e,n)=>{const t=r.pattern.getBaseDirectory(n);return t in e?e[t].push(n):e[t]=[n],e}),{})}function l(e,n,t){return Object.keys(e).map((r=>c(r,e[r],n,t)))}function c(e,n,t,i){return{dynamic:i,positive:n,negative:t,base:e,patterns:[].concat(n,t.map(r.pattern.convertToNegativePattern))}}n.generate=function(e,n){const t=o(e),s=a(e,n.ignore),l=t.filter((e=>r.pattern.isStaticPattern(e,n))),c=t.filter((e=>r.pattern.isDynamicPattern(e,n))),u=i(l,s,!1),d=i(c,s,!0);return u.concat(d)},n.convertPatternsToTasks=i,n.getPositivePatterns=o,n.getNegativePatternsAsPositive=a,n.groupPatternsByBaseDirectory=s,n.convertPatternGroupsToTasks=l,n.convertPatternGroupToTask=c},3456:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(9086),i=t(466);class o extends i.default{constructor(){super(...arguments),this._reader=new r.default(this._settings)}read(e){const n=this._getRootDirectory(e),t=this._getReaderOptions(e),r=[];return new Promise(((i,o)=>{const a=this.api(n,e,t);a.once("error",o),a.on("data",(e=>r.push(t.transform(e)))),a.once("end",(()=>i(r)))}))}api(e,n,t){return n.dynamic?this._reader.dynamic(e,t):this._reader.static(n.patterns,t)}}n.default=o},346:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(4426),i=t(7769);n.default=class{constructor(e,n){this._settings=e,this._micromatchOptions=n}getFilter(e,n,t){const r=this._getMatcher(n),i=this._getNegativePatternsRe(t);return n=>this._filter(e,n,r,i)}_getMatcher(e){return new i.default(e,this._settings,this._micromatchOptions)}_getNegativePatternsRe(e){const n=e.filter(r.pattern.isAffectDepthOfReadingPattern);return r.pattern.convertPatternsToRe(n,this._micromatchOptions)}_filter(e,n,t,i){if(this._isSkippedByDeep(e,n.path))return!1;if(this._isSkippedSymbolicLink(n))return!1;const o=r.path.removeLeadingDotSegment(n.path);return!this._isSkippedByPositivePatterns(o,t)&&this._isSkippedByNegativePatterns(o,i)}_isSkippedByDeep(e,n){return this._settings.deep!==1/0&&this._getEntryLevel(e,n)>=this._settings.deep}_getEntryLevel(e,n){const t=n.split("/").length;return""===e?t:t-e.split("/").length}_isSkippedSymbolicLink(e){return!this._settings.followSymbolicLinks&&e.dirent.isSymbolicLink()}_isSkippedByPositivePatterns(e,n){return!this._settings.baseNameMatch&&!n.match(e)}_isSkippedByNegativePatterns(e,n){return!r.pattern.matchAny(e,n)}}},7026:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(4426);n.default=class{constructor(e,n){this._settings=e,this._micromatchOptions=n,this.index=new Map}getFilter(e,n){const t=r.pattern.convertPatternsToRe(e,this._micromatchOptions),i=r.pattern.convertPatternsToRe(n,this._micromatchOptions);return e=>this._filter(e,t,i)}_filter(e,n,t){if(this._settings.unique&&this._isDuplicateEntry(e))return!1;if(this._onlyFileFilter(e)||this._onlyDirectoryFilter(e))return!1;if(this._isSkippedByAbsoluteNegativePatterns(e.path,t))return!1;const r=this._settings.baseNameMatch?e.name:e.path,i=this._isMatchToPatterns(r,n)&&!this._isMatchToPatterns(e.path,t);return this._settings.unique&&i&&this._createIndexRecord(e),i}_isDuplicateEntry(e){return this.index.has(e.path)}_createIndexRecord(e){this.index.set(e.path,void 0)}_onlyFileFilter(e){return this._settings.onlyFiles&&!e.dirent.isFile()}_onlyDirectoryFilter(e){return this._settings.onlyDirectories&&!e.dirent.isDirectory()}_isSkippedByAbsoluteNegativePatterns(e,n){if(!this._settings.absolute)return!1;const t=r.path.makeAbsolute(this._settings.cwd,e);return r.pattern.matchAny(t,n)}_isMatchToPatterns(e,n){const t=r.path.removeLeadingDotSegment(e);return r.pattern.matchAny(t,n)||r.pattern.matchAny(t+"/",n)}}},3046:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(4426);n.default=class{constructor(e){this._settings=e}getFilter(){return e=>this._isNonFatalError(e)}_isNonFatalError(e){return r.errno.isEnoentCodeError(e)||this._settings.suppressErrors}}},92:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(4426);n.default=class{constructor(e,n,t){this._patterns=e,this._settings=n,this._micromatchOptions=t,this._storage=[],this._fillStorage()}_fillStorage(){const e=r.pattern.expandPatternsWithBraceExpansion(this._patterns);for(const n of e){const e=this._getPatternSegments(n),t=this._splitSegmentsIntoSections(e);this._storage.push({complete:t.length<=1,pattern:n,segments:e,sections:t})}}_getPatternSegments(e){return r.pattern.getPatternParts(e,this._micromatchOptions).map((e=>r.pattern.isDynamicPattern(e,this._settings)?{dynamic:!0,pattern:e,patternRe:r.pattern.makeRe(e,this._micromatchOptions)}:{dynamic:!1,pattern:e}))}_splitSegmentsIntoSections(e){return r.array.splitWhen(e,(e=>e.dynamic&&r.pattern.hasGlobStar(e.pattern)))}}},7769:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(92);class i extends r.default{match(e){const n=e.split("/"),t=n.length,r=this._storage.filter((e=>!e.complete||e.segments.length>t));for(const e of r){const r=e.sections[0];if(!e.complete&&t>r.length)return!0;if(n.every(((n,t)=>{const r=e.segments[t];return!(!r.dynamic||!r.patternRe.test(n))||!r.dynamic&&r.pattern===n})))return!0}return!1}}n.default=i},466:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(1017),i=t(346),o=t(7026),a=t(3046),s=t(218);n.default=class{constructor(e){this._settings=e,this.errorFilter=new a.default(this._settings),this.entryFilter=new o.default(this._settings,this._getMicromatchOptions()),this.deepFilter=new i.default(this._settings,this._getMicromatchOptions()),this.entryTransformer=new s.default(this._settings)}_getRootDirectory(e){return r.resolve(this._settings.cwd,e.base)}_getReaderOptions(e){const n="."===e.base?"":e.base;return{basePath:n,pathSegmentSeparator:"/",concurrency:this._settings.concurrency,deepFilter:this.deepFilter.getFilter(n,e.positive,e.negative),entryFilter:this.entryFilter.getFilter(e.positive,e.negative),errorFilter:this.errorFilter.getFilter(),followSymbolicLinks:this._settings.followSymbolicLinks,fs:this._settings.fs,stats:this._settings.stats,throwErrorOnBrokenSymbolicLink:this._settings.throwErrorOnBrokenSymbolicLink,transform:this.entryTransformer.getTransformer()}}_getMicromatchOptions(){return{dot:this._settings.dot,matchBase:this._settings.baseNameMatch,nobrace:!this._settings.braceExpansion,nocase:!this._settings.caseSensitiveMatch,noext:!this._settings.extglob,noglobstar:!this._settings.globstar,posix:!0,strictSlashes:!1}}}},3403:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(2781),i=t(9086),o=t(466);class a extends o.default{constructor(){super(...arguments),this._reader=new i.default(this._settings)}read(e){const n=this._getRootDirectory(e),t=this._getReaderOptions(e),i=this.api(n,e,t),o=new r.Readable({objectMode:!0,read:()=>{}});return i.once("error",(e=>o.emit("error",e))).on("data",(e=>o.emit("data",t.transform(e)))).once("end",(()=>o.emit("end"))),o.once("close",(()=>i.destroy())),o}api(e,n,t){return n.dynamic?this._reader.dynamic(e,t):this._reader.static(n.patterns,t)}}n.default=a},4113:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(112),i=t(466);class o extends i.default{constructor(){super(...arguments),this._reader=new r.default(this._settings)}read(e){const n=this._getRootDirectory(e),t=this._getReaderOptions(e);return this.api(n,e,t).map(t.transform)}api(e,n,t){return n.dynamic?this._reader.dynamic(e,t):this._reader.static(n.patterns,t)}}n.default=o},218:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(4426);n.default=class{constructor(e){this._settings=e}getTransformer(){return e=>this._transform(e)}_transform(e){let n=e.path;return this._settings.absolute&&(n=r.path.makeAbsolute(this._settings.cwd,n),n=r.path.unixify(n)),this._settings.markDirectories&&e.dirent.isDirectory()&&(n+="/"),this._settings.objectMode?Object.assign(Object.assign({},e),{path:n}):n}}},2117:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(1017),i=t(6203),o=t(4426);n.default=class{constructor(e){this._settings=e,this._fsStatSettings=new i.Settings({followSymbolicLink:this._settings.followSymbolicLinks,fs:this._settings.fs,throwErrorOnBrokenSymbolicLink:this._settings.followSymbolicLinks})}_getFullEntryPath(e){return r.resolve(this._settings.cwd,e)}_makeEntry(e,n){const t={name:n,path:n,dirent:o.fs.createDirentFromStats(n,e)};return this._settings.stats&&(t.stats=e),t}_isFatalError(e){return!o.errno.isEnoentCodeError(e)&&!this._settings.suppressErrors}}},9086:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(2781),i=t(6203),o=t(5439),a=t(2117);class s extends a.default{constructor(){super(...arguments),this._walkStream=o.walkStream,this._stat=i.stat}dynamic(e,n){return this._walkStream(e,n)}static(e,n){const t=e.map(this._getFullEntryPath,this),i=new r.PassThrough({objectMode:!0});i._write=(r,o,a)=>this._getEntry(t[r],e[r],n).then((e=>{null!==e&&n.entryFilter(e)&&i.push(e),r===t.length-1&&i.end(),a()})).catch(a);for(let e=0;e<t.length;e++)i.write(e);return i}_getEntry(e,n,t){return this._getStat(e).then((e=>this._makeEntry(e,n))).catch((e=>{if(t.errorFilter(e))return null;throw e}))}_getStat(e){return new Promise(((n,t)=>{this._stat(e,this._fsStatSettings,((e,r)=>null===e?n(r):t(e)))}))}}n.default=s},112:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(6203),i=t(5439),o=t(2117);class a extends o.default{constructor(){super(...arguments),this._walkSync=i.walkSync,this._statSync=r.statSync}dynamic(e,n){return this._walkSync(e,n)}static(e,n){const t=[];for(const r of e){const e=this._getFullEntryPath(r),i=this._getEntry(e,r,n);null!==i&&n.entryFilter(i)&&t.push(i)}return t}_getEntry(e,n,t){try{const t=this._getStat(e);return this._makeEntry(t,n)}catch(e){if(t.errorFilter(e))return null;throw e}}_getStat(e){return this._statSync(e,this._fsStatSettings)}}n.default=a},3862:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.DEFAULT_FILE_SYSTEM_ADAPTER=void 0;const r=t(7147),i=t(2037),o=Math.max(i.cpus().length,1);n.DEFAULT_FILE_SYSTEM_ADAPTER={lstat:r.lstat,lstatSync:r.lstatSync,stat:r.stat,statSync:r.statSync,readdir:r.readdir,readdirSync:r.readdirSync},n.default=class{constructor(e={}){this._options=e,this.absolute=this._getValue(this._options.absolute,!1),this.baseNameMatch=this._getValue(this._options.baseNameMatch,!1),this.braceExpansion=this._getValue(this._options.braceExpansion,!0),this.caseSensitiveMatch=this._getValue(this._options.caseSensitiveMatch,!0),this.concurrency=this._getValue(this._options.concurrency,o),this.cwd=this._getValue(this._options.cwd,process.cwd()),this.deep=this._getValue(this._options.deep,1/0),this.dot=this._getValue(this._options.dot,!1),this.extglob=this._getValue(this._options.extglob,!0),this.followSymbolicLinks=this._getValue(this._options.followSymbolicLinks,!0),this.fs=this._getFileSystemMethods(this._options.fs),this.globstar=this._getValue(this._options.globstar,!0),this.ignore=this._getValue(this._options.ignore,[]),this.markDirectories=this._getValue(this._options.markDirectories,!1),this.objectMode=this._getValue(this._options.objectMode,!1),this.onlyDirectories=this._getValue(this._options.onlyDirectories,!1),this.onlyFiles=this._getValue(this._options.onlyFiles,!0),this.stats=this._getValue(this._options.stats,!1),this.suppressErrors=this._getValue(this._options.suppressErrors,!1),this.throwErrorOnBrokenSymbolicLink=this._getValue(this._options.throwErrorOnBrokenSymbolicLink,!1),this.unique=this._getValue(this._options.unique,!0),this.onlyDirectories&&(this.onlyFiles=!1),this.stats&&(this.objectMode=!0)}_getValue(e,n){return void 0===e?n:e}_getFileSystemMethods(e={}){return Object.assign(Object.assign({},n.DEFAULT_FILE_SYSTEM_ADAPTER),e)}}},4825:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.splitWhen=n.flatten=void 0,n.flatten=function(e){return e.reduce(((e,n)=>[].concat(e,n)),[])},n.splitWhen=function(e,n){const t=[[]];let r=0;for(const i of e)n(i)?(r++,t[r]=[]):t[r].push(i);return t}},7843:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.isEnoentCodeError=void 0,n.isEnoentCodeError=function(e){return"ENOENT"===e.code}},6334:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.createDirentFromStats=void 0;class t{constructor(e,n){this.name=e,this.isBlockDevice=n.isBlockDevice.bind(n),this.isCharacterDevice=n.isCharacterDevice.bind(n),this.isDirectory=n.isDirectory.bind(n),this.isFIFO=n.isFIFO.bind(n),this.isFile=n.isFile.bind(n),this.isSocket=n.isSocket.bind(n),this.isSymbolicLink=n.isSymbolicLink.bind(n)}}n.createDirentFromStats=function(e,n){return new t(e,n)}},4426:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.string=n.stream=n.pattern=n.path=n.fs=n.errno=n.array=void 0;const r=t(4825);n.array=r;const i=t(7843);n.errno=i;const o=t(6334);n.fs=o;const a=t(2003);n.path=a;const s=t(57);n.pattern=s;const l=t(6242);n.stream=l;const c=t(3021);n.string=c},2003:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.removeLeadingDotSegment=n.escape=n.makeAbsolute=n.unixify=void 0;const r=t(1017),i=/(\\?)([()*?[\]{|}]|^!|[!+@](?=\())/g;n.unixify=function(e){return e.replace(/\\/g,"/")},n.makeAbsolute=function(e,n){return r.resolve(e,n)},n.escape=function(e){return e.replace(i,"\\$2")},n.removeLeadingDotSegment=function(e){if("."===e.charAt(0)){const n=e.charAt(1);if("/"===n||"\\"===n)return e.slice(2)}return e}},57:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.matchAny=n.convertPatternsToRe=n.makeRe=n.getPatternParts=n.expandBraceExpansion=n.expandPatternsWithBraceExpansion=n.isAffectDepthOfReadingPattern=n.endsWithSlashGlobStar=n.hasGlobStar=n.getBaseDirectory=n.isPatternRelatedToParentDirectory=n.getPatternsOutsideCurrentDirectory=n.getPatternsInsideCurrentDirectory=n.getPositivePatterns=n.getNegativePatterns=n.isPositivePattern=n.isNegativePattern=n.convertToNegativePattern=n.convertToPositivePattern=n.isDynamicPattern=n.isStaticPattern=void 0;const r=t(1017),i=t(6004),o=t(850),a=/[*?]|^!/,s=/\[[^[]*]/,l=/(?:^|[^!*+?@])\([^(]*\|[^|]*\)/,c=/[!*+?@]\([^(]*\)/,u=/,|\.\./;function d(e,n={}){return!h(e,n)}function h(e,n={}){return!!(""!==e&&(!1===n.caseSensitiveMatch||e.includes("\\")||a.test(e)||s.test(e)||l.test(e)||!1!==n.extglob&&c.test(e)||!1!==n.braceExpansion&&function(e){const n=e.indexOf("{");if(-1===n)return!1;const t=e.indexOf("}",n+1);if(-1===t)return!1;const r=e.slice(n,t);return u.test(r)}(e)))}function p(e){return e.startsWith("!")&&"("!==e[1]}function f(e){return!p(e)}function m(e){return e.startsWith("..")||e.startsWith("./..")}function g(e){return e.endsWith("/**")}function E(e){return o.braces(e,{expand:!0,nodupes:!0})}function T(e,n){return o.makeRe(e,n)}n.isStaticPattern=d,n.isDynamicPattern=h,n.convertToPositivePattern=function(e){return p(e)?e.slice(1):e},n.convertToNegativePattern=function(e){return"!"+e},n.isNegativePattern=p,n.isPositivePattern=f,n.getNegativePatterns=function(e){return e.filter(p)},n.getPositivePatterns=function(e){return e.filter(f)},n.getPatternsInsideCurrentDirectory=function(e){return e.filter((e=>!m(e)))},n.getPatternsOutsideCurrentDirectory=function(e){return e.filter(m)},n.isPatternRelatedToParentDirectory=m,n.getBaseDirectory=function(e){return i(e,{flipBackslashes:!1})},n.hasGlobStar=function(e){return e.includes("**")},n.endsWithSlashGlobStar=g,n.isAffectDepthOfReadingPattern=function(e){const n=r.basename(e);return g(e)||d(n)},n.expandPatternsWithBraceExpansion=function(e){return e.reduce(((e,n)=>e.concat(E(n))),[])},n.expandBraceExpansion=E,n.getPatternParts=function(e,n){let{parts:t}=o.scan(e,Object.assign(Object.assign({},n),{parts:!0}));return 0===t.length&&(t=[e]),t[0].startsWith("/")&&(t[0]=t[0].slice(1),t.unshift("")),t},n.makeRe=T,n.convertPatternsToRe=function(e,n){return e.map((e=>T(e,n)))},n.matchAny=function(e,n){return n.some((n=>n.test(e)))}},6242:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.merge=void 0;const r=t(155);function i(e){e.forEach((e=>e.emit("close")))}n.merge=function(e){const n=r(e);return e.forEach((e=>{e.once("error",(e=>n.emit("error",e)))})),n.once("close",(()=>i(e))),n.once("end",(()=>i(e))),n}},3021:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.isEmpty=n.isString=void 0,n.isString=function(e){return"string"==typeof e},n.isEmpty=function(e){return""===e}},373:(e,n,t)=>{"use strict";var r=t(3650);function i(e,n,t){if("function"==typeof e&&(t=n,n=e,e=null),t<1)throw new Error("fastqueue concurrency must be greater than 1");var i=r(a),s=null,l=null,c=0,u=null,d={push:function(t,r){var a=i.get();a.context=e,a.release=h,a.value=t,a.callback=r||o,a.errorHandler=u,c===d.concurrency||d.paused?l?(l.next=a,l=a):(s=a,l=a,d.saturated()):(c++,n.call(e,a.value,a.worked))},drain:o,saturated:o,pause:function(){d.paused=!0},paused:!1,concurrency:t,running:function(){return c},resume:function(){if(d.paused){d.paused=!1;for(var e=0;e<d.concurrency;e++)c++,h()}},idle:function(){return 0===c&&0===d.length()},length:function(){for(var e=s,n=0;e;)e=e.next,n++;return n},getQueue:function(){for(var e=s,n=[];e;)n.push(e.value),e=e.next;return n},unshift:function(t,r){var a=i.get();a.context=e,a.release=h,a.value=t,a.callback=r||o,c===d.concurrency||d.paused?s?(a.next=s,s=a):(s=a,l=a,d.saturated()):(c++,n.call(e,a.value,a.worked))},empty:o,kill:function(){s=null,l=null,d.drain=o},killAndDrain:function(){s=null,l=null,d.drain(),d.drain=o},error:function(e){u=e}};return d;function h(t){t&&i.release(t);var r=s;r?d.paused?c--:(l===s&&(l=null),s=r.next,r.next=null,n.call(e,r.value,r.worked),null===l&&d.empty()):0==--c&&d.drain()}}function o(){}function a(){this.value=null,this.callback=o,this.next=null,this.release=o,this.context=null,this.errorHandler=null;var e=this;this.worked=function(n,t){var r=e.callback,i=e.errorHandler,a=e.value;e.value=null,e.callback=o,e.errorHandler&&i(n,a),r.call(e.context,n,t),e.release(e)}}e.exports=i,e.exports.promise=function(e,n,t){"function"==typeof e&&(t=n,n=e,e=null);var r=i(e,(function(e,t){n.call(this,e).then((function(e){t(null,e)}),t)}),t),a=r.push,s=r.unshift;return r.push=function(e){var n=new Promise((function(n,t){a(e,(function(e,r){e?t(e):n(r)}))}));return n.catch(o),n},r.unshift=function(e){var n=new Promise((function(n,t){s(e,(function(e,r){e?t(e):n(r)}))}));return n.catch(o),n},r.drained=function(){var e=r.drain;return new Promise((function(n){r.drain=function(){e(),n()}}))},r}},2664:(e,n,t)=>{"use strict";const r=t(3837),i=t(5702),o=e=>null!==e&&"object"==typeof e&&!Array.isArray(e),a=e=>"number"==typeof e||"string"==typeof e&&""!==e,s=e=>Number.isInteger(+e),l=e=>{let n=`${e}`,t=-1;if("-"===n[0]&&(n=n.slice(1)),"0"===n)return!1;for(;"0"===n[++t];);return t>0},c=(e,n,t)=>{if(n>0){let t="-"===e[0]?"-":"";t&&(e=e.slice(1)),e=t+e.padStart(t?n-1:n,"0")}return!1===t?String(e):e},u=(e,n)=>{let t="-"===e[0]?"-":"";for(t&&(e=e.slice(1),n--);e.length<n;)e="0"+e;return t?"-"+e:e},d=(e,n,t,r)=>{if(t)return i(e,n,{wrap:!1,...r});let o=String.fromCharCode(e);return e===n?o:`[${o}-${String.fromCharCode(n)}]`},h=(e,n,t)=>{if(Array.isArray(e)){let n=!0===t.wrap,r=t.capture?"":"?:";return n?`(${r}${e.join("|")})`:e.join("|")}return i(e,n,t)},p=(...e)=>new RangeError("Invalid range arguments: "+r.inspect(...e)),f=(e,n,t)=>{if(!0===t.strictRanges)throw p([e,n]);return[]},m=(e,n,t,r={})=>{if(null==n&&a(e))return[e];if(!a(e)||!a(n))return f(e,n,r);if("function"==typeof t)return m(e,n,1,{transform:t});if(o(t))return m(e,n,0,t);let i={...r};return!0===i.capture&&(i.wrap=!0),t=t||i.step||1,s(t)?s(e)&&s(n)?((e,n,t=1,r={})=>{let i=Number(e),o=Number(n);if(!Number.isInteger(i)||!Number.isInteger(o)){if(!0===r.strictRanges)throw p([e,n]);return[]}0===i&&(i=0),0===o&&(o=0);let a=i>o,s=String(e),f=String(n),m=String(t);t=Math.max(Math.abs(t),1);let g=l(s)||l(f)||l(m),E=g?Math.max(s.length,f.length,m.length):0,T=!1===g&&!1===((e,n,t)=>"string"==typeof e||"string"==typeof n||!0===t.stringify)(e,n,r),R=r.transform||(e=>n=>!0===e?Number(n):String(n))(T);if(r.toRegex&&1===t)return d(u(e,E),u(n,E),!0,r);let S={negatives:[],positives:[]},y=[],A=0;for(;a?i>=o:i<=o;)!0===r.toRegex&&t>1?S[(v=i)<0?"negatives":"positives"].push(Math.abs(v)):y.push(c(R(i,A),E,T)),i=a?i-t:i+t,A++;var v;return!0===r.toRegex?t>1?((e,n)=>{e.negatives.sort(((e,n)=>e<n?-1:e>n?1:0)),e.positives.sort(((e,n)=>e<n?-1:e>n?1:0));let t,r=n.capture?"":"?:",i="",o="";return e.positives.length&&(i=e.positives.join("|")),e.negatives.length&&(o=`-(${r}${e.negatives.join("|")})`),t=i&&o?`${i}|${o}`:i||o,n.wrap?`(${r}${t})`:t})(S,r):h(y,null,{wrap:!1,...r}):y})(e,n,t,i):((e,n,t=1,r={})=>{if(!s(e)&&e.length>1||!s(n)&&n.length>1)return f(e,n,r);let i=r.transform||(e=>String.fromCharCode(e)),o=`${e}`.charCodeAt(0),a=`${n}`.charCodeAt(0),l=o>a,c=Math.min(o,a),u=Math.max(o,a);if(r.toRegex&&1===t)return d(c,u,!1,r);let p=[],m=0;for(;l?o>=a:o<=a;)p.push(i(o,m)),o=l?o-t:o+t,m++;return!0===r.toRegex?h(p,null,{wrap:!1,options:r}):p})(e,n,Math.max(Math.abs(t),1),i):null==t||o(t)?m(e,n,1,t):((e,n)=>{if(!0===n.strictRanges)throw new TypeError(`Expected step "${e}" to be a number`);return[]})(t,i)};e.exports=m},7334:(e,n,t)=>{e.exports=u,u.realpath=u,u.sync=d,u.realpathSync=d,u.monkeypatch=function(){r.realpath=u,r.realpathSync=d},u.unmonkeypatch=function(){r.realpath=i,r.realpathSync=o};var r=t(7147),i=r.realpath,o=r.realpathSync,a=process.version,s=/^v[0-5]\./.test(a),l=t(7059);function c(e){return e&&"realpath"===e.syscall&&("ELOOP"===e.code||"ENOMEM"===e.code||"ENAMETOOLONG"===e.code)}function u(e,n,t){if(s)return i(e,n,t);"function"==typeof n&&(t=n,n=null),i(e,n,(function(r,i){c(r)?l.realpath(e,n,t):t(r,i)}))}function d(e,n){if(s)return o(e,n);try{return o(e,n)}catch(t){if(c(t))return l.realpathSync(e,n);throw t}}},7059:(e,n,t)=>{var r=t(1017),i="win32"===process.platform,o=t(7147),a=process.env.NODE_DEBUG&&/fs/.test(process.env.NODE_DEBUG);if(r.normalize,i)var s=/(.*?)(?:[\/\\]+|$)/g;else s=/(.*?)(?:[\/]+|$)/g;if(i)var l=/^(?:[a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/][^\\\/]+)?[\\\/]*/;else l=/^[\/]*/;n.realpathSync=function(e,n){if(e=r.resolve(e),n&&Object.prototype.hasOwnProperty.call(n,e))return n[e];var t,a,c,u,d=e,h={},p={};function f(){var n=l.exec(e);t=n[0].length,a=n[0],c=n[0],u="",i&&!p[c]&&(o.lstatSync(c),p[c]=!0)}for(f();t<e.length;){s.lastIndex=t;var m=s.exec(e);if(u=a,a+=m[0],c=u+m[1],t=s.lastIndex,!(p[c]||n&&n[c]===c)){var g;if(n&&Object.prototype.hasOwnProperty.call(n,c))g=n[c];else{var E=o.lstatSync(c);if(!E.isSymbolicLink()){p[c]=!0,n&&(n[c]=c);continue}var T=null;if(!i){var R=E.dev.toString(32)+":"+E.ino.toString(32);h.hasOwnProperty(R)&&(T=h[R])}null===T&&(o.statSync(c),T=o.readlinkSync(c)),g=r.resolve(u,T),n&&(n[c]=g),i||(h[R]=T)}e=r.resolve(g,e.slice(t)),f()}}return n&&(n[d]=e),e},n.realpath=function(e,n,t){if("function"!=typeof t&&(t=function(e){return"function"==typeof e?e:function(){var e;if(a){var n=new Error;e=function(e){e&&(n.message=e.message,t(e=n))}}else e=t;return e;function t(e){if(e){if(process.throwDeprecation)throw e;if(!process.noDeprecation){var n="fs: missing callback "+(e.stack||e.message);process.traceDeprecation?console.trace(n):console.error(n)}}}}()}(n),n=null),e=r.resolve(e),n&&Object.prototype.hasOwnProperty.call(n,e))return process.nextTick(t.bind(null,null,n[e]));var c,u,d,h,p=e,f={},m={};function g(){var n=l.exec(e);c=n[0].length,u=n[0],d=n[0],h="",i&&!m[d]?o.lstat(d,(function(e){if(e)return t(e);m[d]=!0,E()})):process.nextTick(E)}function E(){if(c>=e.length)return n&&(n[p]=e),t(null,e);s.lastIndex=c;var r=s.exec(e);return h=u,u+=r[0],d=h+r[1],c=s.lastIndex,m[d]||n&&n[d]===d?process.nextTick(E):n&&Object.prototype.hasOwnProperty.call(n,d)?S(n[d]):o.lstat(d,T)}function T(e,r){if(e)return t(e);if(!r.isSymbolicLink())return m[d]=!0,n&&(n[d]=d),process.nextTick(E);if(!i){var a=r.dev.toString(32)+":"+r.ino.toString(32);if(f.hasOwnProperty(a))return R(null,f[a],d)}o.stat(d,(function(e){if(e)return t(e);o.readlink(d,(function(e,n){i||(f[a]=n),R(e,n)}))}))}function R(e,i,o){if(e)return t(e);var a=r.resolve(h,i);n&&(n[o]=a),S(a)}function S(n){e=r.resolve(n,e.slice(c)),g()}g()}},6772:(e,n,t)=>{function r(e,n){return Object.prototype.hasOwnProperty.call(e,n)}n.setopts=function(e,n,t){if(t||(t={}),t.matchBase&&-1===n.indexOf("/")){if(t.noglobstar)throw new Error("base matching requires globstar");n="**/"+n}e.silent=!!t.silent,e.pattern=n,e.strict=!1!==t.strict,e.realpath=!!t.realpath,e.realpathCache=t.realpathCache||Object.create(null),e.follow=!!t.follow,e.dot=!!t.dot,e.mark=!!t.mark,e.nodir=!!t.nodir,e.nodir&&(e.mark=!0),e.sync=!!t.sync,e.nounique=!!t.nounique,e.nonull=!!t.nonull,e.nosort=!!t.nosort,e.nocase=!!t.nocase,e.stat=!!t.stat,e.noprocess=!!t.noprocess,e.absolute=!!t.absolute,e.fs=t.fs||i,e.maxLength=t.maxLength||1/0,e.cache=t.cache||Object.create(null),e.statCache=t.statCache||Object.create(null),e.symlinks=t.symlinks||Object.create(null),function(e,n){e.ignore=n.ignore||[],Array.isArray(e.ignore)||(e.ignore=[e.ignore]),e.ignore.length&&(e.ignore=e.ignore.map(u))}(e,t),e.changedCwd=!1;var a=process.cwd();r(t,"cwd")?(e.cwd=o.resolve(t.cwd),e.changedCwd=e.cwd!==a):e.cwd=o.resolve(a),e.root=t.root||o.resolve(e.cwd,"/"),e.root=o.resolve(e.root),e.cwdAbs=s(e.cwd)?e.cwd:d(e,e.cwd),e.nomount=!!t.nomount,"win32"===process.platform&&(e.root=e.root.replace(/\\/g,"/"),e.cwd=e.cwd.replace(/\\/g,"/"),e.cwdAbs=e.cwdAbs.replace(/\\/g,"/")),t.nonegate=!0,t.nocomment=!0,t.allowWindowsEscape=!0,e.minimatch=new l(n,t),e.options=e.minimatch.options},n.ownProp=r,n.makeAbs=d,n.finish=function(e){for(var n=e.nounique,t=n?[]:Object.create(null),r=0,i=e.matches.length;r<i;r++){var o=e.matches[r];if(o&&0!==Object.keys(o).length){var a=Object.keys(o);n?t.push.apply(t,a):a.forEach((function(e){t[e]=!0}))}else if(e.nonull){var s=e.minimatch.globSet[r];n?t.push(s):t[s]=!0}}if(n||(t=Object.keys(t)),e.nosort||(t=t.sort(c)),e.mark){for(r=0;r<t.length;r++)t[r]=e._mark(t[r]);e.nodir&&(t=t.filter((function(n){var t=!/\/$/.test(n),r=e.cache[n]||e.cache[d(e,n)];return t&&r&&(t="DIR"!==r&&!Array.isArray(r)),t})))}e.ignore.length&&(t=t.filter((function(n){return!h(e,n)}))),e.found=t},n.mark=function(e,n){var t=d(e,n),r=e.cache[t],i=n;if(r){var o="DIR"===r||Array.isArray(r),a="/"===n.slice(-1);if(o&&!a?i+="/":!o&&a&&(i=i.slice(0,-1)),i!==n){var s=d(e,i);e.statCache[s]=e.statCache[t],e.cache[s]=e.cache[t]}}return i},n.isIgnored=h,n.childrenIgnored=function(e,n){return!!e.ignore.length&&e.ignore.some((function(e){return!(!e.gmatcher||!e.gmatcher.match(n))}))};var i=t(7147),o=t(1017),a=t(6522),s=t(1017).isAbsolute,l=a.Minimatch;function c(e,n){return e.localeCompare(n,"en")}function u(e){var n=null;if("/**"===e.slice(-3)){var t=e.replace(/(\/\*\*)+$/,"");n=new l(t,{dot:!0})}return{matcher:new l(e,{dot:!0}),gmatcher:n}}function d(e,n){var t=n;return t="/"===n.charAt(0)?o.join(e.root,n):s(n)||""===n?n:e.changedCwd?o.resolve(e.cwd,n):o.resolve(n),"win32"===process.platform&&(t=t.replace(/\\/g,"/")),t}function h(e,n){return!!e.ignore.length&&e.ignore.some((function(e){return e.matcher.match(n)||!(!e.gmatcher||!e.gmatcher.match(n))}))}},2884:(e,n,t)=>{e.exports=T;var r=t(7334),i=t(6522),o=(i.Minimatch,t(4378)),a=t(2361).EventEmitter,s=t(1017),l=t(9491),c=t(1017).isAbsolute,u=t(4751),d=t(6772),h=d.setopts,p=d.ownProp,f=t(7844),m=(t(3837),d.childrenIgnored),g=d.isIgnored,E=t(778);function T(e,n,t){if("function"==typeof n&&(t=n,n={}),n||(n={}),n.sync){if(t)throw new TypeError("callback provided to sync glob");return u(e,n)}return new S(e,n,t)}T.sync=u;var R=T.GlobSync=u.GlobSync;function S(e,n,t){if("function"==typeof n&&(t=n,n=null),n&&n.sync){if(t)throw new TypeError("callback provided to sync glob");return new R(e,n)}if(!(this instanceof S))return new S(e,n,t);h(this,e,n),this._didRealPath=!1;var r=this.minimatch.set.length;this.matches=new Array(r),"function"==typeof t&&(t=E(t),this.on("error",t),this.on("end",(function(e){t(null,e)})));var i=this;if(this._processing=0,this._emitQueue=[],this._processQueue=[],this.paused=!1,this.noprocess)return this;if(0===r)return a();for(var o=0;o<r;o++)this._process(this.minimatch.set[o],o,!1,a);function a(){--i._processing,i._processing<=0&&i._finish()}}T.glob=T,T.hasMagic=function(e,n){var t=function(e,n){if(null===n||"object"!=typeof n)return e;for(var t=Object.keys(n),r=t.length;r--;)e[t[r]]=n[t[r]];return e}({},n);t.noprocess=!0;var r=new S(e,t).minimatch.set;if(!e)return!1;if(r.length>1)return!0;for(var i=0;i<r[0].length;i++)if("string"!=typeof r[0][i])return!0;return!1},T.Glob=S,o(S,a),S.prototype._finish=function(){if(l(this instanceof S),!this.aborted){if(this.realpath&&!this._didRealpath)return this._realpath();d.finish(this),this.emit("end",this.found)}},S.prototype._realpath=function(){if(!this._didRealpath){this._didRealpath=!0;var e=this.matches.length;if(0===e)return this._finish();for(var n=this,t=0;t<this.matches.length;t++)this._realpathSet(t,r)}function r(){0==--e&&n._finish()}},S.prototype._realpathSet=function(e,n){var t=this.matches[e];if(!t)return n();var i=Object.keys(t),o=this,a=i.length;if(0===a)return n();var s=this.matches[e]=Object.create(null);i.forEach((function(t,i){t=o._makeAbs(t),r.realpath(t,o.realpathCache,(function(r,i){r?"stat"===r.syscall?s[t]=!0:o.emit("error",r):s[i]=!0,0==--a&&(o.matches[e]=s,n())}))}))},S.prototype._mark=function(e){return d.mark(this,e)},S.prototype._makeAbs=function(e){return d.makeAbs(this,e)},S.prototype.abort=function(){this.aborted=!0,this.emit("abort")},S.prototype.pause=function(){this.paused||(this.paused=!0,this.emit("pause"))},S.prototype.resume=function(){if(this.paused){if(this.emit("resume"),this.paused=!1,this._emitQueue.length){var e=this._emitQueue.slice(0);this._emitQueue.length=0;for(var n=0;n<e.length;n++){var t=e[n];this._emitMatch(t[0],t[1])}}if(this._processQueue.length){var r=this._processQueue.slice(0);for(this._processQueue.length=0,n=0;n<r.length;n++){var i=r[n];this._processing--,this._process(i[0],i[1],i[2],i[3])}}}},S.prototype._process=function(e,n,t,r){if(l(this instanceof S),l("function"==typeof r),!this.aborted)if(this._processing++,this.paused)this._processQueue.push([e,n,t,r]);else{for(var o,a=0;"string"==typeof e[a];)a++;switch(a){case e.length:return void this._processSimple(e.join("/"),n,r);case 0:o=null;break;default:o=e.slice(0,a).join("/")}var s,u=e.slice(a);null===o?s=".":c(o)||c(e.map((function(e){return"string"==typeof e?e:"[*]"})).join("/"))?(o&&c(o)||(o="/"+o),s=o):s=o;var d=this._makeAbs(s);if(m(this,s))return r();u[0]===i.GLOBSTAR?this._processGlobStar(o,s,d,u,n,t,r):this._processReaddir(o,s,d,u,n,t,r)}},S.prototype._processReaddir=function(e,n,t,r,i,o,a){var s=this;this._readdir(t,o,(function(l,c){return s._processReaddir2(e,n,t,r,i,o,c,a)}))},S.prototype._processReaddir2=function(e,n,t,r,i,o,a,l){if(!a)return l();for(var c=r[0],u=!!this.minimatch.negate,d=c._glob,h=this.dot||"."===d.charAt(0),p=[],f=0;f<a.length;f++)("."!==(g=a[f]).charAt(0)||h)&&(u&&!e?!g.match(c):g.match(c))&&p.push(g);var m=p.length;if(0===m)return l();if(1===r.length&&!this.mark&&!this.stat){for(this.matches[i]||(this.matches[i]=Object.create(null)),f=0;f<m;f++){var g=p[f];e&&(g="/"!==e?e+"/"+g:e+g),"/"!==g.charAt(0)||this.nomount||(g=s.join(this.root,g)),this._emitMatch(i,g)}return l()}for(r.shift(),f=0;f<m;f++)g=p[f],e&&(g="/"!==e?e+"/"+g:e+g),this._process([g].concat(r),i,o,l);l()},S.prototype._emitMatch=function(e,n){if(!this.aborted&&!g(this,n))if(this.paused)this._emitQueue.push([e,n]);else{var t=c(n)?n:this._makeAbs(n);if(this.mark&&(n=this._mark(n)),this.absolute&&(n=t),!this.matches[e][n]){if(this.nodir){var r=this.cache[t];if("DIR"===r||Array.isArray(r))return}this.matches[e][n]=!0;var i=this.statCache[t];i&&this.emit("stat",n,i),this.emit("match",n)}}},S.prototype._readdirInGlobStar=function(e,n){if(!this.aborted){if(this.follow)return this._readdir(e,!1,n);var t=this,r=f("lstat\0"+e,(function(r,i){if(r&&"ENOENT"===r.code)return n();var o=i&&i.isSymbolicLink();t.symlinks[e]=o,o||!i||i.isDirectory()?t._readdir(e,!1,n):(t.cache[e]="FILE",n())}));r&&t.fs.lstat(e,r)}},S.prototype._readdir=function(e,n,t){if(!this.aborted&&(t=f("readdir\0"+e+"\0"+n,t))){if(n&&!p(this.symlinks,e))return this._readdirInGlobStar(e,t);if(p(this.cache,e)){var r=this.cache[e];if(!r||"FILE"===r)return t();if(Array.isArray(r))return t(null,r)}this.fs.readdir(e,function(e,n,t){return function(r,i){r?e._readdirError(n,r,t):e._readdirEntries(n,i,t)}}(this,e,t))}},S.prototype._readdirEntries=function(e,n,t){if(!this.aborted){if(!this.mark&&!this.stat)for(var r=0;r<n.length;r++){var i=n[r];i="/"===e?e+i:e+"/"+i,this.cache[i]=!0}return this.cache[e]=n,t(null,n)}},S.prototype._readdirError=function(e,n,t){if(!this.aborted){switch(n.code){case"ENOTSUP":case"ENOTDIR":var r=this._makeAbs(e);if(this.cache[r]="FILE",r===this.cwdAbs){var i=new Error(n.code+" invalid cwd "+this.cwd);i.path=this.cwd,i.code=n.code,this.emit("error",i),this.abort()}break;case"ENOENT":case"ELOOP":case"ENAMETOOLONG":case"UNKNOWN":this.cache[this._makeAbs(e)]=!1;break;default:this.cache[this._makeAbs(e)]=!1,this.strict&&(this.emit("error",n),this.abort()),this.silent||console.error("glob error",n)}return t()}},S.prototype._processGlobStar=function(e,n,t,r,i,o,a){var s=this;this._readdir(t,o,(function(l,c){s._processGlobStar2(e,n,t,r,i,o,c,a)}))},S.prototype._processGlobStar2=function(e,n,t,r,i,o,a,s){if(!a)return s();var l=r.slice(1),c=e?[e]:[],u=c.concat(l);this._process(u,i,!1,s);var d=this.symlinks[t],h=a.length;if(d&&o)return s();for(var p=0;p<h;p++)if("."!==a[p].charAt(0)||this.dot){var f=c.concat(a[p],l);this._process(f,i,!0,s);var m=c.concat(a[p],r);this._process(m,i,!0,s)}s()},S.prototype._processSimple=function(e,n,t){var r=this;this._stat(e,(function(i,o){r._processSimple2(e,n,i,o,t)}))},S.prototype._processSimple2=function(e,n,t,r,i){if(this.matches[n]||(this.matches[n]=Object.create(null)),!r)return i();if(e&&c(e)&&!this.nomount){var o=/[\/\\]$/.test(e);"/"===e.charAt(0)?e=s.join(this.root,e):(e=s.resolve(this.root,e),o&&(e+="/"))}"win32"===process.platform&&(e=e.replace(/\\/g,"/")),this._emitMatch(n,e),i()},S.prototype._stat=function(e,n){var t=this._makeAbs(e),r="/"===e.slice(-1);if(e.length>this.maxLength)return n();if(!this.stat&&p(this.cache,t)){var i=this.cache[t];if(Array.isArray(i)&&(i="DIR"),!r||"DIR"===i)return n(null,i);if(r&&"FILE"===i)return n()}var o=this.statCache[t];if(void 0!==o){if(!1===o)return n(null,o);var a=o.isDirectory()?"DIR":"FILE";return r&&"FILE"===a?n():n(null,a,o)}var s=this,l=f("stat\0"+t,(function(r,i){if(i&&i.isSymbolicLink())return s.fs.stat(t,(function(r,o){r?s._stat2(e,t,null,i,n):s._stat2(e,t,r,o,n)}));s._stat2(e,t,r,i,n)}));l&&s.fs.lstat(t,l)},S.prototype._stat2=function(e,n,t,r,i){if(t&&("ENOENT"===t.code||"ENOTDIR"===t.code))return this.statCache[n]=!1,i();var o="/"===e.slice(-1);if(this.statCache[n]=r,"/"===n.slice(-1)&&r&&!r.isDirectory())return i(null,!1,r);var a=!0;return r&&(a=r.isDirectory()?"DIR":"FILE"),this.cache[n]=this.cache[n]||a,o&&"FILE"===a?i():i(null,a,r)}},5146:(e,n,t)=>{var r=t(5623);e.exports=function(e){return e?("{}"===e.substr(0,2)&&(e="\\{\\}"+e.substr(2)),g(function(e){return e.split("\\\\").join(i).split("\\{").join(o).split("\\}").join(a).split("\\,").join(s).split("\\.").join(l)}(e),!0).map(u)):[]};var i="\0SLASH"+Math.random()+"\0",o="\0OPEN"+Math.random()+"\0",a="\0CLOSE"+Math.random()+"\0",s="\0COMMA"+Math.random()+"\0",l="\0PERIOD"+Math.random()+"\0";function c(e){return parseInt(e,10)==e?parseInt(e,10):e.charCodeAt(0)}function u(e){return e.split(i).join("\\").split(o).join("{").split(a).join("}").split(s).join(",").split(l).join(".")}function d(e){if(!e)return[""];var n=[],t=r("{","}",e);if(!t)return e.split(",");var i=t.pre,o=t.body,a=t.post,s=i.split(",");s[s.length-1]+="{"+o+"}";var l=d(a);return a.length&&(s[s.length-1]+=l.shift(),s.push.apply(s,l)),n.push.apply(n,s),n}function h(e){return"{"+e+"}"}function p(e){return/^-?0\d/.test(e)}function f(e,n){return e<=n}function m(e,n){return e>=n}function g(e,n){var t=[],i=r("{","}",e);if(!i)return[e];var o=i.pre,s=i.post.length?g(i.post,!1):[""];if(/\$$/.test(i.pre))for(var l=0;l<s.length;l++){var u=o+"{"+i.body+"}"+s[l];t.push(u)}else{var E,T,R=/^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(i.body),S=/^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(i.body),y=R||S,A=i.body.indexOf(",")>=0;if(!y&&!A)return i.post.match(/,.*\}/)?g(e=i.pre+"{"+i.body+a+i.post):[e];if(y)E=i.body.split(/\.\./);else if(1===(E=d(i.body)).length&&1===(E=g(E[0],!1).map(h)).length)return s.map((function(e){return i.pre+E[0]+e}));if(y){var v=c(E[0]),I=c(E[1]),C=Math.max(E[0].length,E[1].length),_=3==E.length?Math.abs(c(E[2])):1,b=f;I<v&&(_*=-1,b=m);var O=E.some(p);T=[];for(var D=v;b(D,I);D+=_){var N;if(S)"\\"===(N=String.fromCharCode(D))&&(N="");else if(N=String(D),O){var w=C-N.length;if(w>0){var L=new Array(w+1).join("0");N=D<0?"-"+L+N.slice(1):L+N}}T.push(N)}}else{T=[];for(var x=0;x<E.length;x++)T.push.apply(T,g(E[x],!1))}for(x=0;x<T.length;x++)for(l=0;l<s.length;l++)u=o+T[x]+s[l],(!n||y||u)&&t.push(u)}return t}},4340:e=>{const n="object"==typeof process&&process&&"win32"===process.platform;e.exports=n?{sep:"\\"}:{sep:"/"}},6522:(e,n,t)=>{const r=e.exports=(e,n,t={})=>(g(n),!(!t.nocomment&&"#"===n.charAt(0))&&new T(n,t).match(e));e.exports=r;const i=t(4340);r.sep=i.sep;const o=Symbol("globstar **");r.GLOBSTAR=o;const a=t(5146),s={"!":{open:"(?:(?!(?:",close:"))[^/]*?)"},"?":{open:"(?:",close:")?"},"+":{open:"(?:",close:")+"},"*":{open:"(?:",close:")*"},"@":{open:"(?:",close:")"}},l="[^/]",c="[^/]*?",u=e=>e.split("").reduce(((e,n)=>(e[n]=!0,e)),{}),d=u("().*{}+?[]^$\\!"),h=u("[.("),p=/\/+/;r.filter=(e,n={})=>(t,i,o)=>r(t,e,n);const f=(e,n={})=>{const t={};return Object.keys(e).forEach((n=>t[n]=e[n])),Object.keys(n).forEach((e=>t[e]=n[e])),t};r.defaults=e=>{if(!e||"object"!=typeof e||!Object.keys(e).length)return r;const n=r,t=(t,r,i)=>n(t,r,f(e,i));return(t.Minimatch=class extends n.Minimatch{constructor(n,t){super(n,f(e,t))}}).defaults=t=>n.defaults(f(e,t)).Minimatch,t.filter=(t,r)=>n.filter(t,f(e,r)),t.defaults=t=>n.defaults(f(e,t)),t.makeRe=(t,r)=>n.makeRe(t,f(e,r)),t.braceExpand=(t,r)=>n.braceExpand(t,f(e,r)),t.match=(t,r,i)=>n.match(t,r,f(e,i)),t},r.braceExpand=(e,n)=>m(e,n);const m=(e,n={})=>(g(e),n.nobrace||!/\{(?:(?!\{).)*\}/.test(e)?[e]:a(e)),g=e=>{if("string"!=typeof e)throw new TypeError("invalid pattern");if(e.length>65536)throw new TypeError("pattern is too long")},E=Symbol("subparse");r.makeRe=(e,n)=>new T(e,n||{}).makeRe(),r.match=(e,n,t={})=>{const r=new T(n,t);return e=e.filter((e=>r.match(e))),r.options.nonull&&!e.length&&e.push(n),e};class T{constructor(e,n){g(e),n||(n={}),this.options=n,this.set=[],this.pattern=e,this.regexp=null,this.negate=!1,this.comment=!1,this.empty=!1,this.partial=!!n.partial,this.make()}debug(){}make(){const e=this.pattern,n=this.options;if(!n.nocomment&&"#"===e.charAt(0))return void(this.comment=!0);if(!e)return void(this.empty=!0);this.parseNegate();let t=this.globSet=this.braceExpand();n.debug&&(this.debug=(...e)=>console.error(...e)),this.debug(this.pattern,t),t=this.globParts=t.map((e=>e.split(p))),this.debug(this.pattern,t),t=t.map(((e,n,t)=>e.map(this.parse,this))),this.debug(this.pattern,t),t=t.filter((e=>-1===e.indexOf(!1))),this.debug(this.pattern,t),this.set=t}parseNegate(){if(this.options.nonegate)return;const e=this.pattern;let n=!1,t=0;for(let r=0;r<e.length&&"!"===e.charAt(r);r++)n=!n,t++;t&&(this.pattern=e.substr(t)),this.negate=n}matchOne(e,n,t){var r=this.options;this.debug("matchOne",{this:this,file:e,pattern:n}),this.debug("matchOne",e.length,n.length);for(var i=0,a=0,s=e.length,l=n.length;i<s&&a<l;i++,a++){this.debug("matchOne loop");var c,u=n[a],d=e[i];if(this.debug(n,u,d),!1===u)return!1;if(u===o){this.debug("GLOBSTAR",[n,u,d]);var h=i,p=a+1;if(p===l){for(this.debug("** at the end");i<s;i++)if("."===e[i]||".."===e[i]||!r.dot&&"."===e[i].charAt(0))return!1;return!0}for(;h<s;){var f=e[h];if(this.debug("\nglobstar while",e,h,n,p,f),this.matchOne(e.slice(h),n.slice(p),t))return this.debug("globstar found match!",h,s,f),!0;if("."===f||".."===f||!r.dot&&"."===f.charAt(0)){this.debug("dot detected!",e,h,n,p);break}this.debug("globstar swallow a segment, and continue"),h++}return!(!t||(this.debug("\n>>> no match, partial?",e,h,n,p),h!==s))}if("string"==typeof u?(c=d===u,this.debug("string match",u,d,c)):(c=d.match(u),this.debug("pattern match",u,d,c)),!c)return!1}if(i===s&&a===l)return!0;if(i===s)return t;if(a===l)return i===s-1&&""===e[i];throw new Error("wtf?")}braceExpand(){return m(this.pattern,this.options)}parse(e,n){g(e);const t=this.options;if("**"===e){if(!t.noglobstar)return o;e="*"}if(""===e)return"";let r="",i=!!t.nocase,a=!1;const u=[],p=[];let f,m,T,R,S=!1,y=-1,A=-1;const v="."===e.charAt(0)?"":t.dot?"(?!(?:^|\\/)\\.{1,2}(?:$|\\/))":"(?!\\.)",I=()=>{if(f){switch(f){case"*":r+=c,i=!0;break;case"?":r+=l,i=!0;break;default:r+="\\"+f}this.debug("clearStateChar %j %j",f,r),f=!1}};for(let n,o=0;o<e.length&&(n=e.charAt(o));o++)if(this.debug("%s\t%s %s %j",e,o,r,n),a){if("/"===n)return!1;d[n]&&(r+="\\"),r+=n,a=!1}else switch(n){case"/":return!1;case"\\":I(),a=!0;continue;case"?":case"*":case"+":case"@":case"!":if(this.debug("%s\t%s %s %j <-- stateChar",e,o,r,n),S){this.debug("  in class"),"!"===n&&o===A+1&&(n="^"),r+=n;continue}this.debug("call clearStateChar %j",f),I(),f=n,t.noext&&I();continue;case"(":if(S){r+="(";continue}if(!f){r+="\\(";continue}u.push({type:f,start:o-1,reStart:r.length,open:s[f].open,close:s[f].close}),r+="!"===f?"(?:(?!(?:":"(?:",this.debug("plType %j %j",f,r),f=!1;continue;case")":if(S||!u.length){r+="\\)";continue}I(),i=!0,T=u.pop(),r+=T.close,"!"===T.type&&p.push(T),T.reEnd=r.length;continue;case"|":if(S||!u.length){r+="\\|";continue}I(),r+="|";continue;case"[":if(I(),S){r+="\\"+n;continue}S=!0,A=o,y=r.length,r+=n;continue;case"]":if(o===A+1||!S){r+="\\"+n;continue}m=e.substring(A+1,o);try{RegExp("["+m+"]")}catch(e){R=this.parse(m,E),r=r.substr(0,y)+"\\["+R[0]+"\\]",i=i||R[1],S=!1;continue}i=!0,S=!1,r+=n;continue;default:I(),!d[n]||"^"===n&&S||(r+="\\"),r+=n}for(S&&(m=e.substr(A+1),R=this.parse(m,E),r=r.substr(0,y)+"\\["+R[0],i=i||R[1]),T=u.pop();T;T=u.pop()){let e;e=r.slice(T.reStart+T.open.length),this.debug("setting tail",r,T),e=e.replace(/((?:\\{2}){0,64})(\\?)\|/g,((e,n,t)=>(t||(t="\\"),n+n+t+"|"))),this.debug("tail=%j\n   %s",e,e,T,r);const n="*"===T.type?c:"?"===T.type?l:"\\"+T.type;i=!0,r=r.slice(0,T.reStart)+n+"\\("+e}I(),a&&(r+="\\\\");const C=h[r.charAt(0)];for(let e=p.length-1;e>-1;e--){const t=p[e],i=r.slice(0,t.reStart),o=r.slice(t.reStart,t.reEnd-8);let a=r.slice(t.reEnd);const s=r.slice(t.reEnd-8,t.reEnd)+a,l=i.split("(").length-1;let c=a;for(let e=0;e<l;e++)c=c.replace(/\)[+*?]?/,"");a=c,r=i+o+a+(""===a&&n!==E?"$":"")+s}if(""!==r&&i&&(r="(?=.)"+r),C&&(r=v+r),n===E)return[r,i];if(!i)return e.replace(/\\(.)/g,"$1");const _=t.nocase?"i":"";try{return Object.assign(new RegExp("^"+r+"$",_),{_glob:e,_src:r})}catch(e){return new RegExp("$.")}}makeRe(){if(this.regexp||!1===this.regexp)return this.regexp;const e=this.set;if(!e.length)return this.regexp=!1,this.regexp;const n=this.options,t=n.noglobstar?c:n.dot?"(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?":"(?:(?!(?:\\/|^)\\.).)*?",r=n.nocase?"i":"";let i=e.map((e=>(e=e.map((e=>"string"==typeof e?e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"):e===o?o:e._src)).reduce(((e,n)=>(e[e.length-1]===o&&n===o||e.push(n),e)),[]),e.forEach(((n,r)=>{n===o&&e[r-1]!==o&&(0===r?e.length>1?e[r+1]="(?:\\/|"+t+"\\/)?"+e[r+1]:e[r]=t:r===e.length-1?e[r-1]+="(?:\\/|"+t+")?":(e[r-1]+="(?:\\/|\\/"+t+"\\/)"+e[r+1],e[r+1]=o))})),e.filter((e=>e!==o)).join("/")))).join("|");i="^(?:"+i+")$",this.negate&&(i="^(?!"+i+").*$");try{this.regexp=new RegExp(i,r)}catch(e){this.regexp=!1}return this.regexp}match(e,n=this.partial){if(this.debug("match",e,this.pattern),this.comment)return!1;if(this.empty)return""===e;if("/"===e&&n)return!0;const t=this.options;"/"!==i.sep&&(e=e.split(i.sep).join("/")),e=e.split(p),this.debug(this.pattern,"split",e);const r=this.set;let o;this.debug(this.pattern,"set",r);for(let n=e.length-1;n>=0&&(o=e[n],!o);n--);for(let i=0;i<r.length;i++){const a=r[i];let s=e;if(t.matchBase&&1===a.length&&(s=[o]),this.matchOne(s,a,n))return!!t.flipNegate||!this.negate}return!t.flipNegate&&this.negate}static defaults(e){return r.defaults(e).Minimatch}}r.Minimatch=T},4751:(e,n,t)=>{e.exports=p,p.GlobSync=f;var r=t(7334),i=t(6522),o=(i.Minimatch,t(2884).Glob,t(3837),t(1017)),a=t(9491),s=t(1017).isAbsolute,l=t(6772),c=l.setopts,u=l.ownProp,d=l.childrenIgnored,h=l.isIgnored;function p(e,n){if("function"==typeof n||3===arguments.length)throw new TypeError("callback provided to sync glob\nSee: https://github.com/isaacs/node-glob/issues/167");return new f(e,n).found}function f(e,n){if(!e)throw new Error("must provide pattern");if("function"==typeof n||3===arguments.length)throw new TypeError("callback provided to sync glob\nSee: https://github.com/isaacs/node-glob/issues/167");if(!(this instanceof f))return new f(e,n);if(c(this,e,n),this.noprocess)return this;var t=this.minimatch.set.length;this.matches=new Array(t);for(var r=0;r<t;r++)this._process(this.minimatch.set[r],r,!1);this._finish()}f.prototype._finish=function(){if(a.ok(this instanceof f),this.realpath){var e=this;this.matches.forEach((function(n,t){var i=e.matches[t]=Object.create(null);for(var o in n)try{o=e._makeAbs(o),i[r.realpathSync(o,e.realpathCache)]=!0}catch(n){if("stat"!==n.syscall)throw n;i[e._makeAbs(o)]=!0}}))}l.finish(this)},f.prototype._process=function(e,n,t){a.ok(this instanceof f);for(var r,o=0;"string"==typeof e[o];)o++;switch(o){case e.length:return void this._processSimple(e.join("/"),n);case 0:r=null;break;default:r=e.slice(0,o).join("/")}var l,c=e.slice(o);null===r?l=".":s(r)||s(e.map((function(e){return"string"==typeof e?e:"[*]"})).join("/"))?(r&&s(r)||(r="/"+r),l=r):l=r;var u=this._makeAbs(l);d(this,l)||(c[0]===i.GLOBSTAR?this._processGlobStar(r,l,u,c,n,t):this._processReaddir(r,l,u,c,n,t))},f.prototype._processReaddir=function(e,n,t,r,i,a){var s=this._readdir(t,a);if(s){for(var l=r[0],c=!!this.minimatch.negate,u=l._glob,d=this.dot||"."===u.charAt(0),h=[],p=0;p<s.length;p++)("."!==(g=s[p]).charAt(0)||d)&&(c&&!e?!g.match(l):g.match(l))&&h.push(g);var f=h.length;if(0!==f)if(1!==r.length||this.mark||this.stat)for(r.shift(),p=0;p<f;p++){var m;g=h[p],m=e?[e,g]:[g],this._process(m.concat(r),i,a)}else{this.matches[i]||(this.matches[i]=Object.create(null));for(p=0;p<f;p++){var g=h[p];e&&(g="/"!==e.slice(-1)?e+"/"+g:e+g),"/"!==g.charAt(0)||this.nomount||(g=o.join(this.root,g)),this._emitMatch(i,g)}}}},f.prototype._emitMatch=function(e,n){if(!h(this,n)){var t=this._makeAbs(n);if(this.mark&&(n=this._mark(n)),this.absolute&&(n=t),!this.matches[e][n]){if(this.nodir){var r=this.cache[t];if("DIR"===r||Array.isArray(r))return}this.matches[e][n]=!0,this.stat&&this._stat(n)}}},f.prototype._readdirInGlobStar=function(e){if(this.follow)return this._readdir(e,!1);var n,t;try{t=this.fs.lstatSync(e)}catch(e){if("ENOENT"===e.code)return null}var r=t&&t.isSymbolicLink();return this.symlinks[e]=r,r||!t||t.isDirectory()?n=this._readdir(e,!1):this.cache[e]="FILE",n},f.prototype._readdir=function(e,n){if(n&&!u(this.symlinks,e))return this._readdirInGlobStar(e);if(u(this.cache,e)){var t=this.cache[e];if(!t||"FILE"===t)return null;if(Array.isArray(t))return t}try{return this._readdirEntries(e,this.fs.readdirSync(e))}catch(n){return this._readdirError(e,n),null}},f.prototype._readdirEntries=function(e,n){if(!this.mark&&!this.stat)for(var t=0;t<n.length;t++){var r=n[t];r="/"===e?e+r:e+"/"+r,this.cache[r]=!0}return this.cache[e]=n,n},f.prototype._readdirError=function(e,n){switch(n.code){case"ENOTSUP":case"ENOTDIR":var t=this._makeAbs(e);if(this.cache[t]="FILE",t===this.cwdAbs){var r=new Error(n.code+" invalid cwd "+this.cwd);throw r.path=this.cwd,r.code=n.code,r}break;case"ENOENT":case"ELOOP":case"ENAMETOOLONG":case"UNKNOWN":this.cache[this._makeAbs(e)]=!1;break;default:if(this.cache[this._makeAbs(e)]=!1,this.strict)throw n;this.silent||console.error("glob error",n)}},f.prototype._processGlobStar=function(e,n,t,r,i,o){var a=this._readdir(t,o);if(a){var s=r.slice(1),l=e?[e]:[],c=l.concat(s);this._process(c,i,!1);var u=a.length;if(!this.symlinks[t]||!o)for(var d=0;d<u;d++)if("."!==a[d].charAt(0)||this.dot){var h=l.concat(a[d],s);this._process(h,i,!0);var p=l.concat(a[d],r);this._process(p,i,!0)}}},f.prototype._processSimple=function(e,n){var t=this._stat(e);if(this.matches[n]||(this.matches[n]=Object.create(null)),t){if(e&&s(e)&&!this.nomount){var r=/[\/\\]$/.test(e);"/"===e.charAt(0)?e=o.join(this.root,e):(e=o.resolve(this.root,e),r&&(e+="/"))}"win32"===process.platform&&(e=e.replace(/\\/g,"/")),this._emitMatch(n,e)}},f.prototype._stat=function(e){var n=this._makeAbs(e),t="/"===e.slice(-1);if(e.length>this.maxLength)return!1;if(!this.stat&&u(this.cache,n)){var r=this.cache[n];if(Array.isArray(r)&&(r="DIR"),!t||"DIR"===r)return r;if(t&&"FILE"===r)return!1}var i=this.statCache[n];if(!i){var o;try{o=this.fs.lstatSync(n)}catch(e){if(e&&("ENOENT"===e.code||"ENOTDIR"===e.code))return this.statCache[n]=!1,!1}if(o&&o.isSymbolicLink())try{i=this.fs.statSync(n)}catch(e){i=o}else i=o}return this.statCache[n]=i,r=!0,i&&(r=i.isDirectory()?"DIR":"FILE"),this.cache[n]=this.cache[n]||r,(!t||"FILE"!==r)&&r},f.prototype._mark=function(e){return l.mark(this,e)},f.prototype._makeAbs=function(e){return l.makeAbs(this,e)}},7844:(e,n,t)=>{var r=t(2479),i=Object.create(null),o=t(778);function a(e){for(var n=e.length,t=[],r=0;r<n;r++)t[r]=e[r];return t}e.exports=r((function(e,n){return i[e]?(i[e].push(n),null):(i[e]=[n],function(e){return o((function n(){var t=i[e],r=t.length,o=a(arguments);try{for(var s=0;s<r;s++)t[s].apply(null,o)}finally{t.length>r?(t.splice(0,r),process.nextTick((function(){n.apply(null,o)}))):delete i[e]}}))}(e))}))},4378:(e,n,t)=>{try{var r=t(3837);if("function"!=typeof r.inherits)throw"";e.exports=r.inherits}catch(n){e.exports=t(5717)}},5717:e=>{"function"==typeof Object.create?e.exports=function(e,n){n&&(e.super_=n,e.prototype=Object.create(n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:e.exports=function(e,n){if(n){e.super_=n;var t=function(){};t.prototype=n.prototype,e.prototype=new t,e.prototype.constructor=e}}},2428:e=>{e.exports=function(e){if("string"!=typeof e||""===e)return!1;for(var n;n=/(\\).|([@?!+*]\(.*\))/g.exec(e);){if(n[2])return!0;e=e.slice(n.index+n[0].length)}return!1}},6830:(e,n,t)=>{var r=t(2428),i={"{":"}","(":")","[":"]"},o=function(e){if("!"===e[0])return!0;for(var n=0,t=-2,r=-2,o=-2,a=-2,s=-2;n<e.length;){if("*"===e[n])return!0;if("?"===e[n+1]&&/[\].+)]/.test(e[n]))return!0;if(-1!==r&&"["===e[n]&&"]"!==e[n+1]&&(r<n&&(r=e.indexOf("]",n)),r>n)){if(-1===s||s>r)return!0;if(-1===(s=e.indexOf("\\",n))||s>r)return!0}if(-1!==o&&"{"===e[n]&&"}"!==e[n+1]&&(o=e.indexOf("}",n))>n&&(-1===(s=e.indexOf("\\",n))||s>o))return!0;if(-1!==a&&"("===e[n]&&"?"===e[n+1]&&/[:!=]/.test(e[n+2])&&")"!==e[n+3]&&(a=e.indexOf(")",n))>n&&(-1===(s=e.indexOf("\\",n))||s>a))return!0;if(-1!==t&&"("===e[n]&&"|"!==e[n+1]&&(t<n&&(t=e.indexOf("|",n)),-1!==t&&")"!==e[t+1]&&(a=e.indexOf(")",t))>t&&(-1===(s=e.indexOf("\\",t))||s>a)))return!0;if("\\"===e[n]){var l=e[n+1];n+=2;var c=i[l];if(c){var u=e.indexOf(c,n);-1!==u&&(n=u+1)}if("!"===e[n])return!0}else n++}return!1},a=function(e){if("!"===e[0])return!0;for(var n=0;n<e.length;){if(/[*?{}()[\]]/.test(e[n]))return!0;if("\\"===e[n]){var t=e[n+1];n+=2;var r=i[t];if(r){var o=e.indexOf(r,n);-1!==o&&(n=o+1)}if("!"===e[n])return!0}else n++}return!1};e.exports=function(e,n){if("string"!=typeof e||""===e)return!1;if(r(e))return!0;var t=o;return n&&!1===n.strict&&(t=a),t(e)}},9924:e=>{"use strict";e.exports=function(e){return"number"==typeof e?e-e==0:"string"==typeof e&&""!==e.trim()&&(Number.isFinite?Number.isFinite(+e):isFinite(+e))}},1959:(e,n,t)=>{var r;function i(e,n,t){if("function"==typeof n&&(t=n,n={}),!t){if("function"!=typeof Promise)throw new TypeError("callback not provided");return new Promise((function(t,r){i(e,n||{},(function(e,n){e?r(e):t(n)}))}))}r(e,n||{},(function(e,r){e&&("EACCES"===e.code||n&&n.ignoreErrors)&&(e=null,r=!1),t(e,r)}))}t(7147),r="win32"===process.platform||global.TESTING_WINDOWS?t(1429):t(4601),e.exports=i,i.sync=function(e,n){try{return r.sync(e,n||{})}catch(e){if(n&&n.ignoreErrors||"EACCES"===e.code)return!1;throw e}}},4601:(e,n,t)=>{e.exports=i,i.sync=function(e,n){return o(r.statSync(e),n)};var r=t(7147);function i(e,n,t){r.stat(e,(function(e,r){t(e,!e&&o(r,n))}))}function o(e,n){return e.isFile()&&function(e,n){var t=e.mode,r=e.uid,i=e.gid,o=void 0!==n.uid?n.uid:process.getuid&&process.getuid(),a=void 0!==n.gid?n.gid:process.getgid&&process.getgid(),s=parseInt("100",8),l=parseInt("010",8);return t&parseInt("001",8)||t&l&&i===a||t&s&&r===o||t&(s|l)&&0===o}(e,n)}},1429:(e,n,t)=>{e.exports=o,o.sync=function(e,n){return i(r.statSync(e),e,n)};var r=t(7147);function i(e,n,t){return!(!e.isSymbolicLink()&&!e.isFile())&&function(e,n){var t=void 0!==n.pathExt?n.pathExt:process.env.PATHEXT;if(!t)return!0;if(-1!==(t=t.split(";")).indexOf(""))return!0;for(var r=0;r<t.length;r++){var i=t[r].toLowerCase();if(i&&e.substr(-i.length).toLowerCase()===i)return!0}return!1}(n,t)}function o(e,n,t){r.stat(e,(function(r,o){t(r,!r&&i(o,e,n))}))}},9593:(e,n,t)=>{"use strict";const r=t(4411),i=Symbol("max"),o=Symbol("length"),a=Symbol("lengthCalculator"),s=Symbol("allowStale"),l=Symbol("maxAge"),c=Symbol("dispose"),u=Symbol("noDisposeOnSet"),d=Symbol("lruList"),h=Symbol("cache"),p=Symbol("updateAgeOnGet"),f=()=>1,m=(e,n,t)=>{const r=e[h].get(n);if(r){const n=r.value;if(g(e,n)){if(T(e,r),!e[s])return}else t&&(e[p]&&(r.value.now=Date.now()),e[d].unshiftNode(r));return n.value}},g=(e,n)=>{if(!n||!n.maxAge&&!e[l])return!1;const t=Date.now()-n.now;return n.maxAge?t>n.maxAge:e[l]&&t>e[l]},E=e=>{if(e[o]>e[i])for(let n=e[d].tail;e[o]>e[i]&&null!==n;){const t=n.prev;T(e,n),n=t}},T=(e,n)=>{if(n){const t=n.value;e[c]&&e[c](t.key,t.value),e[o]-=t.length,e[h].delete(t.key),e[d].removeNode(n)}};class R{constructor(e,n,t,r,i){this.key=e,this.value=n,this.length=t,this.now=r,this.maxAge=i||0}}const S=(e,n,t,r)=>{let i=t.value;g(e,i)&&(T(e,t),e[s]||(i=void 0)),i&&n.call(r,i.value,i.key,e)};e.exports=class{constructor(e){if("number"==typeof e&&(e={max:e}),e||(e={}),e.max&&("number"!=typeof e.max||e.max<0))throw new TypeError("max must be a non-negative number");this[i]=e.max||1/0;const n=e.length||f;if(this[a]="function"!=typeof n?f:n,this[s]=e.stale||!1,e.maxAge&&"number"!=typeof e.maxAge)throw new TypeError("maxAge must be a number");this[l]=e.maxAge||0,this[c]=e.dispose,this[u]=e.noDisposeOnSet||!1,this[p]=e.updateAgeOnGet||!1,this.reset()}set max(e){if("number"!=typeof e||e<0)throw new TypeError("max must be a non-negative number");this[i]=e||1/0,E(this)}get max(){return this[i]}set allowStale(e){this[s]=!!e}get allowStale(){return this[s]}set maxAge(e){if("number"!=typeof e)throw new TypeError("maxAge must be a non-negative number");this[l]=e,E(this)}get maxAge(){return this[l]}set lengthCalculator(e){"function"!=typeof e&&(e=f),e!==this[a]&&(this[a]=e,this[o]=0,this[d].forEach((e=>{e.length=this[a](e.value,e.key),this[o]+=e.length}))),E(this)}get lengthCalculator(){return this[a]}get length(){return this[o]}get itemCount(){return this[d].length}rforEach(e,n){n=n||this;for(let t=this[d].tail;null!==t;){const r=t.prev;S(this,e,t,n),t=r}}forEach(e,n){n=n||this;for(let t=this[d].head;null!==t;){const r=t.next;S(this,e,t,n),t=r}}keys(){return this[d].toArray().map((e=>e.key))}values(){return this[d].toArray().map((e=>e.value))}reset(){this[c]&&this[d]&&this[d].length&&this[d].forEach((e=>this[c](e.key,e.value))),this[h]=new Map,this[d]=new r,this[o]=0}dump(){return this[d].map((e=>!g(this,e)&&{k:e.key,v:e.value,e:e.now+(e.maxAge||0)})).toArray().filter((e=>e))}dumpLru(){return this[d]}set(e,n,t){if((t=t||this[l])&&"number"!=typeof t)throw new TypeError("maxAge must be a number");const r=t?Date.now():0,s=this[a](n,e);if(this[h].has(e)){if(s>this[i])return T(this,this[h].get(e)),!1;const a=this[h].get(e).value;return this[c]&&(this[u]||this[c](e,a.value)),a.now=r,a.maxAge=t,a.value=n,this[o]+=s-a.length,a.length=s,this.get(e),E(this),!0}const p=new R(e,n,s,r,t);return p.length>this[i]?(this[c]&&this[c](e,n),!1):(this[o]+=p.length,this[d].unshift(p),this[h].set(e,this[d].head),E(this),!0)}has(e){if(!this[h].has(e))return!1;const n=this[h].get(e).value;return!g(this,n)}get(e){return m(this,e,!0)}peek(e){return m(this,e,!1)}pop(){const e=this[d].tail;return e?(T(this,e),e.value):null}del(e){T(this,this[h].get(e))}load(e){this.reset();const n=Date.now();for(let t=e.length-1;t>=0;t--){const r=e[t],i=r.e||0;if(0===i)this.set(r.k,r.v);else{const e=i-n;e>0&&this.set(r.k,r.v,e)}}}prune(){this[h].forEach(((e,n)=>m(this,n,!1)))}}},155:(e,n,t)=>{"use strict";const r=t(2781).PassThrough,i=Array.prototype.slice;function o(e,n){if(Array.isArray(e))for(let t=0,r=e.length;t<r;t++)e[t]=o(e[t],n);else{if(!e._readableState&&e.pipe&&(e=e.pipe(r(n))),!e._readableState||!e.pause||!e.pipe)throw new Error("Only readable stream can be merged.");e.pause()}return e}e.exports=function(){const e=[],n=i.call(arguments);let t=!1,a=n[n.length-1];a&&!Array.isArray(a)&&null==a.pipe?n.pop():a={};const s=!1!==a.end,l=!0===a.pipeError;null==a.objectMode&&(a.objectMode=!0),null==a.highWaterMark&&(a.highWaterMark=65536);const c=r(a);function u(){for(let n=0,t=arguments.length;n<t;n++)e.push(o(arguments[n],a));return d(),this}function d(){if(t)return;t=!0;let n=e.shift();if(!n)return void process.nextTick(h);Array.isArray(n)||(n=[n]);let r=n.length+1;function i(){--r>0||(t=!1,d())}function o(e){function n(){e.removeListener("merge2UnpipeEnd",n),e.removeListener("end",n),l&&e.removeListener("error",t),i()}function t(e){c.emit("error",e)}if(e._readableState.endEmitted)return i();e.on("merge2UnpipeEnd",n),e.on("end",n),l&&e.on("error",t),e.pipe(c,{end:!1}),e.resume()}for(let e=0;e<n.length;e++)o(n[e]);i()}function h(){t=!1,c.emit("queueDrain"),s&&c.end()}return c.setMaxListeners(0),c.add=u,c.on("unpipe",(function(e){e.emit("merge2UnpipeEnd")})),n.length&&u.apply(null,n),c}},850:(e,n,t)=>{"use strict";const r=t(3837),i=t(6744),o=t(9444),a=t(8702),s=e=>""===e||"./"===e,l=(e,n,t)=>{n=[].concat(n),e=[].concat(e);let r=new Set,i=new Set,a=new Set,s=0,l=e=>{a.add(e.output),t&&t.onResult&&t.onResult(e)};for(let a=0;a<n.length;a++){let c=o(String(n[a]),{...t,onResult:l},!0),u=c.state.negated||c.state.negatedExtglob;u&&s++;for(let n of e){let e=c(n,!0);(u?!e.isMatch:e.isMatch)&&(u?r.add(e.output):(r.delete(e.output),i.add(e.output)))}}let c=(s===n.length?[...a]:[...i]).filter((e=>!r.has(e)));if(t&&0===c.length){if(!0===t.failglob)throw new Error(`No matches found for "${n.join(", ")}"`);if(!0===t.nonull||!0===t.nullglob)return t.unescape?n.map((e=>e.replace(/\\/g,""))):n}return c};l.match=l,l.matcher=(e,n)=>o(e,n),l.any=l.isMatch=(e,n,t)=>o(n,t)(e),l.not=(e,n,t={})=>{n=[].concat(n).map(String);let r=new Set,i=[],o=new Set(l(e,n,{...t,onResult:e=>{t.onResult&&t.onResult(e),i.push(e.output)}}));for(let e of i)o.has(e)||r.add(e);return[...r]},l.contains=(e,n,t)=>{if("string"!=typeof e)throw new TypeError(`Expected a string: "${r.inspect(e)}"`);if(Array.isArray(n))return n.some((n=>l.contains(e,n,t)));if("string"==typeof n){if(s(e)||s(n))return!1;if(e.includes(n)||e.startsWith("./")&&e.slice(2).includes(n))return!0}return l.isMatch(e,n,{...t,contains:!0})},l.matchKeys=(e,n,t)=>{if(!a.isObject(e))throw new TypeError("Expected the first argument to be an object");let r=l(Object.keys(e),n,t),i={};for(let n of r)i[n]=e[n];return i},l.some=(e,n,t)=>{let r=[].concat(e);for(let e of[].concat(n)){let n=o(String(e),t);if(r.some((e=>n(e))))return!0}return!1},l.every=(e,n,t)=>{let r=[].concat(e);for(let e of[].concat(n)){let n=o(String(e),t);if(!r.every((e=>n(e))))return!1}return!0},l.all=(e,n,t)=>{if("string"!=typeof e)throw new TypeError(`Expected a string: "${r.inspect(e)}"`);return[].concat(n).every((n=>o(n,t)(e)))},l.capture=(e,n,t)=>{let r=a.isWindows(t),i=o.makeRe(String(e),{...t,capture:!0}).exec(r?a.toPosixSlashes(n):n);if(i)return i.slice(1).map((e=>void 0===e?"":e))},l.makeRe=(...e)=>o.makeRe(...e),l.scan=(...e)=>o.scan(...e),l.parse=(e,n)=>{let t=[];for(let r of[].concat(e||[]))for(let e of i(String(r),n))t.push(o.parse(e,n));return t},l.braces=(e,n)=>{if("string"!=typeof e)throw new TypeError("Expected a string");return n&&!0===n.nobrace||!/\{.*\}/.test(e)?[e]:i(e,n)},l.braceExpand=(e,n)=>{if("string"!=typeof e)throw new TypeError("Expected a string");return l.braces(e,{...n,expand:!0})},e.exports=l},1171:(e,n,t)=>{e.exports=h,h.Minimatch=p;var r=function(){try{return t(1017)}catch(e){}}()||{sep:"/"};h.sep=r.sep;var i=h.GLOBSTAR=p.GLOBSTAR={},o=t(3644),a={"!":{open:"(?:(?!(?:",close:"))[^/]*?)"},"?":{open:"(?:",close:")?"},"+":{open:"(?:",close:")+"},"*":{open:"(?:",close:")*"},"@":{open:"(?:",close:")"}},s="[^/]",l="[^/]*?",c="().*{}+?[]^$\\!".split("").reduce((function(e,n){return e[n]=!0,e}),{}),u=/\/+/;function d(e,n){n=n||{};var t={};return Object.keys(e).forEach((function(n){t[n]=e[n]})),Object.keys(n).forEach((function(e){t[e]=n[e]})),t}function h(e,n,t){return m(n),t||(t={}),!(!t.nocomment&&"#"===n.charAt(0))&&new p(n,t).match(e)}function p(e,n){if(!(this instanceof p))return new p(e,n);m(e),n||(n={}),e=e.trim(),n.allowWindowsEscape||"/"===r.sep||(e=e.split(r.sep).join("/")),this.options=n,this.set=[],this.pattern=e,this.regexp=null,this.negate=!1,this.comment=!1,this.empty=!1,this.partial=!!n.partial,this.make()}function f(e,n){return n||(n=this instanceof p?this.options:{}),e=void 0===e?this.pattern:e,m(e),n.nobrace||!/\{(?:(?!\{).)*\}/.test(e)?[e]:o(e)}h.filter=function(e,n){return n=n||{},function(t,r,i){return h(t,e,n)}},h.defaults=function(e){if(!e||"object"!=typeof e||!Object.keys(e).length)return h;var n=h,t=function(t,r,i){return n(t,r,d(e,i))};return(t.Minimatch=function(t,r){return new n.Minimatch(t,d(e,r))}).defaults=function(t){return n.defaults(d(e,t)).Minimatch},t.filter=function(t,r){return n.filter(t,d(e,r))},t.defaults=function(t){return n.defaults(d(e,t))},t.makeRe=function(t,r){return n.makeRe(t,d(e,r))},t.braceExpand=function(t,r){return n.braceExpand(t,d(e,r))},t.match=function(t,r,i){return n.match(t,r,d(e,i))},t},p.defaults=function(e){return h.defaults(e).Minimatch},p.prototype.debug=function(){},p.prototype.make=function(){var e=this.pattern,n=this.options;if(n.nocomment||"#"!==e.charAt(0))if(e){this.parseNegate();var t=this.globSet=this.braceExpand();n.debug&&(this.debug=function(){console.error.apply(console,arguments)}),this.debug(this.pattern,t),t=this.globParts=t.map((function(e){return e.split(u)})),this.debug(this.pattern,t),t=t.map((function(e,n,t){return e.map(this.parse,this)}),this),this.debug(this.pattern,t),t=t.filter((function(e){return-1===e.indexOf(!1)})),this.debug(this.pattern,t),this.set=t}else this.empty=!0;else this.comment=!0},p.prototype.parseNegate=function(){var e=this.pattern,n=!1,t=0;if(!this.options.nonegate){for(var r=0,i=e.length;r<i&&"!"===e.charAt(r);r++)n=!n,t++;t&&(this.pattern=e.substr(t)),this.negate=n}},h.braceExpand=function(e,n){return f(e,n)},p.prototype.braceExpand=f;var m=function(e){if("string"!=typeof e)throw new TypeError("invalid pattern");if(e.length>65536)throw new TypeError("pattern is too long")};p.prototype.parse=function(e,n){m(e);var t=this.options;if("**"===e){if(!t.noglobstar)return i;e="*"}if(""===e)return"";var r,o="",u=!!t.nocase,d=!1,h=[],p=[],f=!1,E=-1,T=-1,R="."===e.charAt(0)?"":t.dot?"(?!(?:^|\\/)\\.{1,2}(?:$|\\/))":"(?!\\.)",S=this;function y(){if(r){switch(r){case"*":o+=l,u=!0;break;case"?":o+=s,u=!0;break;default:o+="\\"+r}S.debug("clearStateChar %j %j",r,o),r=!1}}for(var A,v=0,I=e.length;v<I&&(A=e.charAt(v));v++)if(this.debug("%s\t%s %s %j",e,v,o,A),d&&c[A])o+="\\"+A,d=!1;else switch(A){case"/":return!1;case"\\":y(),d=!0;continue;case"?":case"*":case"+":case"@":case"!":if(this.debug("%s\t%s %s %j <-- stateChar",e,v,o,A),f){this.debug("  in class"),"!"===A&&v===T+1&&(A="^"),o+=A;continue}S.debug("call clearStateChar %j",r),y(),r=A,t.noext&&y();continue;case"(":if(f){o+="(";continue}if(!r){o+="\\(";continue}h.push({type:r,start:v-1,reStart:o.length,open:a[r].open,close:a[r].close}),o+="!"===r?"(?:(?!(?:":"(?:",this.debug("plType %j %j",r,o),r=!1;continue;case")":if(f||!h.length){o+="\\)";continue}y(),u=!0;var C=h.pop();o+=C.close,"!"===C.type&&p.push(C),C.reEnd=o.length;continue;case"|":if(f||!h.length||d){o+="\\|",d=!1;continue}y(),o+="|";continue;case"[":if(y(),f){o+="\\"+A;continue}f=!0,T=v,E=o.length,o+=A;continue;case"]":if(v===T+1||!f){o+="\\"+A,d=!1;continue}var _=e.substring(T+1,v);try{RegExp("["+_+"]")}catch(e){var b=this.parse(_,g);o=o.substr(0,E)+"\\["+b[0]+"\\]",u=u||b[1],f=!1;continue}u=!0,f=!1,o+=A;continue;default:y(),d?d=!1:!c[A]||"^"===A&&f||(o+="\\"),o+=A}for(f&&(_=e.substr(T+1),b=this.parse(_,g),o=o.substr(0,E)+"\\["+b[0],u=u||b[1]),C=h.pop();C;C=h.pop()){var O=o.slice(C.reStart+C.open.length);this.debug("setting tail",o,C),O=O.replace(/((?:\\{2}){0,64})(\\?)\|/g,(function(e,n,t){return t||(t="\\"),n+n+t+"|"})),this.debug("tail=%j\n   %s",O,O,C,o);var D="*"===C.type?l:"?"===C.type?s:"\\"+C.type;u=!0,o=o.slice(0,C.reStart)+D+"\\("+O}y(),d&&(o+="\\\\");var N=!1;switch(o.charAt(0)){case"[":case".":case"(":N=!0}for(var w=p.length-1;w>-1;w--){var L=p[w],x=o.slice(0,L.reStart),M=o.slice(L.reStart,L.reEnd-8),k=o.slice(L.reEnd-8,L.reEnd),P=o.slice(L.reEnd);k+=P;var F=x.split("(").length-1,G=P;for(v=0;v<F;v++)G=G.replace(/\)[+*?]?/,"");var U="";""===(P=G)&&n!==g&&(U="$"),o=x+M+P+U+k}if(""!==o&&u&&(o="(?=.)"+o),N&&(o=R+o),n===g)return[o,u];if(!u)return e.replace(/\\(.)/g,"$1");var H=t.nocase?"i":"";try{var q=new RegExp("^"+o+"$",H)}catch(e){return new RegExp("$.")}return q._glob=e,q._src=o,q};var g={};h.makeRe=function(e,n){return new p(e,n||{}).makeRe()},p.prototype.makeRe=function(){if(this.regexp||!1===this.regexp)return this.regexp;var e=this.set;if(!e.length)return this.regexp=!1,this.regexp;var n=this.options,t=n.noglobstar?l:n.dot?"(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?":"(?:(?!(?:\\/|^)\\.).)*?",r=n.nocase?"i":"",o=e.map((function(e){return e.map((function(e){return e===i?t:"string"==typeof e?e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"):e._src})).join("\\/")})).join("|");o="^(?:"+o+")$",this.negate&&(o="^(?!"+o+").*$");try{this.regexp=new RegExp(o,r)}catch(e){this.regexp=!1}return this.regexp},h.match=function(e,n,t){var r=new p(n,t=t||{});return e=e.filter((function(e){return r.match(e)})),r.options.nonull&&!e.length&&e.push(n),e},p.prototype.match=function(e,n){if(void 0===n&&(n=this.partial),this.debug("match",e,this.pattern),this.comment)return!1;if(this.empty)return""===e;if("/"===e&&n)return!0;var t=this.options;"/"!==r.sep&&(e=e.split(r.sep).join("/")),e=e.split(u),this.debug(this.pattern,"split",e);var i,o,a=this.set;for(this.debug(this.pattern,"set",a),o=e.length-1;o>=0&&!(i=e[o]);o--);for(o=0;o<a.length;o++){var s=a[o],l=e;if(t.matchBase&&1===s.length&&(l=[i]),this.matchOne(l,s,n))return!!t.flipNegate||!this.negate}return!t.flipNegate&&this.negate},p.prototype.matchOne=function(e,n,t){var r=this.options;this.debug("matchOne",{this:this,file:e,pattern:n}),this.debug("matchOne",e.length,n.length);for(var o=0,a=0,s=e.length,l=n.length;o<s&&a<l;o++,a++){this.debug("matchOne loop");var c,u=n[a],d=e[o];if(this.debug(n,u,d),!1===u)return!1;if(u===i){this.debug("GLOBSTAR",[n,u,d]);var h=o,p=a+1;if(p===l){for(this.debug("** at the end");o<s;o++)if("."===e[o]||".."===e[o]||!r.dot&&"."===e[o].charAt(0))return!1;return!0}for(;h<s;){var f=e[h];if(this.debug("\nglobstar while",e,h,n,p,f),this.matchOne(e.slice(h),n.slice(p),t))return this.debug("globstar found match!",h,s,f),!0;if("."===f||".."===f||!r.dot&&"."===f.charAt(0)){this.debug("dot detected!",e,h,n,p);break}this.debug("globstar swallow a segment, and continue"),h++}return!(!t||(this.debug("\n>>> no match, partial?",e,h,n,p),h!==s))}if("string"==typeof u?(c=d===u,this.debug("string match",u,d,c)):(c=d.match(u),this.debug("pattern match",u,d,c)),!c)return!1}if(o===s&&a===l)return!0;if(o===s)return t;if(a===l)return o===s-1&&""===e[o];throw new Error("wtf?")}},778:(e,n,t)=>{var r=t(2479);function i(e){var n=function(){return n.called?n.value:(n.called=!0,n.value=e.apply(this,arguments))};return n.called=!1,n}function o(e){var n=function(){if(n.called)throw new Error(n.onceError);return n.called=!0,n.value=e.apply(this,arguments)},t=e.name||"Function wrapped with `once`";return n.onceError=t+" shouldn't be called more than once",n.called=!1,n}e.exports=r(i),e.exports.strict=r(o),i.proto=i((function(){Object.defineProperty(Function.prototype,"once",{value:function(){return i(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return o(this)},configurable:!0})}))},9444:(e,n,t)=>{"use strict";e.exports=t(6087)},1006:(e,n,t)=>{"use strict";const r=t(1017),i="\\.{1,2}(?:\\/|$)",o={DOT_LITERAL:"\\.",PLUS_LITERAL:"\\+",QMARK_LITERAL:"\\?",SLASH_LITERAL:"\\/",ONE_CHAR:"(?=.)",QMARK:"[^/]",END_ANCHOR:"(?:\\/|$)",DOTS_SLASH:i,NO_DOT:"(?!\\.)",NO_DOTS:`(?!(?:^|\\/)${i})`,NO_DOT_SLASH:"(?!\\.{0,1}(?:\\/|$))",NO_DOTS_SLASH:`(?!${i})`,QMARK_NO_DOT:"[^.\\/]",STAR:"[^/]*?",START_ANCHOR:"(?:^|\\/)"},a={...o,SLASH_LITERAL:"[\\\\/]",QMARK:"[^\\\\/]",STAR:"[^\\\\/]*?",DOTS_SLASH:"\\.{1,2}(?:[\\\\/]|$)",NO_DOT:"(?!\\.)",NO_DOTS:"(?!(?:^|[\\\\/])\\.{1,2}(?:[\\\\/]|$))",NO_DOT_SLASH:"(?!\\.{0,1}(?:[\\\\/]|$))",NO_DOTS_SLASH:"(?!\\.{1,2}(?:[\\\\/]|$))",QMARK_NO_DOT:"[^.\\\\/]",START_ANCHOR:"(?:^|[\\\\/])",END_ANCHOR:"(?:[\\\\/]|$)"};e.exports={MAX_LENGTH:65536,POSIX_REGEX_SOURCE:{alnum:"a-zA-Z0-9",alpha:"a-zA-Z",ascii:"\\x00-\\x7F",blank:" \\t",cntrl:"\\x00-\\x1F\\x7F",digit:"0-9",graph:"\\x21-\\x7E",lower:"a-z",print:"\\x20-\\x7E ",punct:"\\-!\"#$%&'()\\*+,./:;<=>?@[\\]^_`{|}~",space:" \\t\\r\\n\\v\\f",upper:"A-Z",word:"A-Za-z0-9_",xdigit:"A-Fa-f0-9"},REGEX_BACKSLASH:/\\(?![*+?^${}(|)[\]])/g,REGEX_NON_SPECIAL_CHARS:/^[^@![\].,$*+?^{}()|\\/]+/,REGEX_SPECIAL_CHARS:/[-*+?.^${}(|)[\]]/,REGEX_SPECIAL_CHARS_BACKREF:/(\\?)((\W)(\3*))/g,REGEX_SPECIAL_CHARS_GLOBAL:/([-*+?.^${}(|)[\]])/g,REGEX_REMOVE_BACKSLASH:/(?:\[.*?[^\\]\]|\\(?=.))/g,REPLACEMENTS:{"***":"*","**/**":"**","**/**/**":"**"},CHAR_0:48,CHAR_9:57,CHAR_UPPERCASE_A:65,CHAR_LOWERCASE_A:97,CHAR_UPPERCASE_Z:90,CHAR_LOWERCASE_Z:122,CHAR_LEFT_PARENTHESES:40,CHAR_RIGHT_PARENTHESES:41,CHAR_ASTERISK:42,CHAR_AMPERSAND:38,CHAR_AT:64,CHAR_BACKWARD_SLASH:92,CHAR_CARRIAGE_RETURN:13,CHAR_CIRCUMFLEX_ACCENT:94,CHAR_COLON:58,CHAR_COMMA:44,CHAR_DOT:46,CHAR_DOUBLE_QUOTE:34,CHAR_EQUAL:61,CHAR_EXCLAMATION_MARK:33,CHAR_FORM_FEED:12,CHAR_FORWARD_SLASH:47,CHAR_GRAVE_ACCENT:96,CHAR_HASH:35,CHAR_HYPHEN_MINUS:45,CHAR_LEFT_ANGLE_BRACKET:60,CHAR_LEFT_CURLY_BRACE:123,CHAR_LEFT_SQUARE_BRACKET:91,CHAR_LINE_FEED:10,CHAR_NO_BREAK_SPACE:160,CHAR_PERCENT:37,CHAR_PLUS:43,CHAR_QUESTION_MARK:63,CHAR_RIGHT_ANGLE_BRACKET:62,CHAR_RIGHT_CURLY_BRACE:125,CHAR_RIGHT_SQUARE_BRACKET:93,CHAR_SEMICOLON:59,CHAR_SINGLE_QUOTE:39,CHAR_SPACE:32,CHAR_TAB:9,CHAR_UNDERSCORE:95,CHAR_VERTICAL_LINE:124,CHAR_ZERO_WIDTH_NOBREAK_SPACE:65279,SEP:r.sep,extglobChars:e=>({"!":{type:"negate",open:"(?:(?!(?:",close:`))${e.STAR})`},"?":{type:"qmark",open:"(?:",close:")?"},"+":{type:"plus",open:"(?:",close:")+"},"*":{type:"star",open:"(?:",close:")*"},"@":{type:"at",open:"(?:",close:")"}}),globChars:e=>!0===e?a:o}},3376:(e,n,t)=>{"use strict";const r=t(1006),i=t(8702),{MAX_LENGTH:o,POSIX_REGEX_SOURCE:a,REGEX_NON_SPECIAL_CHARS:s,REGEX_SPECIAL_CHARS_BACKREF:l,REPLACEMENTS:c}=r,u=(e,n)=>{if("function"==typeof n.expandRange)return n.expandRange(...e,n);e.sort();const t=`[${e.join("-")}]`;try{new RegExp(t)}catch(n){return e.map((e=>i.escapeRegex(e))).join("..")}return t},d=(e,n)=>`Missing ${e}: "${n}" - use "\\\\${n}" to match literal characters`,h=(e,n)=>{if("string"!=typeof e)throw new TypeError("Expected a string");e=c[e]||e;const t={...n},p="number"==typeof t.maxLength?Math.min(o,t.maxLength):o;let f=e.length;if(f>p)throw new SyntaxError(`Input length: ${f}, exceeds maximum allowed length: ${p}`);const m={type:"bos",value:"",output:t.prepend||""},g=[m],E=t.capture?"":"?:",T=i.isWindows(n),R=r.globChars(T),S=r.extglobChars(R),{DOT_LITERAL:y,PLUS_LITERAL:A,SLASH_LITERAL:v,ONE_CHAR:I,DOTS_SLASH:C,NO_DOT:_,NO_DOT_SLASH:b,NO_DOTS_SLASH:O,QMARK:D,QMARK_NO_DOT:N,STAR:w,START_ANCHOR:L}=R,x=e=>`(${E}(?:(?!${L}${e.dot?C:y}).)*?)`,M=t.dot?"":_,k=t.dot?D:N;let P=!0===t.bash?x(t):w;t.capture&&(P=`(${P})`),"boolean"==typeof t.noext&&(t.noextglob=t.noext);const F={input:e,index:-1,start:0,dot:!0===t.dot,consumed:"",output:"",prefix:"",backtrack:!1,negated:!1,brackets:0,braces:0,parens:0,quotes:0,globstar:!1,tokens:g};e=i.removePrefix(e,F),f=e.length;const G=[],U=[],H=[];let q,X=m;const j=()=>F.index===f-1,K=F.peek=(n=1)=>e[F.index+n],B=F.advance=()=>e[++F.index]||"",$=()=>e.slice(F.index+1),W=(e="",n=0)=>{F.consumed+=e,F.index+=n},V=e=>{F.output+=null!=e.output?e.output:e.value,W(e.value)},z=()=>{let e=1;for(;"!"===K()&&("("!==K(2)||"?"===K(3));)B(),F.start++,e++;return e%2!=0&&(F.negated=!0,F.start++,!0)},Y=e=>{F[e]++,H.push(e)},Z=e=>{F[e]--,H.pop()},J=e=>{if("globstar"===X.type){const n=F.braces>0&&("comma"===e.type||"brace"===e.type),t=!0===e.extglob||G.length&&("pipe"===e.type||"paren"===e.type);"slash"===e.type||"paren"===e.type||n||t||(F.output=F.output.slice(0,-X.output.length),X.type="star",X.value="*",X.output=P,F.output+=X.output)}if(G.length&&"paren"!==e.type&&(G[G.length-1].inner+=e.value),(e.value||e.output)&&V(e),X&&"text"===X.type&&"text"===e.type)return X.value+=e.value,void(X.output=(X.output||"")+e.value);e.prev=X,g.push(e),X=e},Q=(e,n)=>{const r={...S[n],conditions:1,inner:""};r.prev=X,r.parens=F.parens,r.output=F.output;const i=(t.capture?"(":"")+r.open;Y("parens"),J({type:e,value:n,output:F.output?"":I}),J({type:"paren",extglob:!0,value:B(),output:i}),G.push(r)},ee=e=>{let r,i=e.close+(t.capture?")":"");if("negate"===e.type){let o=P;if(e.inner&&e.inner.length>1&&e.inner.includes("/")&&(o=x(t)),(o!==P||j()||/^\)+$/.test($()))&&(i=e.close=`)$))${o}`),e.inner.includes("*")&&(r=$())&&/^\.[^\\/.]+$/.test(r)){const t=h(r,{...n,fastpaths:!1}).output;i=e.close=`)${t})${o})`}"bos"===e.prev.type&&(F.negatedExtglob=!0)}J({type:"paren",extglob:!0,value:q,output:i}),Z("parens")};if(!1!==t.fastpaths&&!/(^[*!]|[/()[\]{}"])/.test(e)){let r=!1,o=e.replace(l,((e,n,t,i,o,a)=>"\\"===i?(r=!0,e):"?"===i?n?n+i+(o?D.repeat(o.length):""):0===a?k+(o?D.repeat(o.length):""):D.repeat(t.length):"."===i?y.repeat(t.length):"*"===i?n?n+i+(o?P:""):P:n?e:`\\${e}`));return!0===r&&(o=!0===t.unescape?o.replace(/\\/g,""):o.replace(/\\+/g,(e=>e.length%2==0?"\\\\":e?"\\":""))),o===e&&!0===t.contains?(F.output=e,F):(F.output=i.wrapOutput(o,F,n),F)}for(;!j();){if(q=B(),"\0"===q)continue;if("\\"===q){const e=K();if("/"===e&&!0!==t.bash)continue;if("."===e||";"===e)continue;if(!e){q+="\\",J({type:"text",value:q});continue}const n=/^\\+/.exec($());let r=0;if(n&&n[0].length>2&&(r=n[0].length,F.index+=r,r%2!=0&&(q+="\\")),!0===t.unescape?q=B():q+=B(),0===F.brackets){J({type:"text",value:q});continue}}if(F.brackets>0&&("]"!==q||"["===X.value||"[^"===X.value)){if(!1!==t.posix&&":"===q){const e=X.value.slice(1);if(e.includes("[")&&(X.posix=!0,e.includes(":"))){const e=X.value.lastIndexOf("["),n=X.value.slice(0,e),t=X.value.slice(e+2),r=a[t];if(r){X.value=n+r,F.backtrack=!0,B(),m.output||1!==g.indexOf(X)||(m.output=I);continue}}}("["===q&&":"!==K()||"-"===q&&"]"===K())&&(q=`\\${q}`),"]"!==q||"["!==X.value&&"[^"!==X.value||(q=`\\${q}`),!0===t.posix&&"!"===q&&"["===X.value&&(q="^"),X.value+=q,V({value:q});continue}if(1===F.quotes&&'"'!==q){q=i.escapeRegex(q),X.value+=q,V({value:q});continue}if('"'===q){F.quotes=1===F.quotes?0:1,!0===t.keepQuotes&&J({type:"text",value:q});continue}if("("===q){Y("parens"),J({type:"paren",value:q});continue}if(")"===q){if(0===F.parens&&!0===t.strictBrackets)throw new SyntaxError(d("opening","("));const e=G[G.length-1];if(e&&F.parens===e.parens+1){ee(G.pop());continue}J({type:"paren",value:q,output:F.parens?")":"\\)"}),Z("parens");continue}if("["===q){if(!0!==t.nobracket&&$().includes("]"))Y("brackets");else{if(!0!==t.nobracket&&!0===t.strictBrackets)throw new SyntaxError(d("closing","]"));q=`\\${q}`}J({type:"bracket",value:q});continue}if("]"===q){if(!0===t.nobracket||X&&"bracket"===X.type&&1===X.value.length){J({type:"text",value:q,output:`\\${q}`});continue}if(0===F.brackets){if(!0===t.strictBrackets)throw new SyntaxError(d("opening","["));J({type:"text",value:q,output:`\\${q}`});continue}Z("brackets");const e=X.value.slice(1);if(!0===X.posix||"^"!==e[0]||e.includes("/")||(q=`/${q}`),X.value+=q,V({value:q}),!1===t.literalBrackets||i.hasRegexChars(e))continue;const n=i.escapeRegex(X.value);if(F.output=F.output.slice(0,-X.value.length),!0===t.literalBrackets){F.output+=n,X.value=n;continue}X.value=`(${E}${n}|${X.value})`,F.output+=X.value;continue}if("{"===q&&!0!==t.nobrace){Y("braces");const e={type:"brace",value:q,output:"(",outputIndex:F.output.length,tokensIndex:F.tokens.length};U.push(e),J(e);continue}if("}"===q){const e=U[U.length-1];if(!0===t.nobrace||!e){J({type:"text",value:q,output:q});continue}let n=")";if(!0===e.dots){const e=g.slice(),r=[];for(let n=e.length-1;n>=0&&(g.pop(),"brace"!==e[n].type);n--)"dots"!==e[n].type&&r.unshift(e[n].value);n=u(r,t),F.backtrack=!0}if(!0!==e.comma&&!0!==e.dots){const t=F.output.slice(0,e.outputIndex),r=F.tokens.slice(e.tokensIndex);e.value=e.output="\\{",q=n="\\}",F.output=t;for(const e of r)F.output+=e.output||e.value}J({type:"brace",value:q,output:n}),Z("braces"),U.pop();continue}if("|"===q){G.length>0&&G[G.length-1].conditions++,J({type:"text",value:q});continue}if(","===q){let e=q;const n=U[U.length-1];n&&"braces"===H[H.length-1]&&(n.comma=!0,e="|"),J({type:"comma",value:q,output:e});continue}if("/"===q){if("dot"===X.type&&F.index===F.start+1){F.start=F.index+1,F.consumed="",F.output="",g.pop(),X=m;continue}J({type:"slash",value:q,output:v});continue}if("."===q){if(F.braces>0&&"dot"===X.type){"."===X.value&&(X.output=y);const e=U[U.length-1];X.type="dots",X.output+=q,X.value+=q,e.dots=!0;continue}if(F.braces+F.parens===0&&"bos"!==X.type&&"slash"!==X.type){J({type:"text",value:q,output:y});continue}J({type:"dot",value:q,output:y});continue}if("?"===q){if((!X||"("!==X.value)&&!0!==t.noextglob&&"("===K()&&"?"!==K(2)){Q("qmark",q);continue}if(X&&"paren"===X.type){const e=K();let n=q;if("<"===e&&!i.supportsLookbehinds())throw new Error("Node.js v10 or higher is required for regex lookbehinds");("("===X.value&&!/[!=<:]/.test(e)||"<"===e&&!/<([!=]|\w+>)/.test($()))&&(n=`\\${q}`),J({type:"text",value:q,output:n});continue}if(!0!==t.dot&&("slash"===X.type||"bos"===X.type)){J({type:"qmark",value:q,output:N});continue}J({type:"qmark",value:q,output:D});continue}if("!"===q){if(!0!==t.noextglob&&"("===K()&&("?"!==K(2)||!/[!=<:]/.test(K(3)))){Q("negate",q);continue}if(!0!==t.nonegate&&0===F.index){z();continue}}if("+"===q){if(!0!==t.noextglob&&"("===K()&&"?"!==K(2)){Q("plus",q);continue}if(X&&"("===X.value||!1===t.regex){J({type:"plus",value:q,output:A});continue}if(X&&("bracket"===X.type||"paren"===X.type||"brace"===X.type)||F.parens>0){J({type:"plus",value:q});continue}J({type:"plus",value:A});continue}if("@"===q){if(!0!==t.noextglob&&"("===K()&&"?"!==K(2)){J({type:"at",extglob:!0,value:q,output:""});continue}J({type:"text",value:q});continue}if("*"!==q){"$"!==q&&"^"!==q||(q=`\\${q}`);const e=s.exec($());e&&(q+=e[0],F.index+=e[0].length),J({type:"text",value:q});continue}if(X&&("globstar"===X.type||!0===X.star)){X.type="star",X.star=!0,X.value+=q,X.output=P,F.backtrack=!0,F.globstar=!0,W(q);continue}let n=$();if(!0!==t.noextglob&&/^\([^?]/.test(n)){Q("star",q);continue}if("star"===X.type){if(!0===t.noglobstar){W(q);continue}const r=X.prev,i=r.prev,o="slash"===r.type||"bos"===r.type,a=i&&("star"===i.type||"globstar"===i.type);if(!0===t.bash&&(!o||n[0]&&"/"!==n[0])){J({type:"star",value:q,output:""});continue}const s=F.braces>0&&("comma"===r.type||"brace"===r.type),l=G.length&&("pipe"===r.type||"paren"===r.type);if(!o&&"paren"!==r.type&&!s&&!l){J({type:"star",value:q,output:""});continue}for(;"/**"===n.slice(0,3);){const t=e[F.index+4];if(t&&"/"!==t)break;n=n.slice(3),W("/**",3)}if("bos"===r.type&&j()){X.type="globstar",X.value+=q,X.output=x(t),F.output=X.output,F.globstar=!0,W(q);continue}if("slash"===r.type&&"bos"!==r.prev.type&&!a&&j()){F.output=F.output.slice(0,-(r.output+X.output).length),r.output=`(?:${r.output}`,X.type="globstar",X.output=x(t)+(t.strictSlashes?")":"|$)"),X.value+=q,F.globstar=!0,F.output+=r.output+X.output,W(q);continue}if("slash"===r.type&&"bos"!==r.prev.type&&"/"===n[0]){const e=void 0!==n[1]?"|$":"";F.output=F.output.slice(0,-(r.output+X.output).length),r.output=`(?:${r.output}`,X.type="globstar",X.output=`${x(t)}${v}|${v}${e})`,X.value+=q,F.output+=r.output+X.output,F.globstar=!0,W(q+B()),J({type:"slash",value:"/",output:""});continue}if("bos"===r.type&&"/"===n[0]){X.type="globstar",X.value+=q,X.output=`(?:^|${v}|${x(t)}${v})`,F.output=X.output,F.globstar=!0,W(q+B()),J({type:"slash",value:"/",output:""});continue}F.output=F.output.slice(0,-X.output.length),X.type="globstar",X.output=x(t),X.value+=q,F.output+=X.output,F.globstar=!0,W(q);continue}const r={type:"star",value:q,output:P};!0!==t.bash?!X||"bracket"!==X.type&&"paren"!==X.type||!0!==t.regex?(F.index!==F.start&&"slash"!==X.type&&"dot"!==X.type||("dot"===X.type?(F.output+=b,X.output+=b):!0===t.dot?(F.output+=O,X.output+=O):(F.output+=M,X.output+=M),"*"!==K()&&(F.output+=I,X.output+=I)),J(r)):(r.output=q,J(r)):(r.output=".*?","bos"!==X.type&&"slash"!==X.type||(r.output=M+r.output),J(r))}for(;F.brackets>0;){if(!0===t.strictBrackets)throw new SyntaxError(d("closing","]"));F.output=i.escapeLast(F.output,"["),Z("brackets")}for(;F.parens>0;){if(!0===t.strictBrackets)throw new SyntaxError(d("closing",")"));F.output=i.escapeLast(F.output,"("),Z("parens")}for(;F.braces>0;){if(!0===t.strictBrackets)throw new SyntaxError(d("closing","}"));F.output=i.escapeLast(F.output,"{"),Z("braces")}if(!0===t.strictSlashes||"star"!==X.type&&"bracket"!==X.type||J({type:"maybe_slash",value:"",output:`${v}?`}),!0===F.backtrack){F.output="";for(const e of F.tokens)F.output+=null!=e.output?e.output:e.value,e.suffix&&(F.output+=e.suffix)}return F};h.fastpaths=(e,n)=>{const t={...n},a="number"==typeof t.maxLength?Math.min(o,t.maxLength):o,s=e.length;if(s>a)throw new SyntaxError(`Input length: ${s}, exceeds maximum allowed length: ${a}`);e=c[e]||e;const l=i.isWindows(n),{DOT_LITERAL:u,SLASH_LITERAL:d,ONE_CHAR:h,DOTS_SLASH:p,NO_DOT:f,NO_DOTS:m,NO_DOTS_SLASH:g,STAR:E,START_ANCHOR:T}=r.globChars(l),R=t.dot?m:f,S=t.dot?g:f,y=t.capture?"":"?:";let A=!0===t.bash?".*?":E;t.capture&&(A=`(${A})`);const v=e=>!0===e.noglobstar?A:`(${y}(?:(?!${T}${e.dot?p:u}).)*?)`,I=e=>{switch(e){case"*":return`${R}${h}${A}`;case".*":return`${u}${h}${A}`;case"*.*":return`${R}${A}${u}${h}${A}`;case"*/*":return`${R}${A}${d}${h}${S}${A}`;case"**":return R+v(t);case"**/*":return`(?:${R}${v(t)}${d})?${S}${h}${A}`;case"**/*.*":return`(?:${R}${v(t)}${d})?${S}${A}${u}${h}${A}`;case"**/.*":return`(?:${R}${v(t)}${d})?${u}${h}${A}`;default:{const n=/^(.*?)\.(\w+)$/.exec(e);if(!n)return;const t=I(n[1]);if(!t)return;return t+u+n[2]}}},C=i.removePrefix(e,{negated:!1,prefix:""});let _=I(C);return _&&!0!==t.strictSlashes&&(_+=`${d}?`),_},e.exports=h},6087:(e,n,t)=>{"use strict";const r=t(1017),i=t(3921),o=t(3376),a=t(8702),s=t(1006),l=(e,n,t=!1)=>{if(Array.isArray(e)){const r=e.map((e=>l(e,n,t))),i=e=>{for(const n of r){const t=n(e);if(t)return t}return!1};return i}const r=(i=e)&&"object"==typeof i&&!Array.isArray(i)&&e.tokens&&e.input;var i;if(""===e||"string"!=typeof e&&!r)throw new TypeError("Expected pattern to be a non-empty string");const o=n||{},s=a.isWindows(n),c=r?l.compileRe(e,n):l.makeRe(e,n,!1,!0),u=c.state;delete c.state;let d=()=>!1;if(o.ignore){const e={...n,ignore:null,onMatch:null,onResult:null};d=l(o.ignore,e,t)}const h=(t,r=!1)=>{const{isMatch:i,match:a,output:h}=l.test(t,c,n,{glob:e,posix:s}),p={glob:e,state:u,regex:c,posix:s,input:t,output:h,match:a,isMatch:i};return"function"==typeof o.onResult&&o.onResult(p),!1===i?(p.isMatch=!1,!!r&&p):d(t)?("function"==typeof o.onIgnore&&o.onIgnore(p),p.isMatch=!1,!!r&&p):("function"==typeof o.onMatch&&o.onMatch(p),!r||p)};return t&&(h.state=u),h};l.test=(e,n,t,{glob:r,posix:i}={})=>{if("string"!=typeof e)throw new TypeError("Expected input to be a string");if(""===e)return{isMatch:!1,output:""};const o=t||{},s=o.format||(i?a.toPosixSlashes:null);let c=e===r,u=c&&s?s(e):e;return!1===c&&(u=s?s(e):e,c=u===r),!1!==c&&!0!==o.capture||(c=!0===o.matchBase||!0===o.basename?l.matchBase(e,n,t,i):n.exec(u)),{isMatch:Boolean(c),match:c,output:u}},l.matchBase=(e,n,t,i=a.isWindows(t))=>(n instanceof RegExp?n:l.makeRe(n,t)).test(r.basename(e)),l.isMatch=(e,n,t)=>l(n,t)(e),l.parse=(e,n)=>Array.isArray(e)?e.map((e=>l.parse(e,n))):o(e,{...n,fastpaths:!1}),l.scan=(e,n)=>i(e,n),l.compileRe=(e,n,t=!1,r=!1)=>{if(!0===t)return e.output;const i=n||{},o=i.contains?"":"^",a=i.contains?"":"$";let s=`${o}(?:${e.output})${a}`;e&&!0===e.negated&&(s=`^(?!${s}).*$`);const c=l.toRegex(s,n);return!0===r&&(c.state=e),c},l.makeRe=(e,n={},t=!1,r=!1)=>{if(!e||"string"!=typeof e)throw new TypeError("Expected a non-empty string");let i={negated:!1,fastpaths:!0};return!1===n.fastpaths||"."!==e[0]&&"*"!==e[0]||(i.output=o.fastpaths(e,n)),i.output||(i=o(e,n)),l.compileRe(i,n,t,r)},l.toRegex=(e,n)=>{try{const t=n||{};return new RegExp(e,t.flags||(t.nocase?"i":""))}catch(e){if(n&&!0===n.debug)throw e;return/$^/}},l.constants=s,e.exports=l},3921:(e,n,t)=>{"use strict";const r=t(8702),{CHAR_ASTERISK:i,CHAR_AT:o,CHAR_BACKWARD_SLASH:a,CHAR_COMMA:s,CHAR_DOT:l,CHAR_EXCLAMATION_MARK:c,CHAR_FORWARD_SLASH:u,CHAR_LEFT_CURLY_BRACE:d,CHAR_LEFT_PARENTHESES:h,CHAR_LEFT_SQUARE_BRACKET:p,CHAR_PLUS:f,CHAR_QUESTION_MARK:m,CHAR_RIGHT_CURLY_BRACE:g,CHAR_RIGHT_PARENTHESES:E,CHAR_RIGHT_SQUARE_BRACKET:T}=t(1006),R=e=>e===u||e===a,S=e=>{!0!==e.isPrefix&&(e.depth=e.isGlobstar?1/0:1)};e.exports=(e,n)=>{const t=n||{},y=e.length-1,A=!0===t.parts||!0===t.scanToEnd,v=[],I=[],C=[];let _,b,O=e,D=-1,N=0,w=0,L=!1,x=!1,M=!1,k=!1,P=!1,F=!1,G=!1,U=!1,H=!1,q=!1,X=0,j={value:"",depth:0,isGlob:!1};const K=()=>D>=y,B=()=>(_=b,O.charCodeAt(++D));for(;D<y;){let e;if(b=B(),b!==a){if(!0===F||b===d){for(X++;!0!==K()&&(b=B());)if(b!==a)if(b!==d){if(!0!==F&&b===l&&(b=B())===l){if(L=j.isBrace=!0,M=j.isGlob=!0,q=!0,!0===A)continue;break}if(!0!==F&&b===s){if(L=j.isBrace=!0,M=j.isGlob=!0,q=!0,!0===A)continue;break}if(b===g&&(X--,0===X)){F=!1,L=j.isBrace=!0,q=!0;break}}else X++;else G=j.backslashes=!0,B();if(!0===A)continue;break}if(b!==u){if(!0!==t.noext&&!0==(b===f||b===o||b===i||b===m||b===c)&&O.charCodeAt(D+1)===h){if(M=j.isGlob=!0,k=j.isExtglob=!0,q=!0,b===c&&D===N&&(H=!0),!0===A){for(;!0!==K()&&(b=B());)if(b!==a){if(b===E){M=j.isGlob=!0,q=!0;break}}else G=j.backslashes=!0,b=B();continue}break}if(b===i){if(_===i&&(P=j.isGlobstar=!0),M=j.isGlob=!0,q=!0,!0===A)continue;break}if(b===m){if(M=j.isGlob=!0,q=!0,!0===A)continue;break}if(b===p){for(;!0!==K()&&(e=B());)if(e!==a){if(e===T){x=j.isBracket=!0,M=j.isGlob=!0,q=!0;break}}else G=j.backslashes=!0,B();if(!0===A)continue;break}if(!0===t.nonegate||b!==c||D!==N){if(!0!==t.noparen&&b===h){if(M=j.isGlob=!0,!0===A){for(;!0!==K()&&(b=B());)if(b!==h){if(b===E){q=!0;break}}else G=j.backslashes=!0,b=B();continue}break}if(!0===M){if(q=!0,!0===A)continue;break}}else U=j.negated=!0,N++}else{if(v.push(D),I.push(j),j={value:"",depth:0,isGlob:!1},!0===q)continue;if(_===l&&D===N+1){N+=2;continue}w=D+1}}else G=j.backslashes=!0,b=B(),b===d&&(F=!0)}!0===t.noext&&(k=!1,M=!1);let $=O,W="",V="";N>0&&(W=O.slice(0,N),O=O.slice(N),w-=N),$&&!0===M&&w>0?($=O.slice(0,w),V=O.slice(w)):!0===M?($="",V=O):$=O,$&&""!==$&&"/"!==$&&$!==O&&R($.charCodeAt($.length-1))&&($=$.slice(0,-1)),!0===t.unescape&&(V&&(V=r.removeBackslashes(V)),$&&!0===G&&($=r.removeBackslashes($)));const z={prefix:W,input:e,start:N,base:$,glob:V,isBrace:L,isBracket:x,isGlob:M,isExtglob:k,isGlobstar:P,negated:U,negatedExtglob:H};if(!0===t.tokens&&(z.maxDepth=0,R(b)||I.push(j),z.tokens=I),!0===t.parts||!0===t.tokens){let n;for(let r=0;r<v.length;r++){const i=n?n+1:N,o=v[r],a=e.slice(i,o);t.tokens&&(0===r&&0!==N?(I[r].isPrefix=!0,I[r].value=W):I[r].value=a,S(I[r]),z.maxDepth+=I[r].depth),0===r&&""===a||C.push(a),n=o}if(n&&n+1<e.length){const r=e.slice(n+1);C.push(r),t.tokens&&(I[I.length-1].value=r,S(I[I.length-1]),z.maxDepth+=I[I.length-1].depth)}z.slashes=v,z.parts=C}return z}},8702:(e,n,t)=>{"use strict";const r=t(1017),i="win32"===process.platform,{REGEX_BACKSLASH:o,REGEX_REMOVE_BACKSLASH:a,REGEX_SPECIAL_CHARS:s,REGEX_SPECIAL_CHARS_GLOBAL:l}=t(1006);n.isObject=e=>null!==e&&"object"==typeof e&&!Array.isArray(e),n.hasRegexChars=e=>s.test(e),n.isRegexChar=e=>1===e.length&&n.hasRegexChars(e),n.escapeRegex=e=>e.replace(l,"\\$1"),n.toPosixSlashes=e=>e.replace(o,"/"),n.removeBackslashes=e=>e.replace(a,(e=>"\\"===e?"":e)),n.supportsLookbehinds=()=>{const e=process.version.slice(1).split(".").map(Number);return 3===e.length&&e[0]>=9||8===e[0]&&e[1]>=10},n.isWindows=e=>e&&"boolean"==typeof e.windows?e.windows:!0===i||"\\"===r.sep,n.escapeLast=(e,t,r)=>{const i=e.lastIndexOf(t,r);return-1===i?e:"\\"===e[i-1]?n.escapeLast(e,t,i-1):`${e.slice(0,i)}\\${e.slice(i)}`},n.removePrefix=(e,n={})=>{let t=e;return t.startsWith("./")&&(t=t.slice(2),n.prefix="./"),t},n.wrapOutput=(e,n={},t={})=>{let r=`${t.contains?"":"^"}(?:${e})${t.contains?"":"$"}`;return!0===n.negated&&(r=`(?:^(?!${r}).*$)`),r}},4375:e=>{let n;e.exports="function"==typeof queueMicrotask?queueMicrotask.bind("undefined"!=typeof window?window:global):e=>(n||(n=Promise.resolve())).then(e).catch((e=>setTimeout((()=>{throw e}),0)))},3650:e=>{"use strict";e.exports=function(e){var n=new e,t=n;return{get:function(){var r=n;return r.next?n=r.next:(n=new e,t=n),r.next=null,r},release:function(e){t.next=e,t=e}}}},4595:(e,n,t)=>{e.exports=function(e,n){let t,i,o,a=!0;function s(e){function i(){n&&n(e,t),n=null}a?r(i):i()}function l(e,n,r){t[e]=r,(0==--i||n)&&s(n)}Array.isArray(e)?(t=[],i=e.length):(o=Object.keys(e),t={},i=o.length),i?o?o.forEach((function(n){e[n]((function(e,t){l(n,e,t)}))})):e.forEach((function(e,n){e((function(e,t){l(n,e,t)}))})):s(null),a=!1};const r=t(4375)},2257:(e,n,t)=>{const r=Symbol("SemVer ANY");class i{static get ANY(){return r}constructor(e,n){if(n=o(n),e instanceof i){if(e.loose===!!n.loose)return e;e=e.value}c("comparator",e,n),this.options=n,this.loose=!!n.loose,this.parse(e),this.semver===r?this.value="":this.value=this.operator+this.semver.version,c("comp",this)}parse(e){const n=this.options.loose?a[s.COMPARATORLOOSE]:a[s.COMPARATOR],t=e.match(n);if(!t)throw new TypeError(`Invalid comparator: ${e}`);this.operator=void 0!==t[1]?t[1]:"","="===this.operator&&(this.operator=""),t[2]?this.semver=new u(t[2],this.options.loose):this.semver=r}toString(){return this.value}test(e){if(c("Comparator.test",e,this.options.loose),this.semver===r||e===r)return!0;if("string"==typeof e)try{e=new u(e,this.options)}catch(e){return!1}return l(e,this.operator,this.semver,this.options)}intersects(e,n){if(!(e instanceof i))throw new TypeError("a Comparator is required");if(n&&"object"==typeof n||(n={loose:!!n,includePrerelease:!1}),""===this.operator)return""===this.value||new d(e.value,n).test(this.value);if(""===e.operator)return""===e.value||new d(this.value,n).test(e.semver);const t=!(">="!==this.operator&&">"!==this.operator||">="!==e.operator&&">"!==e.operator),r=!("<="!==this.operator&&"<"!==this.operator||"<="!==e.operator&&"<"!==e.operator),o=this.semver.version===e.semver.version,a=!(">="!==this.operator&&"<="!==this.operator||">="!==e.operator&&"<="!==e.operator),s=l(this.semver,"<",e.semver,n)&&(">="===this.operator||">"===this.operator)&&("<="===e.operator||"<"===e.operator),c=l(this.semver,">",e.semver,n)&&("<="===this.operator||"<"===this.operator)&&(">="===e.operator||">"===e.operator);return t||r||o&&a||s||c}}e.exports=i;const o=t(2893),{re:a,t:s}=t(5765),l=t(7539),c=t(4225),u=t(6376),d=t(6902)},6902:(e,n,t)=>{class r{constructor(e,n){if(n=o(n),e instanceof r)return e.loose===!!n.loose&&e.includePrerelease===!!n.includePrerelease?e:new r(e.raw,n);if(e instanceof a)return this.raw=e.value,this.set=[[e]],this.format(),this;if(this.options=n,this.loose=!!n.loose,this.includePrerelease=!!n.includePrerelease,this.raw=e,this.set=e.split("||").map((e=>this.parseRange(e.trim()))).filter((e=>e.length)),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${e}`);if(this.set.length>1){const e=this.set[0];if(this.set=this.set.filter((e=>!f(e[0]))),0===this.set.length)this.set=[e];else if(this.set.length>1)for(const e of this.set)if(1===e.length&&m(e[0])){this.set=[e];break}}this.format()}format(){return this.range=this.set.map((e=>e.join(" ").trim())).join("||").trim(),this.range}toString(){return this.range}parseRange(e){e=e.trim();const n=`parseRange:${Object.keys(this.options).join(",")}:${e}`,t=i.get(n);if(t)return t;const r=this.options.loose,o=r?c[u.HYPHENRANGELOOSE]:c[u.HYPHENRANGE];e=e.replace(o,b(this.options.includePrerelease)),s("hyphen replace",e),e=e.replace(c[u.COMPARATORTRIM],d),s("comparator trim",e);let l=(e=(e=(e=e.replace(c[u.TILDETRIM],h)).replace(c[u.CARETTRIM],p)).split(/\s+/).join(" ")).split(" ").map((e=>E(e,this.options))).join(" ").split(/\s+/).map((e=>_(e,this.options)));r&&(l=l.filter((e=>(s("loose invalid filter",e,this.options),!!e.match(c[u.COMPARATORLOOSE]))))),s("range list",l);const m=new Map,g=l.map((e=>new a(e,this.options)));for(const e of g){if(f(e))return[e];m.set(e.value,e)}m.size>1&&m.has("")&&m.delete("");const T=[...m.values()];return i.set(n,T),T}intersects(e,n){if(!(e instanceof r))throw new TypeError("a Range is required");return this.set.some((t=>g(t,n)&&e.set.some((e=>g(e,n)&&t.every((t=>e.every((e=>t.intersects(e,n)))))))))}test(e){if(!e)return!1;if("string"==typeof e)try{e=new l(e,this.options)}catch(e){return!1}for(let n=0;n<this.set.length;n++)if(O(this.set[n],e,this.options))return!0;return!1}}e.exports=r;const i=new(t(9593))({max:1e3}),o=t(2893),a=t(2257),s=t(4225),l=t(6376),{re:c,t:u,comparatorTrimReplace:d,tildeTrimReplace:h,caretTrimReplace:p}=t(5765),f=e=>"<0.0.0-0"===e.value,m=e=>""===e.value,g=(e,n)=>{let t=!0;const r=e.slice();let i=r.pop();for(;t&&r.length;)t=r.every((e=>i.intersects(e,n))),i=r.pop();return t},E=(e,n)=>(s("comp",e,n),e=y(e,n),s("caret",e),e=R(e,n),s("tildes",e),e=v(e,n),s("xrange",e),e=C(e,n),s("stars",e),e),T=e=>!e||"x"===e.toLowerCase()||"*"===e,R=(e,n)=>e.trim().split(/\s+/).map((e=>S(e,n))).join(" "),S=(e,n)=>{const t=n.loose?c[u.TILDELOOSE]:c[u.TILDE];return e.replace(t,((n,t,r,i,o)=>{let a;return s("tilde",e,n,t,r,i,o),T(t)?a="":T(r)?a=`>=${t}.0.0 <${+t+1}.0.0-0`:T(i)?a=`>=${t}.${r}.0 <${t}.${+r+1}.0-0`:o?(s("replaceTilde pr",o),a=`>=${t}.${r}.${i}-${o} <${t}.${+r+1}.0-0`):a=`>=${t}.${r}.${i} <${t}.${+r+1}.0-0`,s("tilde return",a),a}))},y=(e,n)=>e.trim().split(/\s+/).map((e=>A(e,n))).join(" "),A=(e,n)=>{s("caret",e,n);const t=n.loose?c[u.CARETLOOSE]:c[u.CARET],r=n.includePrerelease?"-0":"";return e.replace(t,((n,t,i,o,a)=>{let l;return s("caret",e,n,t,i,o,a),T(t)?l="":T(i)?l=`>=${t}.0.0${r} <${+t+1}.0.0-0`:T(o)?l="0"===t?`>=${t}.${i}.0${r} <${t}.${+i+1}.0-0`:`>=${t}.${i}.0${r} <${+t+1}.0.0-0`:a?(s("replaceCaret pr",a),l="0"===t?"0"===i?`>=${t}.${i}.${o}-${a} <${t}.${i}.${+o+1}-0`:`>=${t}.${i}.${o}-${a} <${t}.${+i+1}.0-0`:`>=${t}.${i}.${o}-${a} <${+t+1}.0.0-0`):(s("no pr"),l="0"===t?"0"===i?`>=${t}.${i}.${o}${r} <${t}.${i}.${+o+1}-0`:`>=${t}.${i}.${o}${r} <${t}.${+i+1}.0-0`:`>=${t}.${i}.${o} <${+t+1}.0.0-0`),s("caret return",l),l}))},v=(e,n)=>(s("replaceXRanges",e,n),e.split(/\s+/).map((e=>I(e,n))).join(" ")),I=(e,n)=>{e=e.trim();const t=n.loose?c[u.XRANGELOOSE]:c[u.XRANGE];return e.replace(t,((t,r,i,o,a,l)=>{s("xRange",e,t,r,i,o,a,l);const c=T(i),u=c||T(o),d=u||T(a),h=d;return"="===r&&h&&(r=""),l=n.includePrerelease?"-0":"",c?t=">"===r||"<"===r?"<0.0.0-0":"*":r&&h?(u&&(o=0),a=0,">"===r?(r=">=",u?(i=+i+1,o=0,a=0):(o=+o+1,a=0)):"<="===r&&(r="<",u?i=+i+1:o=+o+1),"<"===r&&(l="-0"),t=`${r+i}.${o}.${a}${l}`):u?t=`>=${i}.0.0${l} <${+i+1}.0.0-0`:d&&(t=`>=${i}.${o}.0${l} <${i}.${+o+1}.0-0`),s("xRange return",t),t}))},C=(e,n)=>(s("replaceStars",e,n),e.trim().replace(c[u.STAR],"")),_=(e,n)=>(s("replaceGTE0",e,n),e.trim().replace(c[n.includePrerelease?u.GTE0PRE:u.GTE0],"")),b=e=>(n,t,r,i,o,a,s,l,c,u,d,h,p)=>`${t=T(r)?"":T(i)?`>=${r}.0.0${e?"-0":""}`:T(o)?`>=${r}.${i}.0${e?"-0":""}`:a?`>=${t}`:`>=${t}${e?"-0":""}`} ${l=T(c)?"":T(u)?`<${+c+1}.0.0-0`:T(d)?`<${c}.${+u+1}.0-0`:h?`<=${c}.${u}.${d}-${h}`:e?`<${c}.${u}.${+d+1}-0`:`<=${l}`}`.trim(),O=(e,n,t)=>{for(let t=0;t<e.length;t++)if(!e[t].test(n))return!1;if(n.prerelease.length&&!t.includePrerelease){for(let t=0;t<e.length;t++)if(s(e[t].semver),e[t].semver!==a.ANY&&e[t].semver.prerelease.length>0){const r=e[t].semver;if(r.major===n.major&&r.minor===n.minor&&r.patch===n.patch)return!0}return!1}return!0}},6376:(e,n,t)=>{const r=t(4225),{MAX_LENGTH:i,MAX_SAFE_INTEGER:o}=t(3295),{re:a,t:s}=t(5765),l=t(2893),{compareIdentifiers:c}=t(6742);class u{constructor(e,n){if(n=l(n),e instanceof u){if(e.loose===!!n.loose&&e.includePrerelease===!!n.includePrerelease)return e;e=e.version}else if("string"!=typeof e)throw new TypeError(`Invalid Version: ${e}`);if(e.length>i)throw new TypeError(`version is longer than ${i} characters`);r("SemVer",e,n),this.options=n,this.loose=!!n.loose,this.includePrerelease=!!n.includePrerelease;const t=e.trim().match(n.loose?a[s.LOOSE]:a[s.FULL]);if(!t)throw new TypeError(`Invalid Version: ${e}`);if(this.raw=e,this.major=+t[1],this.minor=+t[2],this.patch=+t[3],this.major>o||this.major<0)throw new TypeError("Invalid major version");if(this.minor>o||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>o||this.patch<0)throw new TypeError("Invalid patch version");t[4]?this.prerelease=t[4].split(".").map((e=>{if(/^[0-9]+$/.test(e)){const n=+e;if(n>=0&&n<o)return n}return e})):this.prerelease=[],this.build=t[5]?t[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(e){if(r("SemVer.compare",this.version,this.options,e),!(e instanceof u)){if("string"==typeof e&&e===this.version)return 0;e=new u(e,this.options)}return e.version===this.version?0:this.compareMain(e)||this.comparePre(e)}compareMain(e){return e instanceof u||(e=new u(e,this.options)),c(this.major,e.major)||c(this.minor,e.minor)||c(this.patch,e.patch)}comparePre(e){if(e instanceof u||(e=new u(e,this.options)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;let n=0;do{const t=this.prerelease[n],i=e.prerelease[n];if(r("prerelease compare",n,t,i),void 0===t&&void 0===i)return 0;if(void 0===i)return 1;if(void 0===t)return-1;if(t!==i)return c(t,i)}while(++n)}compareBuild(e){e instanceof u||(e=new u(e,this.options));let n=0;do{const t=this.build[n],i=e.build[n];if(r("prerelease compare",n,t,i),void 0===t&&void 0===i)return 0;if(void 0===i)return 1;if(void 0===t)return-1;if(t!==i)return c(t,i)}while(++n)}inc(e,n){switch(e){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",n);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",n);break;case"prepatch":this.prerelease.length=0,this.inc("patch",n),this.inc("pre",n);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",n),this.inc("pre",n);break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":if(0===this.prerelease.length)this.prerelease=[0];else{let e=this.prerelease.length;for(;--e>=0;)"number"==typeof this.prerelease[e]&&(this.prerelease[e]++,e=-2);-1===e&&this.prerelease.push(0)}n&&(0===c(this.prerelease[0],n)?isNaN(this.prerelease[1])&&(this.prerelease=[n,0]):this.prerelease=[n,0]);break;default:throw new Error(`invalid increment argument: ${e}`)}return this.format(),this.raw=this.version,this}}e.exports=u},3507:(e,n,t)=>{const r=t(3959);e.exports=(e,n)=>{const t=r(e.trim().replace(/^[=v]+/,""),n);return t?t.version:null}},7539:(e,n,t)=>{const r=t(8718),i=t(1194),o=t(1312),a=t(5903),s=t(1544),l=t(2056);e.exports=(e,n,t,c)=>{switch(n){case"===":return"object"==typeof e&&(e=e.version),"object"==typeof t&&(t=t.version),e===t;case"!==":return"object"==typeof e&&(e=e.version),"object"==typeof t&&(t=t.version),e!==t;case"":case"=":case"==":return r(e,t,c);case"!=":return i(e,t,c);case">":return o(e,t,c);case">=":return a(e,t,c);case"<":return s(e,t,c);case"<=":return l(e,t,c);default:throw new TypeError(`Invalid operator: ${n}`)}}},9038:(e,n,t)=>{const r=t(6376),i=t(3959),{re:o,t:a}=t(5765);e.exports=(e,n)=>{if(e instanceof r)return e;if("number"==typeof e&&(e=String(e)),"string"!=typeof e)return null;let t=null;if((n=n||{}).rtl){let n;for(;(n=o[a.COERCERTL].exec(e))&&(!t||t.index+t[0].length!==e.length);)t&&n.index+n[0].length===t.index+t[0].length||(t=n),o[a.COERCERTL].lastIndex=n.index+n[1].length+n[2].length;o[a.COERCERTL].lastIndex=-1}else t=e.match(o[a.COERCE]);return null===t?null:i(`${t[2]}.${t[3]||"0"}.${t[4]||"0"}`,n)}},8880:(e,n,t)=>{const r=t(6376);e.exports=(e,n,t)=>{const i=new r(e,t),o=new r(n,t);return i.compare(o)||i.compareBuild(o)}},7880:(e,n,t)=>{const r=t(6269);e.exports=(e,n)=>r(e,n,!0)},6269:(e,n,t)=>{const r=t(6376);e.exports=(e,n,t)=>new r(e,t).compare(new r(n,t))},2378:(e,n,t)=>{const r=t(3959),i=t(8718);e.exports=(e,n)=>{if(i(e,n))return null;{const t=r(e),i=r(n),o=t.prerelease.length||i.prerelease.length,a=o?"pre":"",s=o?"prerelease":"";for(const e in t)if(("major"===e||"minor"===e||"patch"===e)&&t[e]!==i[e])return a+e;return s}}},8718:(e,n,t)=>{const r=t(6269);e.exports=(e,n,t)=>0===r(e,n,t)},1312:(e,n,t)=>{const r=t(6269);e.exports=(e,n,t)=>r(e,n,t)>0},5903:(e,n,t)=>{const r=t(6269);e.exports=(e,n,t)=>r(e,n,t)>=0},253:(e,n,t)=>{const r=t(6376);e.exports=(e,n,t,i)=>{"string"==typeof t&&(i=t,t=void 0);try{return new r(e instanceof r?e.version:e,t).inc(n,i).version}catch(e){return null}}},1544:(e,n,t)=>{const r=t(6269);e.exports=(e,n,t)=>r(e,n,t)<0},2056:(e,n,t)=>{const r=t(6269);e.exports=(e,n,t)=>r(e,n,t)<=0},8679:(e,n,t)=>{const r=t(6376);e.exports=(e,n)=>new r(e,n).major},7789:(e,n,t)=>{const r=t(6376);e.exports=(e,n)=>new r(e,n).minor},1194:(e,n,t)=>{const r=t(6269);e.exports=(e,n,t)=>0!==r(e,n,t)},3959:(e,n,t)=>{const{MAX_LENGTH:r}=t(3295),{re:i,t:o}=t(5765),a=t(6376),s=t(2893);e.exports=(e,n)=>{if(n=s(n),e instanceof a)return e;if("string"!=typeof e)return null;if(e.length>r)return null;if(!(n.loose?i[o.LOOSE]:i[o.FULL]).test(e))return null;try{return new a(e,n)}catch(e){return null}}},2358:(e,n,t)=>{const r=t(6376);e.exports=(e,n)=>new r(e,n).patch},7559:(e,n,t)=>{const r=t(3959);e.exports=(e,n)=>{const t=r(e,n);return t&&t.prerelease.length?t.prerelease:null}},9795:(e,n,t)=>{const r=t(6269);e.exports=(e,n,t)=>r(n,e,t)},3657:(e,n,t)=>{const r=t(8880);e.exports=(e,n)=>e.sort(((e,t)=>r(t,e,n)))},5712:(e,n,t)=>{const r=t(6902);e.exports=(e,n,t)=>{try{n=new r(n,t)}catch(e){return!1}return n.test(e)}},1100:(e,n,t)=>{const r=t(8880);e.exports=(e,n)=>e.sort(((e,t)=>r(e,t,n)))},6397:(e,n,t)=>{const r=t(3959);e.exports=(e,n)=>{const t=r(e,n);return t?t.version:null}},1249:(e,n,t)=>{const r=t(5765);e.exports={re:r.re,src:r.src,tokens:r.t,SEMVER_SPEC_VERSION:t(3295).SEMVER_SPEC_VERSION,SemVer:t(6376),compareIdentifiers:t(6742).compareIdentifiers,rcompareIdentifiers:t(6742).rcompareIdentifiers,parse:t(3959),valid:t(6397),clean:t(3507),inc:t(253),diff:t(2378),major:t(8679),minor:t(7789),patch:t(2358),prerelease:t(7559),compare:t(6269),rcompare:t(9795),compareLoose:t(7880),compareBuild:t(8880),sort:t(1100),rsort:t(3657),gt:t(1312),lt:t(1544),eq:t(8718),neq:t(1194),gte:t(5903),lte:t(2056),cmp:t(7539),coerce:t(9038),Comparator:t(2257),Range:t(6902),satisfies:t(5712),toComparators:t(1042),maxSatisfying:t(5775),minSatisfying:t(1657),minVersion:t(5316),validRange:t(9042),outside:t(6826),gtr:t(7606),ltr:t(32),intersects:t(2937),simplifyRange:t(7908),subset:t(799)}},3295:e=>{const n=Number.MAX_SAFE_INTEGER||9007199254740991;e.exports={SEMVER_SPEC_VERSION:"2.0.0",MAX_LENGTH:256,MAX_SAFE_INTEGER:n,MAX_SAFE_COMPONENT_LENGTH:16}},4225:e=>{const n="object"==typeof process&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)?(...e)=>console.error("SEMVER",...e):()=>{};e.exports=n},6742:e=>{const n=/^[0-9]+$/,t=(e,t)=>{const r=n.test(e),i=n.test(t);return r&&i&&(e=+e,t=+t),e===t?0:r&&!i?-1:i&&!r?1:e<t?-1:1};e.exports={compareIdentifiers:t,rcompareIdentifiers:(e,n)=>t(n,e)}},2893:e=>{const n=["includePrerelease","loose","rtl"];e.exports=e=>e?"object"!=typeof e?{loose:!0}:n.filter((n=>e[n])).reduce(((e,n)=>(e[n]=!0,e)),{}):{}},5765:(e,n,t)=>{const{MAX_SAFE_COMPONENT_LENGTH:r}=t(3295),i=t(4225),o=(n=e.exports={}).re=[],a=n.src=[],s=n.t={};let l=0;const c=(e,n,t)=>{const r=l++;i(e,r,n),s[e]=r,a[r]=n,o[r]=new RegExp(n,t?"g":void 0)};c("NUMERICIDENTIFIER","0|[1-9]\\d*"),c("NUMERICIDENTIFIERLOOSE","[0-9]+"),c("NONNUMERICIDENTIFIER","\\d*[a-zA-Z-][a-zA-Z0-9-]*"),c("MAINVERSION",`(${a[s.NUMERICIDENTIFIER]})\\.(${a[s.NUMERICIDENTIFIER]})\\.(${a[s.NUMERICIDENTIFIER]})`),c("MAINVERSIONLOOSE",`(${a[s.NUMERICIDENTIFIERLOOSE]})\\.(${a[s.NUMERICIDENTIFIERLOOSE]})\\.(${a[s.NUMERICIDENTIFIERLOOSE]})`),c("PRERELEASEIDENTIFIER",`(?:${a[s.NUMERICIDENTIFIER]}|${a[s.NONNUMERICIDENTIFIER]})`),c("PRERELEASEIDENTIFIERLOOSE",`(?:${a[s.NUMERICIDENTIFIERLOOSE]}|${a[s.NONNUMERICIDENTIFIER]})`),c("PRERELEASE",`(?:-(${a[s.PRERELEASEIDENTIFIER]}(?:\\.${a[s.PRERELEASEIDENTIFIER]})*))`),c("PRERELEASELOOSE",`(?:-?(${a[s.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${a[s.PRERELEASEIDENTIFIERLOOSE]})*))`),c("BUILDIDENTIFIER","[0-9A-Za-z-]+"),c("BUILD",`(?:\\+(${a[s.BUILDIDENTIFIER]}(?:\\.${a[s.BUILDIDENTIFIER]})*))`),c("FULLPLAIN",`v?${a[s.MAINVERSION]}${a[s.PRERELEASE]}?${a[s.BUILD]}?`),c("FULL",`^${a[s.FULLPLAIN]}$`),c("LOOSEPLAIN",`[v=\\s]*${a[s.MAINVERSIONLOOSE]}${a[s.PRERELEASELOOSE]}?${a[s.BUILD]}?`),c("LOOSE",`^${a[s.LOOSEPLAIN]}$`),c("GTLT","((?:<|>)?=?)"),c("XRANGEIDENTIFIERLOOSE",`${a[s.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),c("XRANGEIDENTIFIER",`${a[s.NUMERICIDENTIFIER]}|x|X|\\*`),c("XRANGEPLAIN",`[v=\\s]*(${a[s.XRANGEIDENTIFIER]})(?:\\.(${a[s.XRANGEIDENTIFIER]})(?:\\.(${a[s.XRANGEIDENTIFIER]})(?:${a[s.PRERELEASE]})?${a[s.BUILD]}?)?)?`),c("XRANGEPLAINLOOSE",`[v=\\s]*(${a[s.XRANGEIDENTIFIERLOOSE]})(?:\\.(${a[s.XRANGEIDENTIFIERLOOSE]})(?:\\.(${a[s.XRANGEIDENTIFIERLOOSE]})(?:${a[s.PRERELEASELOOSE]})?${a[s.BUILD]}?)?)?`),c("XRANGE",`^${a[s.GTLT]}\\s*${a[s.XRANGEPLAIN]}$`),c("XRANGELOOSE",`^${a[s.GTLT]}\\s*${a[s.XRANGEPLAINLOOSE]}$`),c("COERCE",`(^|[^\\d])(\\d{1,${r}})(?:\\.(\\d{1,${r}}))?(?:\\.(\\d{1,${r}}))?(?:$|[^\\d])`),c("COERCERTL",a[s.COERCE],!0),c("LONETILDE","(?:~>?)"),c("TILDETRIM",`(\\s*)${a[s.LONETILDE]}\\s+`,!0),n.tildeTrimReplace="$1~",c("TILDE",`^${a[s.LONETILDE]}${a[s.XRANGEPLAIN]}$`),c("TILDELOOSE",`^${a[s.LONETILDE]}${a[s.XRANGEPLAINLOOSE]}$`),c("LONECARET","(?:\\^)"),c("CARETTRIM",`(\\s*)${a[s.LONECARET]}\\s+`,!0),n.caretTrimReplace="$1^",c("CARET",`^${a[s.LONECARET]}${a[s.XRANGEPLAIN]}$`),c("CARETLOOSE",`^${a[s.LONECARET]}${a[s.XRANGEPLAINLOOSE]}$`),c("COMPARATORLOOSE",`^${a[s.GTLT]}\\s*(${a[s.LOOSEPLAIN]})$|^$`),c("COMPARATOR",`^${a[s.GTLT]}\\s*(${a[s.FULLPLAIN]})$|^$`),c("COMPARATORTRIM",`(\\s*)${a[s.GTLT]}\\s*(${a[s.LOOSEPLAIN]}|${a[s.XRANGEPLAIN]})`,!0),n.comparatorTrimReplace="$1$2$3",c("HYPHENRANGE",`^\\s*(${a[s.XRANGEPLAIN]})\\s+-\\s+(${a[s.XRANGEPLAIN]})\\s*$`),c("HYPHENRANGELOOSE",`^\\s*(${a[s.XRANGEPLAINLOOSE]})\\s+-\\s+(${a[s.XRANGEPLAINLOOSE]})\\s*$`),c("STAR","(<|>)?=?\\s*\\*"),c("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$"),c("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")},7606:(e,n,t)=>{const r=t(6826);e.exports=(e,n,t)=>r(e,n,">",t)},2937:(e,n,t)=>{const r=t(6902);e.exports=(e,n,t)=>(e=new r(e,t),n=new r(n,t),e.intersects(n))},32:(e,n,t)=>{const r=t(6826);e.exports=(e,n,t)=>r(e,n,"<",t)},5775:(e,n,t)=>{const r=t(6376),i=t(6902);e.exports=(e,n,t)=>{let o=null,a=null,s=null;try{s=new i(n,t)}catch(e){return null}return e.forEach((e=>{s.test(e)&&(o&&-1!==a.compare(e)||(o=e,a=new r(o,t)))})),o}},1657:(e,n,t)=>{const r=t(6376),i=t(6902);e.exports=(e,n,t)=>{let o=null,a=null,s=null;try{s=new i(n,t)}catch(e){return null}return e.forEach((e=>{s.test(e)&&(o&&1!==a.compare(e)||(o=e,a=new r(o,t)))})),o}},5316:(e,n,t)=>{const r=t(6376),i=t(6902),o=t(1312);e.exports=(e,n)=>{e=new i(e,n);let t=new r("0.0.0");if(e.test(t))return t;if(t=new r("0.0.0-0"),e.test(t))return t;t=null;for(let n=0;n<e.set.length;++n){const i=e.set[n];let a=null;i.forEach((e=>{const n=new r(e.semver.version);switch(e.operator){case">":0===n.prerelease.length?n.patch++:n.prerelease.push(0),n.raw=n.format();case"":case">=":a&&!o(n,a)||(a=n);break;case"<":case"<=":break;default:throw new Error(`Unexpected operation: ${e.operator}`)}})),!a||t&&!o(t,a)||(t=a)}return t&&e.test(t)?t:null}},6826:(e,n,t)=>{const r=t(6376),i=t(2257),{ANY:o}=i,a=t(6902),s=t(5712),l=t(1312),c=t(1544),u=t(2056),d=t(5903);e.exports=(e,n,t,h)=>{let p,f,m,g,E;switch(e=new r(e,h),n=new a(n,h),t){case">":p=l,f=u,m=c,g=">",E=">=";break;case"<":p=c,f=d,m=l,g="<",E="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(s(e,n,h))return!1;for(let t=0;t<n.set.length;++t){const r=n.set[t];let a=null,s=null;if(r.forEach((e=>{e.semver===o&&(e=new i(">=0.0.0")),a=a||e,s=s||e,p(e.semver,a.semver,h)?a=e:m(e.semver,s.semver,h)&&(s=e)})),a.operator===g||a.operator===E)return!1;if((!s.operator||s.operator===g)&&f(e,s.semver))return!1;if(s.operator===E&&m(e,s.semver))return!1}return!0}},7908:(e,n,t)=>{const r=t(5712),i=t(6269);e.exports=(e,n,t)=>{const o=[];let a=null,s=null;const l=e.sort(((e,n)=>i(e,n,t)));for(const e of l)r(e,n,t)?(s=e,a||(a=e)):(s&&o.push([a,s]),s=null,a=null);a&&o.push([a,null]);const c=[];for(const[e,n]of o)e===n?c.push(e):n||e!==l[0]?n?e===l[0]?c.push(`<=${n}`):c.push(`${e} - ${n}`):c.push(`>=${e}`):c.push("*");const u=c.join(" || "),d="string"==typeof n.raw?n.raw:String(n);return u.length<d.length?u:n}},799:(e,n,t)=>{const r=t(6902),i=t(2257),{ANY:o}=i,a=t(5712),s=t(6269),l=(e,n,t)=>{if(e===n)return!0;if(1===e.length&&e[0].semver===o){if(1===n.length&&n[0].semver===o)return!0;e=t.includePrerelease?[new i(">=0.0.0-0")]:[new i(">=0.0.0")]}if(1===n.length&&n[0].semver===o){if(t.includePrerelease)return!0;n=[new i(">=0.0.0")]}const r=new Set;let l,d,h,p,f,m,g;for(const n of e)">"===n.operator||">="===n.operator?l=c(l,n,t):"<"===n.operator||"<="===n.operator?d=u(d,n,t):r.add(n.semver);if(r.size>1)return null;if(l&&d){if(h=s(l.semver,d.semver,t),h>0)return null;if(0===h&&(">="!==l.operator||"<="!==d.operator))return null}for(const e of r){if(l&&!a(e,String(l),t))return null;if(d&&!a(e,String(d),t))return null;for(const r of n)if(!a(e,String(r),t))return!1;return!0}let E=!(!d||t.includePrerelease||!d.semver.prerelease.length)&&d.semver,T=!(!l||t.includePrerelease||!l.semver.prerelease.length)&&l.semver;E&&1===E.prerelease.length&&"<"===d.operator&&0===E.prerelease[0]&&(E=!1);for(const e of n){if(g=g||">"===e.operator||">="===e.operator,m=m||"<"===e.operator||"<="===e.operator,l)if(T&&e.semver.prerelease&&e.semver.prerelease.length&&e.semver.major===T.major&&e.semver.minor===T.minor&&e.semver.patch===T.patch&&(T=!1),">"===e.operator||">="===e.operator){if(p=c(l,e,t),p===e&&p!==l)return!1}else if(">="===l.operator&&!a(l.semver,String(e),t))return!1;if(d)if(E&&e.semver.prerelease&&e.semver.prerelease.length&&e.semver.major===E.major&&e.semver.minor===E.minor&&e.semver.patch===E.patch&&(E=!1),"<"===e.operator||"<="===e.operator){if(f=u(d,e,t),f===e&&f!==d)return!1}else if("<="===d.operator&&!a(d.semver,String(e),t))return!1;if(!e.operator&&(d||l)&&0!==h)return!1}return!(l&&m&&!d&&0!==h||d&&g&&!l&&0!==h||T||E)},c=(e,n,t)=>{if(!e)return n;const r=s(e.semver,n.semver,t);return r>0?e:r<0||">"===n.operator&&">="===e.operator?n:e},u=(e,n,t)=>{if(!e)return n;const r=s(e.semver,n.semver,t);return r<0?e:r>0||"<"===n.operator&&"<="===e.operator?n:e};e.exports=(e,n,t={})=>{if(e===n)return!0;e=new r(e,t),n=new r(n,t);let i=!1;e:for(const r of e.set){for(const e of n.set){const n=l(r,e,t);if(i=i||null!==n,n)continue e}if(i)return!1}return!0}},1042:(e,n,t)=>{const r=t(6902);e.exports=(e,n)=>new r(e,n).set.map((e=>e.map((e=>e.value)).join(" ").trim().split(" ")))},9042:(e,n,t)=>{const r=t(6902);e.exports=(e,n)=>{try{return new r(e,n).range||"*"}catch(e){return null}}},5702:(e,n,t)=>{"use strict";const r=t(9924),i=(e,n,t)=>{if(!1===r(e))throw new TypeError("toRegexRange: expected the first argument to be a number");if(void 0===n||e===n)return String(e);if(!1===r(n))throw new TypeError("toRegexRange: expected the second argument to be a number.");let o={relaxZeros:!0,...t};"boolean"==typeof o.strictZeros&&(o.relaxZeros=!1===o.strictZeros);let l=e+":"+n+"="+String(o.relaxZeros)+String(o.shorthand)+String(o.capture)+String(o.wrap);if(i.cache.hasOwnProperty(l))return i.cache[l].result;let c=Math.min(e,n),u=Math.max(e,n);if(1===Math.abs(c-u)){let t=e+"|"+n;return o.capture?`(${t})`:!1===o.wrap?t:`(?:${t})`}let d=p(e)||p(n),h={min:e,max:n,a:c,b:u},f=[],m=[];return d&&(h.isPadded=d,h.maxLen=String(h.max).length),c<0&&(m=a(u<0?Math.abs(u):1,Math.abs(c),h,o),c=h.a=0),u>=0&&(f=a(c,u,h,o)),h.negatives=m,h.positives=f,h.result=function(e,n,t){let r=s(e,n,"-",!1)||[],i=s(n,e,"",!1)||[],o=s(e,n,"-?",!0)||[];return r.concat(o).concat(i).join("|")}(m,f),!0===o.capture?h.result=`(${h.result})`:!1!==o.wrap&&f.length+m.length>1&&(h.result=`(?:${h.result})`),i.cache[l]=h,h.result};function o(e,n,t){if(e===n)return{pattern:e,count:[],digits:0};let r=function(e,n){let t=[];for(let r=0;r<e.length;r++)t.push([e[r],n[r]]);return t}(e,n),i=r.length,o="",a=0;for(let e=0;e<i;e++){let[n,t]=r[e];n===t?o+=n:"0"!==n||"9"!==t?o+=`[${s=n}${(l=t)-s==1?"":"-"}${l}]`:a++}var s,l;return a&&(o+=!0===t.shorthand?"\\d":"[0-9]"),{pattern:o,count:[a],digits:i}}function a(e,n,t,r){let i,a=function(e,n){let t=1,r=1,i=u(e,t),o=new Set([n]);for(;e<=i&&i<=n;)o.add(i),t+=1,i=u(e,t);for(i=d(n+1,r)-1;e<i&&i<=n;)o.add(i),r+=1,i=d(n+1,r)-1;return o=[...o],o.sort(l),o}(e,n),s=[],c=e;for(let e=0;e<a.length;e++){let n=a[e],l=o(String(c),String(n),r),u="";t.isPadded||!i||i.pattern!==l.pattern?(t.isPadded&&(u=f(n,t,r)),l.string=u+l.pattern+h(l.count),s.push(l),c=n+1,i=l):(i.count.length>1&&i.count.pop(),i.count.push(l.count[0]),i.string=i.pattern+h(i.count),c=n+1)}return s}function s(e,n,t,r,i){let o=[];for(let i of e){let{string:e}=i;r||c(n,"string",e)||o.push(t+e),r&&c(n,"string",e)&&o.push(t+e)}return o}function l(e,n){return e>n?1:n>e?-1:0}function c(e,n,t){return e.some((e=>e[n]===t))}function u(e,n){return Number(String(e).slice(0,-n)+"9".repeat(n))}function d(e,n){return e-e%Math.pow(10,n)}function h(e){let[n=0,t=""]=e;return t||n>1?`{${n+(t?","+t:"")}}`:""}function p(e){return/^-?(0+)\d/.test(e)}function f(e,n,t){if(!n.isPadded)return e;let r=Math.abs(n.maxLen-String(e).length),i=!1!==t.relaxZeros;switch(r){case 0:return"";case 1:return i?"0?":"0";case 2:return i?"0{0,2}":"00";default:return i?`0{0,${r}}`:`0{${r}}`}}i.cache={},i.clearCache=()=>i.cache={},e.exports=i},7015:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var i=Object.getOwnPropertyDescriptor(n,t);i&&!("get"in i?!n.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,i)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return i(n,e),n};Object.defineProperty(n,"__esModule",{value:!0}),n.activate=void 0;const a=o(t(9496)),s=o(t(4147)),l=o(t(1017)),c=o(t(7147)),u=t(6348),d=t(9249),h=t(6234),p=t(2178),f=t(1379),m=t(7208),g=t(1412),E=t(2556),T=t(9976),R=new E.LoggingService;async function S(){const e=a.Uri.file(l.join(__dirname,"../updates/RELEASE_NOTES-v3.2.md"));a.commands.executeCommand("markdown.showPreview",e)}n.activate=async function(e){const n=a.workspace.getConfiguration(g.EXTENSION_ID),t=n.get("linter.compiler"),r=n.get("formatting.formatter"),i=n.get("provide.autocomplete"),o=n.get("provide.hover"),E=n.get("provide.symbols");!function(){const e=a.workspace.getConfiguration(g.EXTENSION_ID),n=[];e.get("includePaths")&&n.push("fortran.includePaths"),e.get("gfortranExecutable")&&n.push("fortran.gfortranExecutable"),e.get("linterEnabled")&&n.push("fortran.linterEnabled"),e.get("linterExtraArgs")&&n.push("fortran.linterExtraArgs"),e.get("linterModOutput")&&n.push("fortran.linterModOutput"),e.get("symbols")&&n.push("fortran.symbols"),e.get("provideSymbols")&&n.push("fortran.provideSymbols"),e.get("provideHover")&&n.push("fortran.provideHover"),e.get("provideCompletion")&&n.push("fortran.provideCompletion"),0!==n.length&&a.window.showErrorMessage("Deprecated settings have been detected in your settings.\n       Please update your settings to make use of the new names. The old names will not work.","Open Settings").then((e=>{"Open Settings"===e&&a.commands.executeCommand("workbench.action.openGlobalSettings"),R.logError(`The following deprecated options have been detected:\n${n}`)})),a.extensions.getExtension("hansec.fortran-ls")&&a.window.showWarningMessage("Modern Fortran is not compatible with FORTRAN Intellisense. \n      Language Server integration is handled in Modern Fortran now.\n      Please Disable/Uninstall: FORTRAN Intellisense."),a.extensions.getExtension("ekibun.fortranbreaker")&&a.window.showWarningMessage("Modern Fortran is not compatible with Fortran Breakpoint Support.\n      Breakpoint support is handled natively in Modern Fortran.\n      Please Disable/Uninstall: Fortran Breakpoint Support."),a.extensions.getExtension("Gimly81.fortran")&&a.window.showWarningMessage("Modern Fortran is not compatible with extension: fortran.\n      Both extensions provide syntax highlighting for Fortran and should not be used simultaneously.\n      Please Disable/Uninstall extension: fortran.")}(),R.logInfo(`Extension Name: ${s.displayName}`),R.logInfo(`Extension Version: ${s.version}`),R.logInfo(`Linter set to: ${t}`),R.logInfo(`Formatter set to: ${r}`),R.logInfo(`Autocomplete set to: ${i}`),R.logInfo(`Hover set to: ${o}`),R.logInfo(`Symbols set to: ${E}`);const y=new m.FortranLintingProvider(R);if(y.activate(e.subscriptions),a.languages.registerCodeActionsProvider((0,g.FortranDocumentSelector)(),y),"Disabled"!==r){const n=a.languages.registerDocumentFormattingEditProvider((0,g.FortranDocumentSelector)(),new h.FortranFormattingProvider(R));e.subscriptions.push(n)}if("Built-in"===i){const e=new u.FortranCompletionProvider(R);a.languages.registerCompletionItemProvider((0,g.FortranDocumentSelector)(),e)}if("Built-in"===o||"Both"===o){const e=new f.FortranHoverProvider(R);a.languages.registerHoverProvider((0,g.FortranDocumentSelector)(),e)}if("Both"===E){const e=new d.FortranDocumentSymbolProvider;a.languages.registerDocumentSymbolProvider((0,g.FortranDocumentSelector)(),e)}return n.get("fortls.disabled")||new p.FortlsClient(R,e).activate(),e.subscriptions.push(a.languages.registerEvaluatableExpressionProvider((0,g.FortranDocumentSelector)(),{provideEvaluatableExpression(e,n,t){const r=e.getWordRangeAtPosition(n),i=e.getWordRangeAtPosition(n,/[a-z][\w%]*/i);if(r)return i?new a.EvaluatableExpression(r.with(i.start)):new a.EvaluatableExpression(r)}})),e.subscriptions.push(a.commands.registerCommand(T.WhatsNew,S)),c.existsSync(l.join(__dirname,"displayReleaseNotes.txt"))||(await S(),c.writeFileSync(l.join(__dirname,"displayReleaseNotes.txt"),"false")),e}},9976:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.WhatsNew=n.RescanLint=n.RestartLS=void 0,n.RestartLS="fortran.analysis.restartLanguageServer",n.RescanLint="fortran.analysis.rescanLinter",n.WhatsNew="fortran.analysis.showWhatsNew"},6348:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var i=Object.getOwnPropertyDescriptor(n,t);i&&!("get"in i?!n.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,i)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return i(n,e),n},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.FortranCompletionProvider=void 0;const s=o(t(9496)),l=t(9008),c=t(6949),u=t(1412),d=a(t(1082));class h{constructor(e=h.LOWER){this.preferredCase=e}convert(e){if(this.preferredCase===h.LOWER)return this.toLower(e);if(this.preferredCase===h.UPPER)return this.toUpper(e);throw new Error(`the provided case ${this.preferredCase} is not supported`)}toLower(e){return e.toLowerCase()}toUpper(e){return e.toUpperCase()}}h.LOWER="lowercase",h.UPPER="uppercase",n.FortranCompletionProvider=class{constructor(e){this.loggingService=e}provideCompletionItems(e,n,t){return this.provideCompletionItemsInternal(e,n,t,s.workspace.getConfiguration(u.EXTENSION_ID))}provideCompletionItemsInternal(e,n,t,r){return new Promise(((t,i)=>{const o=e.lineAt(n.line).text,a=o.substr(0,n.character);if(o.match(/^\s*\/\//))return t([]);if(!(0,l.isPositionInString)(e,n)&&a.endsWith('"'))return t([]);const s=this.getCurrentWord(e,n);if(s.match(/^\d+$/))return t([]);const c=new h(r.get("preferredCase"));return 0===s.length&&t([]),t([...this.getIntrinsicSuggestions(s,c),...this.getKeywordSuggestions(s),...this.getFunctionSuggestions(e,s)])}))}getIntrinsicSuggestions(e,n){return Object.keys(d.default).filter((n=>n.startsWith(e.toUpperCase()))).map((e=>new s.CompletionItem(n.convert(e),s.CompletionItemKind.Method)))}getKeywordSuggestions(e){return l.FORTRAN_KEYWORDS.filter((n=>n.startsWith(e.toUpperCase()))).map((e=>new s.CompletionItem(e.toLowerCase(),s.CompletionItemKind.Keyword)))}getFunctionSuggestions(e,n){return(0,c.getDeclaredFunctions)(e).filter((e=>e.name.startsWith(n))).map((e=>new s.CompletionItem(`${e.name}(`,s.CompletionItemKind.Function)))}getCurrentWord(e,n){const t=e.getWordRangeAtPosition(n);let r="";return t&&t.start.character<n.character&&(r=e.getText(t).substr(0,n.character-t.start.character)),r}}},9249:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var i=Object.getOwnPropertyDescriptor(n,t);i&&!("get"in i?!n.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,i)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return i(n,e),n};Object.defineProperty(n,"__esModule",{value:!0}),n.FortranDocumentSymbolProvider=void 0;const a=o(t(9496)),s=t(6949),l=t(2600),c=t(1412);n.FortranDocumentSymbolProvider=class{constructor(){this.parseDoc=async e=>{const n=e.lineCount;let t=[];const r=this.getSymbolTypes();for(let i=0;i<n;i++){const n=e.lineAt(i);if(n.isEmptyOrWhitespace)continue;const o=n.text.trim().charAt(0);if("!"===o||"#"===o)continue;const a=r.map((e=>this.getSymbolsOfType(e))).map((e=>e(n))).filter((e=>void 0!==e));a.length>0&&(t=t.concat(a))}return t}}provideDocumentSymbols(e,n){const t=new Promise(((e,t)=>{n.onCancellationRequested((e=>{t(0)}))}));return Promise.race([this.parseDoc(e),t])}getSymbolsOfType(e){switch(e){case"subroutine":return this.parseSubroutineDefinition;case"function":return this.parseFunctionDefinition;case"variable":return this.parseVariableDefinition;default:return()=>{}}}parseSubroutineDefinition(e){try{const n=(0,s.parseSubroutine)(e);if(n){const t=new a.Range(e.range.start,e.range.end);return new a.SymbolInformation(n.name,a.SymbolKind.Function,t)}}catch(e){console.log(e)}}parseFunctionDefinition(e){const n=(0,s.parseFunction)(e);if(n){const t=new a.Range(e.range.start,e.range.end);return new a.SymbolInformation(n.name,a.SymbolKind.Function,t)}}parseVariableDefinition(e){const n=(0,l.parseVars)(e);if(n){const t=new a.Range(e.range.start,e.range.end);return new a.SymbolInformation(n.name,a.SymbolKind.Variable,t)}}getSymbolTypes(){return a.workspace.getConfiguration(c.EXTENSION_ID),["subroutine","function"]}}},6234:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var i=Object.getOwnPropertyDescriptor(n,t);i&&!("get"in i?!n.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,i)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return i(n,e),n};Object.defineProperty(n,"__esModule",{value:!0}),n.FortranFormattingProvider=void 0;const a=o(t(1017)),s=o(t(2806)),l=o(t(9496)),c=t(1412);n.FortranFormattingProvider=class{constructor(e){this.logger=e,this.workspace=l.workspace.getConfiguration(c.EXTENSION_ID)}async provideDocumentFormattingEdits(e,n,t){const r=this.getFormatter();return"fprettify"===r?this.doFormatFprettify(e):"findent"===r?this.doFormatFindent(e):void this.logger.logError("Cannot format document with formatter set to Disabled")}async doFormatFprettify(e){if("FortranFreeForm"!==e.languageId)return void this.logger.logError("fprettify can only format FortranFreeForm, change\n                            to findent for FortranFixedForm formatting");const n="win32"!==process.platform?"fprettify":"fprettify.exe",t=this.getFormatterPath(),r=a.join(t,n);if(!s.sync(r,{nothrow:!0})){this.logger.logWarning(`Formatter: ${n} not detected in your system.\n                                Attempting to install now.`);const e=`Installing ${n} through pip with --user option`;(0,c.promptForMissingTool)(n,e,"Python",["Install"],this.logger)}const i=["--stdout",...this.getFormatterArgs()],o=[],[u,d]=await(0,c.spawnAsPromise)(r,i,void 0,e.getText());return o.push(new l.TextEdit((0,c.getWholeFileRange)(e),u)),d&&this.logger.logInfo(`fprettify error output: ${d}`),o}async doFormatFindent(e){const n="win32"!==process.platform?"findent":"findent.exe",t=this.getFormatterPath(),r=a.join(t,n);if(!s.sync(r,{nothrow:!0})){this.logger.logWarning(`Formatter: ${n} not detected in your system.\n                                    Attempting to install now.`);const e=`Installing ${n} through pip with --user option`;(0,c.promptForMissingTool)(n,e,"Python",["Install"],this.logger)}const i=this.getFormatterArgs(),o=[],[u,d]=await(0,c.spawnAsPromise)(r,i,void 0,e.getText());return o.push(new l.TextEdit((0,c.getWholeFileRange)(e),u)),d&&this.logger.logInfo(`findent error output: ${d}`),o}getFormatter(){return this.formatter=this.workspace.get("formatting.formatter","Disabled"),c.FORMATTERS.includes(this.formatter)||this.logger.logError(`Unsupported formatter: ${this.formatter}`),this.formatter}getFormatterArgs(){return this.workspace.get(`formatting.${this.formatter}Args`,[])}getFormatterPath(){const e=this.workspace.get("formatting.path","");return""!==e&&this.logger.logInfo(`Formatter located in: ${e}`),e}}},1379:function(e,n,t){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.FortranHoverProvider=void 0;const i=t(9496),o=r(t(1082));n.FortranHoverProvider=class{constructor(e){this.loggingService=e}provideHover(e,n,t){const r=e.getWordRangeAtPosition(n),o=e.getText(r),a=this.isIntrinsic(o);if(a)return new i.Hover(a)}isIntrinsic(e){if(Object.prototype.hasOwnProperty.call(o.default,e.toUpperCase()))return o.default[e.toUpperCase()].doc}}},7208:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var i=Object.getOwnPropertyDescriptor(n,t);i&&!("get"in i?!n.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,i)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return i(n,e),n},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.FortranLintingProvider=void 0;const s=o(t(1017)),l=o(t(2081)),c=a(t(2806)),u=o(t(9496)),d=t(2556),h=t(1412),p=o(t(3294)),f=t(2884),m=t(9008),g=t(9976);n.FortranLintingProvider=class{constructor(e=new d.LoggingService){this.logger=e,this.cache={includePaths:[""],globIncPaths:[""]},this.getIncludeParams=e=>e.map((e=>`-I${e}`))}provideCodeActions(e,n,t,r){}async activate(e){e.push(u.commands.registerCommand(g.RescanLint,this.rescanLinter,this)),this.diagnosticCollection=u.languages.createDiagnosticCollection("Fortran"),u.workspace.onDidOpenTextDocument(this.doModernFortranLint,this,e),u.workspace.onDidCloseTextDocument((e=>{this.diagnosticCollection.delete(e.uri)}),null,e),u.workspace.onDidSaveTextDocument(this.doModernFortranLint,this),u.workspace.textDocuments.forEach(this.doModernFortranLint,this)}dispose(){this.diagnosticCollection.clear(),this.diagnosticCollection.dispose()}doModernFortranLint(e){if("Disabled"===u.workspace.getConfiguration("fortran.linter").get("fortran.linter.compiler"))return;if(!(0,h.FortranDocumentSelector)().some((n=>n.scheme===e.uri.scheme))||!(0,h.FortranDocumentSelector)().some((n=>n.language===e.languageId)))return;let n="";const t=this.getLinterExecutable(),r=this.constructArgumentList(e),i=s.parse(e.fileName).dir,o=process.env;o.LC_ALL="C","win32"===process.platform&&(o.Path.includes(s.dirname(t))||(o.Path=`${s.dirname(t)}${s.delimiter}${o.Path}`));const a=l.spawn(t,r,{cwd:i,env:o});a.pid?(a.stdout.on("data",(e=>{n+=e})),a.stderr.on("data",(e=>{n+=e})),a.stderr.on("end",(()=>{const t=this.getLinterResults(n);this.diagnosticCollection.set(e.uri,t)})),a.on("error",(e=>{console.log(`ERROR: ${e}`)}))):a.on("error",(e=>{"ENOENT"===e.code&&u.window.showErrorMessage("Linter can't be found in $PATH. Update your settings with a proper path or disable the linter.")}))}constructArgumentList(e){const n=[...this.getMandatoryLinterArgs(this.compiler),...this.getLinterExtraArgs(this.compiler),...this.getModOutputDir(this.compiler)],t=this.getIncludePaths(),r=e.fileName.lastIndexOf("."),i=e.fileName.substring(0,r);return[...n,...this.getIncludeParams(t),e.fileName,"-o",`${i}.mod`].map((e=>e.trim())).filter((e=>""!==e))}getModOutputDir(e){let n=u.workspace.getConfiguration("fortran").get("linter.modOutput",""),t="";if(""===n)return[];switch(e){case"flang":case"gfortran":t="-J";break;case"ifx":case"ifort":t="-module";break;case"nagfor":t="-mdir";break;default:t=""}return n=(0,h.resolveVariables)(n),this.logger.logInfo(`Linter.moduleOutput: ${t} ${n}`),[t,n]}getIncludePaths(){let e=u.workspace.getConfiguration("fortran").get("linter.includePaths",[]);if((0,m.arraysEqual)(e,this.cache.includePaths))return this.cache.globIncPaths;this.cache.includePaths=e,this.logger.logInfo(`Linter.include:\n${e.join("\r\n")}`);const n=e.map((e=>(0,h.resolveVariables)(e)));e=e.map((e=>e.replace("/\\/g","/")));try{const e=p.sync(n,{onlyDirectories:!0,suppressErrors:!1});return this.cache.globIncPaths=e,e}catch(e){this.logger.logWarning("You lack read permissions for an include directory\n          or more likely a glob match from the input 'includePaths' list. This can happen when\n          using overly broad root level glob patters e.g. /usr/lib/** .\n          No reason to worry. I will attempt to recover. \n          You should consider adjusting your 'includePaths' if linting performance is slow."),this.logger.logWarning(`${e.message}`);try{const e=[];for(const t of n)e.push(...f.glob.sync(t+"/",{strict:!1}));return this.cache.globIncPaths=e,e}catch(e){this.logger.logError(`Failed to recover: ${e}`)}}}getLinterExecutable(){const e=u.workspace.getConfiguration("fortran.linter");return this.compiler=e.get("compiler","gfortran"),this.compilerPath=e.get("compilerPath",""),""===this.compilerPath&&(this.compilerPath=c.default.sync(this.compiler)),this.logger.logInfo(`using linter: ${this.compiler} located in: ${this.compilerPath}`),this.compilerPath}getLinterExtraArgs(e){const n=u.workspace.getConfiguration("fortran");let t;switch(e){case"flang":case"gfortran":t=["-Wall"];break;case"ifx":case"ifort":t=["-warn","all"];break;default:t=[]}const r=n.get("linter.extraArgs");if(r.length>0&&(t=r.slice()),"gfortran"===e){const e=n.get("fortls.maxLineLength"),r=-1===e?"none":e.toString();t.push(`-ffree-line-length-${r}`,`-ffixed-line-length-${r}`)}return this.logger.logInfo(`Linter.arguments:\n${t.join("\r\n")}`),t.map((e=>(0,h.resolveVariables)(e)))}getLinterResults(e){const n=this.getCompilerREGEX(this.compiler),t=[...e.matchAll(n)];switch(this.compiler){case"gfortran":return this.linterParserGCC(t);case"ifx":case"ifort":return this.linterParserIntel(t);case"nagfor":return this.linterParserNagfor(t);default:u.window.showErrorMessage(`${this.compiler} compiler is not supported yet.`)}}linterParserGCC(e){const n=[];for(const t of e){const e=t.groups,r=(void 0!==e.fname?e.fname:e.bin,void 0!==e.ln?parseInt(e.ln):1),i=void 0!==e.cn?parseInt(e.cn):1,o=void 0!==e.sev1?e.sev1:e.sev2,a=void 0!==e.msg1?e.msg1:e.msg2,s=new u.Range(new u.Position(r-1,i),new u.Position(r-1,i));let l;switch(o.toLowerCase()){case"error":case"fatal error":default:l=u.DiagnosticSeverity.Error;break;case"warning":l=u.DiagnosticSeverity.Warning;break;case"info":l=u.DiagnosticSeverity.Information}const c=new u.Diagnostic(s,a,l);n.push(c)}return n}linterParserIntel(e){const n=[];for(const t of e){const e=t.groups,r=(e.fname,parseInt(e.ln)),i=void 0!==e.sev1?e.sev1:e.sev2,o=void 0!==e.msg1?e.msg1:e.msg2,a=void 0!==e.cn?e.cn.length:1,s=new u.Range(new u.Position(r-1,a),new u.Position(r-1,a));let l;switch(i.toLowerCase()){case"error":case"fatal error":default:l=u.DiagnosticSeverity.Error;break;case"warning":case"remark":l=u.DiagnosticSeverity.Warning;break;case"info":l=u.DiagnosticSeverity.Information}const c=new u.Diagnostic(s,o,l);n.push(c)}return n}linterParserNagfor(e){const n=[];for(const t of e){const e=t.groups,r=(e.fname,parseInt(e.ln)),i=e.sev1,o=e.msg1,a=u.window.activeTextEditor.document.lineAt(r-1).range;let s;switch(i.toLowerCase()){case"panic":case"fatal":case"error":s=u.DiagnosticSeverity.Error;break;case"extension":case"questionable":case"deleted feature used":case"warning":s=u.DiagnosticSeverity.Warning;break;case"remark":case"note":case"info":s=u.DiagnosticSeverity.Information;break;default:s=u.DiagnosticSeverity.Error,console.log("Using default Error Severity for: "+i)}const l=new u.Diagnostic(a,o,s);n.push(l)}return n}getCompilerREGEX(e){switch(e){case"gfortran":return/(?:^(?<fname>(?:\w:\\)?.*):(?<ln>\d+):(?<cn>\d+):(?:\s+.*\s+.*?\s+)(?<sev1>Error|Warning|Fatal Error):\s(?<msg1>.*)$)|(?:^(?<bin>\w+):\s*(?<sev2>\w+\s*\w*):\s*(?<msg2>.*)$)/gm;case"flang":return/^([a-zA-Z]:\\)*([^:]*):([0-9]+):([0-9]+):\s+(.*)\s+.*?\s+(Error|Warning|Fatal Error):\s(.*)$/gm;case"ifx":case"ifort":return/^(?<fname>(?:\w:\\)?.*)\((?<ln>\d+)\):\s*(?:#(?:(?<sev2>\w*):\s*(?<msg2>.*$))|(?<sev1>\w*)\s*(?<msg1>.*$)(?:\s*.*\s*)(?<cn>-*\^))/gm;case"nagfor":return/^(?<sev1>Remark|Info|Note|Warning|Questionable|Extension|Obsolescent|Deleted feature used|(?:[\w]+ )?Error|Fatal|Panic)(\(\w+\))?: (?<fname>[\S ]+), line (?<ln>\d+): (?<msg1>.+)$/gm;default:u.window.showErrorMessage("Unsupported linter, change your linter.compiler option")}}getMandatoryLinterArgs(e){switch(e){case"flang":case"gfortran":return["-fsyntax-only","-cpp","-fdiagnostics-show-option"];case"ifx":case"ifort":return["-syntax-only","-fpp"];case"nagfor":return["-M","-quiet"]}}rescanLinter(){this.cache.includePaths=[],this.getIncludePaths()}}},6949:(e,n)=>{"use strict";var t;Object.defineProperty(n,"__esModule",{value:!0}),n.validVariableName=n.parseArgs=n._parse=n.parseSubroutine=n.parseFunction=n.getDeclaredSubroutines=n.getDeclaredFunctions=n.MethodType=void 0,function(e){e[e.Subroutine=0]="Subroutine",e[e.FortranFunction=1]="FortranFunction"}(t=n.MethodType||(n.MethodType={})),n.getDeclaredFunctions=function(e){const t=e.lineCount,r=[];for(let i=0;i<t;i++){const t=e.lineAt(i);if(t.isEmptyOrWhitespace)continue;const o=(0,n.parseFunction)(t);o&&r.push(o)}return r},n.getDeclaredSubroutines=function(e){const t=e.lineCount,r=[];for(let i=0;i<t;i++){const t=e.lineAt(i);if(t.isEmptyOrWhitespace)continue;const o=(0,n.parseSubroutine)(t);o&&r.push(o)}return r},n.parseFunction=e=>(0,n._parse)(e,t.FortranFunction),n.parseSubroutine=e=>(0,n._parse)(e,t.Subroutine),n._parse=(e,r)=>{const i=r===t.Subroutine?/^\s*(?!\bend\b)\w*\s*\bsubroutine\b\s*([a-z][a-z0-9_]*)\s*(?:\((\s*[a-z][a-z0-9_,\s]*)*\s*(\)|&))*/i:/(?<=([a-zA-Z]+(\([\w.=]+\))*)*)\s*\bfunction\b\s*([a-zA-Z_][a-z0-9_]*)\s*\((\s*[a-z_][a-z0-9_,\s]*)*\s*(?:\)|&)\s*(result\([a-z_][\w]*(?:\)|&))*/i;if(r===t.Subroutine&&e.text.toLowerCase().indexOf("subroutine")<0)return;if(r===t.FortranFunction&&e.text.toLowerCase().indexOf("function")<0)return;const o=i.exec(e.text);if(o&&r===t.FortranFunction){const[t,r,i,a,s]=o.slice(1,5);return{name:i,args:a?(0,n.parseArgs)(a):[],lineNumber:e.lineNumber}}if(o&&r===t.Subroutine){const[t,r]=o.slice(1);return{name:t,args:r?(0,n.parseArgs)(r):[],lineNumber:e.lineNumber}}},n.parseArgs=e=>e.trim().split(",").filter((e=>(0,n.validVariableName)(e))).map((e=>({name:e}))),n.validVariableName=e=>null!==e.trim().match(/^[a-zA-Z_][a-zA-Z0-9_]*$/)},9008:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var i=Object.getOwnPropertyDescriptor(n,t);i&&!("get"in i?!n.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,i)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return i(n,e),n};Object.defineProperty(n,"__esModule",{value:!0}),n.arraysEqual=n.isArrayOfString=n.isOptionalString=n.isArray=n.isObject=n.isBoolean=n.isNumber=n.isString=n.isUri=n.delay=n.isPositionInString=n._loadDocString=n.FORTRAN_KEYWORDS=void 0;const a=o(t(7147)),s=o(t(9496));function l(e){return"string"==typeof e}function c(e){return e instanceof Array}n.FORTRAN_KEYWORDS=["FUNCTION","MODULE","SUBROUTINE","CONTAINS","USE","KIND","DO","IF","ELIF","END","IMPLICIT"],n._loadDocString=e=>{e=e.toUpperCase();let n=a.readFileSync(__dirname+"/../../../src/docs/"+e+".html").toString();return n=n.replace(/<var>(.+?)<\/var>/g,((e,n)=>"`"+n+"`")).replace(/<samp><span class="command">(\w+)<\/span><\/samp>/g,((e,n)=>`*${n}*`)).replace(/<dt>([\w\W]+?)<\/dt><dd>([\w\W]+?)(<br>)?<\/dd>/g,((e,n,t)=>`**${n}** ${t}\n`)).replace(/<code class="smallexample"[\s\W\w]*?>([\s\W\w<>]*?)<\/code>/g,((e,n)=>"```\n"+n+"\n\n```\n")).replace(/<td\s*.*?>([\s\w<>/\W]+?)<\/td>/g,((e,n)=>" | "+n)).replace(/<tr\s*.*?>([\s\w<>/\W]+?)<\/tr>/g,((e,n)=>n+"\n")).replace(/<tbody\s*.*?>([\s\w<>/\W]+?)<\/tbody>/g,((e,n)=>n)).replace(/<table\s*.*>([\s\w<>/\W]+?)<\/table>/g,((e,n)=>n)).replace(/<code>(.+?)<\/code>\n?/g,((e,n)=>"`"+n+"`")).replace(/<p>\s*?/g,"\n").replace(/<\/p>\s*?/g,"\n").replace(/^ *<h(\d)>(.+?)<\/h\1>\n?/gm,((e,n,t)=>{const r=parseInt(n);return`${"#".repeat(r)} ${t}\n`})),n=n.replace(/^ *<br>\n?/gm,"\n").replace(/<\?dl>/g,""),console.log(n),n},n.isPositionInString=function(e,n){const t=e.lineAt(n.line).text.substr(0,n.character);let r=(t.match(/"/g)||[]).length;return r-=(t.match(/\\"/g)||[]).length,r%2==1},n.delay=e=>new Promise((n=>setTimeout(n,e))),n.isUri=function(e){return e&&e instanceof s.Uri},n.isString=l,n.isNumber=function(e){return"number"==typeof e},n.isBoolean=function(e){return"boolean"==typeof e},n.isObject=function(e){return"object"==typeof e},n.isArray=c,n.isOptionalString=function(e){return void 0===e||l(e)},n.isArrayOfString=function(e){return c(e)&&e.every(l)},n.arraysEqual=function(e,n){return e===n||null!=e&&null!=n&&e.length===n.length&&!!e.every(((e,t)=>e===n[t]))}},1412:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var i=Object.getOwnPropertyDescriptor(n,t);i&&!("get"in i?!n.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,i)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return i(n,e),n};Object.defineProperty(n,"__esModule",{value:!0}),n.spawnAsPromise=n.getWholeFileRange=n.resolveVariables=n.installPythonTool=n.promptForMissingTool=n.getOuterMostWorkspaceFolder=n.sortedWorkspaceFolders=n.isFortran=n.FortranDocumentSelector=n.envDelimiter=n.FORMATTERS=n.EXTENSION_VSSTORE_ID=n.EXTENSION_ID=n.LS_NAME=void 0;const a=o(t(2037)),s=o(t(9496)),l=o(t(9491)),c=o(t(2081)),u=t(9008);function d(e){return e?[{scheme:"file",language:"FortranFreeForm",pattern:`${e}/**/*`},{scheme:"file",language:"FortranFixedForm",pattern:`${e}/**/*`}]:[{scheme:"file",language:"FortranFreeForm"},{scheme:"file",language:"FortranFixedForm"}]}function h(){return s.workspace.workspaceFolders?s.workspace.workspaceFolders.map((e=>{let n=e.uri.toString();return"/"!==n.charAt(n.length-1)&&(n+="/"),n})).sort(((e,n)=>e.length-n.length)):[]}function p(e,n){const t=c.spawnSync("pip","install --user --upgrade ".concat(e).split(" "));if(t.error&&n.logError(`Python package ${e} failed to install with code: ${t.error}`),t.stdout){const r="-".repeat(80);n.logInfo(`pip install --user --upgrade ${e}:\n${r}\n${t.stdout}${r}`),n.logInfo("pip install was successful")}}n.LS_NAME="fortls",n.EXTENSION_ID="fortran",n.EXTENSION_VSSTORE_ID="fortran-lang.linter-gfortran",n.FORMATTERS=["Disabled","findent","fprettify"],n.envDelimiter="win32"===process.platform?";":":",n.FortranDocumentSelector=d,n.isFortran=function(e){return d().some((n=>n.scheme===e.uri.scheme))&&d().some((n=>n.language===e.languageId))},n.sortedWorkspaceFolders=h,n.getOuterMostWorkspaceFolder=function(e){const n=h();for(const t of n){let n=e.uri.toString();if("/"!==n.charAt(n.length-1)&&(n+="/"),n.startsWith(t))return s.workspace.getWorkspaceFolder(s.Uri.parse(t))}return e},n.promptForMissingTool=async function(e,n,t,r,i,o){return s.window.showInformationMessage(n,...r).then((n=>{if("Install"===n)switch(t){case"Python":p(e,i);break;case"VSExt":i.logInfo(`Installing VS Marketplace Extension with id: ${e}`),s.commands.executeCommand("extension.open",e),s.commands.executeCommand("workbench.extensions.installExtension",e),i.logInfo(`Extension ${e} successfully installed`);break;default:i.logError(`Failed to install tool: ${e}`),s.window.showErrorMessage(`Failed to install tool: ${e}`)}else"Don't Show Again"===n&&o()}))},n.installPythonTool=p,n.resolveVariables=function(e,t){if(!e)return"";let r=()=>/\$\{((env|config|workspaceFolder|file|fileDirname|fileBasenameNoExtension)(\.|:))?(.*?)\}/g,i=e;const o=new Set;for(;!o.has(i);)o.add(i),i=i.replace(r(),((r,i,o,a,c)=>{let d;switch(o||(o="workspaceFolder"),o){case"env":if(t){const i=t[c];(0,u.isString)(i)?d=i:e===r&&(0,u.isArrayOfString)(i)&&(d=i.join(n.envDelimiter))}void 0===d&&(d=process.env[c]);break;case"config":{const e=s.workspace.getConfiguration();e&&(d=e.get(c));break}case"workspaceFolder":if(c&&s.workspace&&s.workspace.workspaceFolders){let e=s.workspace.workspaceFolders.find((e=>e.name.toLocaleLowerCase()===c.toLocaleLowerCase()));e||(e=s.workspace.workspaceFolders[0]),d=e.uri.fsPath}break;default:l.fail("unknown varType matched")}return void 0!==d?d:r}));return r=()=>/^~/g,i=i.replace(r(),((e,n)=>a.homedir())),i},n.getWholeFileRange=function(e){return new s.Range(0,0,e.lineCount,0)},n.spawnAsPromise=async function(e,n,t,r){return new Promise(((i,o)=>{let a="",s="";const l=c.spawn(e,n,t);l.stdout.on("data",(e=>{a+=e})),l.stderr.on("data",(e=>{s+=e})),l.on("close",(e=>{0===e?i([a,s]):o([a,s])})),l.on("error",(e=>{o(e.toString())})),r&&(l.stdin.write(r),l.stdin.end())}))}},2600:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.parseVars=n.getDeclaredVars=void 0;const t=/([a-zA-Z]{1,}(\([a-zA-Z0-9]{1,}\))?)(\s*,\s*[a-zA-Z()])*\s*::\s*([a-zA-Z_][a-zA-Z0-9_]*)/g;n.getDeclaredVars=function(e){const t=e.lineCount,r=[];for(let i=0;i<t;i++){const t=e.lineAt(i);if(t.isEmptyOrWhitespace)continue;const o=(0,n.parseVars)(t);o&&r.push({...o,lineNumber:i})}return r},n.parseVars=e=>{if(e.text.match(t)){const[n,r,i,o,a]=t.exec(e.text);return{name:a,type:r}}}},2178:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var i=Object.getOwnPropertyDescriptor(n,t);i&&!("get"in i?!n.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,i)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return i(n,e),n};Object.defineProperty(n,"__esModule",{value:!0}),n.FortlsClient=n.clients=void 0;const a=o(t(1017)),s=o(t(9496)),l=t(2081),c=t(9496),u=t(2847),d=t(1412),h=t(9976);n.clients=new Map,n.FortlsClient=class{constructor(e,n){this.logger=e,this.context=n,this.name="Fortran Language Server",this.logger.logInfo("Fortran Language Server"),void 0!==n&&this.context.subscriptions.push(s.commands.registerCommand(h.RestartLS,this.restartLS,this))}async activate(){await this.fortlsDownload().then((e=>{e||(c.workspace.onDidOpenTextDocument(this.didOpenTextDocument,this),c.workspace.textDocuments.forEach(this.didOpenTextDocument,this),c.workspace.onDidChangeWorkspaceFolders((e=>{for(const t of e.removed){const e=n.clients.get(t.uri.toString());e&&(n.clients.delete(t.uri.toString()),e.stop())}})))}))}async deactivate(){const e=[];for(const[t,r]of n.clients.entries())e.push(r.stop()),n.clients.delete(t);await Promise.all(e)}async didOpenTextDocument(e){if(!(0,d.isFortran)(e))return;const t=await this.fortlsArguments(),r=c.workspace.getConfiguration(d.EXTENSION_ID).get("fortls.path");if(this.version=this.getLSVersion(r,t),!this.version)return;const i={command:r,args:t};let o=c.workspace.getWorkspaceFolder(e.uri);if(!o){const r=a.dirname(e.uri.fsPath);if(n.clients.has(r))return;this.logger.logInfo(`Initialising Language Server for file: ${e.uri.fsPath} with command-line options: ${t.join(", ")}`);const o={documentSelector:(0,d.FortranDocumentSelector)(r),outputChannel:this.logger.getOutputChannel(),synchronize:{configurationSection:d.EXTENSION_ID}};return this.client=new u.LanguageClient(d.LS_NAME,this.name,i,o),this.client.start(),void n.clients.set(r,this.client)}if(!n.clients.has(o.uri.toString())){if(o=(0,d.getOuterMostWorkspaceFolder)(o),n.clients.has(o.uri.toString()))return;this.logger.logInfo(`Initialising Language Server for workspace: ${e.uri.fsPath} with command-line options: ${t.join(", ")}`);const r={documentSelector:(0,d.FortranDocumentSelector)(o.uri.fsPath),workspaceFolder:o,outputChannel:this.logger.getOutputChannel(),synchronize:{configurationSection:d.EXTENSION_ID}};this.client=new u.LanguageClient(d.LS_NAME,this.name,i,r),this.client.start(),n.clients.set(o.uri.toString(),this.client)}}async fortlsArguments(){const e=c.workspace.getConfiguration(d.EXTENSION_ID),n=e.get("fortls.maxLineLength"),t=e.get("fortls.maxCommentLineLength"),r=e.get("fortls.extraArgs"),i=e.get("provide.autocomplete"),o=e.get("preferredCase"),a=e.get("provide.hover"),s=c.workspace.getConfiguration(`${d.EXTENSION_ID}.fortls.preprocessor`),l=["--enable_code_actions"];"Disabled"!==i&&"Built-in"!==i||l.push("--autocomplete_no_prefix"),"fortls"!==a&&"Both"!==a||l.push("--hover_signature","--use_signature_help"),"lowercase"===o&&l.push("--lowercase_intrinsics"),e.get("fortls.configure")&&l.push("-c",e.get("fortls.configure")),e.get("fortls.nthreads")&&l.push(`--nthreads=${e.get("fortls.nthreads")}`),e.get("fortls.notifyInit")&&l.push("--notify_init"),e.get("fortls.incrementalSync")&&l.push("--incremental_sync"),e.get("fortls.sortKeywords")&&l.push("--sort_keywords"),e.get("fortls.disableAutoupdate")&&l.push("--disable_autoupdate"),e.get("fortls.disableDiagnostics")&&l.push("--disable_diagnostics"),e.get("fortls.symbolTypes")||l.push("--symbol_skip_mem"),n>0&&l.push(`--max_line_length=${n}`),t>0&&l.push(`--max_comment_line_length=${t}`),r.length>0&&l.push(...r),e.get("fortls.suffixes").length>0&&l.push("--incl_suffixes",...e.get("fortls.suffixes")),e.get("fortls.directories").length>0&&l.push("--source_dirs",...e.get("fortls.directories")),e.get("fortls.excludeSuffixes").length>0&&l.push("--excl_suffixes",...e.get("fortls.excludeSuffixes")),e.get("fortls.excludeDirectories").length>0&&l.push("--excl_paths",...e.get("fortls.excludeDirectories")),s.get("suffixes").length>0&&l.push("--pp_suffixes",...s.get("suffixes")),s.get("directories").length>0&&l.push("--include_dirs",...s.get("directories"));const u=s.get("definitions");return Object.keys(u).length>0&&l.push(`--pp_defs=${JSON.stringify(u)}`),l}getLSVersion(e,n){const t=(0,l.spawnSync)(e,n.concat(["--version"]));return t.error?(c.window.showErrorMessage('Modern Fortran Error starting fortls: Check that fortls is in your PATH or that "fortran.fortls.path" is pointing to a fortls binary.',"Settings","Workspace settings","Disable fortls").then((e=>{const n=c.workspace.getConfiguration(d.EXTENSION_ID);"Settings"===e?c.commands.executeCommand("workbench.action.openGlobalSettings"):"Workspace settings"===e?c.commands.executeCommand("workbench.action.openWorkspaceSettings"):"Disable fortls"===e&&n.update("fortls.disabled",!0)})),null):0!==t.status?(c.window.showErrorMessage("Error launching fortls: Please check that all selected options are supported by your language server version.","Settings","Workspace settings").then((e=>{"Settings"===e?c.commands.executeCommand("workbench.action.openGlobalSettings"):"Workspace settings"===e&&c.commands.executeCommand("workbench.action.openWorkspaceSettings")})),null):t.stdout.toString().trim()}async fortlsDownload(){const e=c.workspace.getConfiguration(d.EXTENSION_ID),n=e.get("fortls.path"),t=(0,l.spawnSync)(n,["--version"]);return new Promise((n=>{let r=!1;t.error?c.window.showInformationMessage("It is highly recommended to use the fortls to enable IDE features like hover, peeking, GoTos and many more. \n      For a full list of features the language server adds see: https://github.com/gnikit/fortls","Install","Disable").then((t=>{if("Install"===t){const e=(0,l.spawnSync)("pip",["install","--user","--upgrade",d.LS_NAME]);e.error&&(c.window.showErrorMessage("Had trouble installing fortls, please install manually"),r=!0),e.stdout&&(this.logger.logInfo(e.stdout.toString()),r=!1)}else"Disable"==t&&(e.update("fortls.disabled",!0),r=!0);n(r)})):n(!1)}))}async restartLS(){this.logger.logInfo("Restarting language server..."),s.window.showInformationMessage("Restarting language server..."),await this.deactivate(),await this.activate()}}},2556:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.LoggingService=void 0;const r=t(9496);n.LoggingService=class{constructor(){this.outputChannel=r.window.createOutputChannel("Modern Fortran"),this.logLevel="INFO"}setOutputLevel(e){this.logLevel=e}getOutputLevel(){return this.logLevel}getOutputChannel(){return this.outputChannel}logDebug(e,n){"NONE"!==this.logLevel&&"INFO"!==this.logLevel&&"WARN"!==this.logLevel&&"ERROR"!==this.logLevel&&(this.logMessage(e,"INFO"),n&&this.logObject(n))}logInfo(e,n){"NONE"!==this.logLevel&&"WARN"!==this.logLevel&&"ERROR"!==this.logLevel&&(this.logMessage(e,"INFO"),n&&this.logObject(n))}logWarning(e,n){"NONE"!==this.logLevel&&"ERROR"!==this.logLevel&&(this.logMessage(e,"WARN"),n&&this.logObject(n))}logError(e,n){"NONE"!==this.logLevel&&(this.logMessage(e,"ERROR"),"string"==typeof n?this.outputChannel.appendLine(n):n?.message||n?.stack?(n?.message&&this.logMessage(n.message,"ERROR"),n?.stack&&this.outputChannel.appendLine(n.stack)):n&&this.logObject(n))}show(){this.outputChannel.show()}logObject(e){const n=JSON.stringify(e,null,2);this.outputChannel.appendLine(n)}logMessage(e,n){const t=(new Date).toLocaleTimeString();this.outputChannel.appendLine(`["${n}" - ${t}] ${e}`)}}},3870:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.SetTraceNotification=n.TraceFormat=n.Trace=n.ProgressType=n.ProgressToken=n.createMessageConnection=n.NullLogger=n.ConnectionOptions=n.ConnectionStrategy=n.WriteableStreamMessageWriter=n.AbstractMessageWriter=n.MessageWriter=n.ReadableStreamMessageReader=n.AbstractMessageReader=n.MessageReader=n.CancellationToken=n.CancellationTokenSource=n.Emitter=n.Event=n.Disposable=n.LRUCache=n.Touch=n.LinkedMap=n.ParameterStructures=n.NotificationType9=n.NotificationType8=n.NotificationType7=n.NotificationType6=n.NotificationType5=n.NotificationType4=n.NotificationType3=n.NotificationType2=n.NotificationType1=n.NotificationType0=n.NotificationType=n.ErrorCodes=n.ResponseError=n.RequestType9=n.RequestType8=n.RequestType7=n.RequestType6=n.RequestType5=n.RequestType4=n.RequestType3=n.RequestType2=n.RequestType1=n.RequestType0=n.RequestType=n.Message=n.RAL=void 0,n.CancellationStrategy=n.CancellationSenderStrategy=n.CancellationReceiverStrategy=n.ConnectionError=n.ConnectionErrors=n.LogTraceNotification=void 0;const r=t(839);Object.defineProperty(n,"Message",{enumerable:!0,get:function(){return r.Message}}),Object.defineProperty(n,"RequestType",{enumerable:!0,get:function(){return r.RequestType}}),Object.defineProperty(n,"RequestType0",{enumerable:!0,get:function(){return r.RequestType0}}),Object.defineProperty(n,"RequestType1",{enumerable:!0,get:function(){return r.RequestType1}}),Object.defineProperty(n,"RequestType2",{enumerable:!0,get:function(){return r.RequestType2}}),Object.defineProperty(n,"RequestType3",{enumerable:!0,get:function(){return r.RequestType3}}),Object.defineProperty(n,"RequestType4",{enumerable:!0,get:function(){return r.RequestType4}}),Object.defineProperty(n,"RequestType5",{enumerable:!0,get:function(){return r.RequestType5}}),Object.defineProperty(n,"RequestType6",{enumerable:!0,get:function(){return r.RequestType6}}),Object.defineProperty(n,"RequestType7",{enumerable:!0,get:function(){return r.RequestType7}}),Object.defineProperty(n,"RequestType8",{enumerable:!0,get:function(){return r.RequestType8}}),Object.defineProperty(n,"RequestType9",{enumerable:!0,get:function(){return r.RequestType9}}),Object.defineProperty(n,"ResponseError",{enumerable:!0,get:function(){return r.ResponseError}}),Object.defineProperty(n,"ErrorCodes",{enumerable:!0,get:function(){return r.ErrorCodes}}),Object.defineProperty(n,"NotificationType",{enumerable:!0,get:function(){return r.NotificationType}}),Object.defineProperty(n,"NotificationType0",{enumerable:!0,get:function(){return r.NotificationType0}}),Object.defineProperty(n,"NotificationType1",{enumerable:!0,get:function(){return r.NotificationType1}}),Object.defineProperty(n,"NotificationType2",{enumerable:!0,get:function(){return r.NotificationType2}}),Object.defineProperty(n,"NotificationType3",{enumerable:!0,get:function(){return r.NotificationType3}}),Object.defineProperty(n,"NotificationType4",{enumerable:!0,get:function(){return r.NotificationType4}}),Object.defineProperty(n,"NotificationType5",{enumerable:!0,get:function(){return r.NotificationType5}}),Object.defineProperty(n,"NotificationType6",{enumerable:!0,get:function(){return r.NotificationType6}}),Object.defineProperty(n,"NotificationType7",{enumerable:!0,get:function(){return r.NotificationType7}}),Object.defineProperty(n,"NotificationType8",{enumerable:!0,get:function(){return r.NotificationType8}}),Object.defineProperty(n,"NotificationType9",{enumerable:!0,get:function(){return r.NotificationType9}}),Object.defineProperty(n,"ParameterStructures",{enumerable:!0,get:function(){return r.ParameterStructures}});const i=t(6184);Object.defineProperty(n,"LinkedMap",{enumerable:!0,get:function(){return i.LinkedMap}}),Object.defineProperty(n,"LRUCache",{enumerable:!0,get:function(){return i.LRUCache}}),Object.defineProperty(n,"Touch",{enumerable:!0,get:function(){return i.Touch}});const o=t(3911);Object.defineProperty(n,"Disposable",{enumerable:!0,get:function(){return o.Disposable}});const a=t(7135);Object.defineProperty(n,"Event",{enumerable:!0,get:function(){return a.Event}}),Object.defineProperty(n,"Emitter",{enumerable:!0,get:function(){return a.Emitter}});const s=t(3881);Object.defineProperty(n,"CancellationTokenSource",{enumerable:!0,get:function(){return s.CancellationTokenSource}}),Object.defineProperty(n,"CancellationToken",{enumerable:!0,get:function(){return s.CancellationToken}});const l=t(6525);Object.defineProperty(n,"MessageReader",{enumerable:!0,get:function(){return l.MessageReader}}),Object.defineProperty(n,"AbstractMessageReader",{enumerable:!0,get:function(){return l.AbstractMessageReader}}),Object.defineProperty(n,"ReadableStreamMessageReader",{enumerable:!0,get:function(){return l.ReadableStreamMessageReader}});const c=t(6654);Object.defineProperty(n,"MessageWriter",{enumerable:!0,get:function(){return c.MessageWriter}}),Object.defineProperty(n,"AbstractMessageWriter",{enumerable:!0,get:function(){return c.AbstractMessageWriter}}),Object.defineProperty(n,"WriteableStreamMessageWriter",{enumerable:!0,get:function(){return c.WriteableStreamMessageWriter}});const u=t(1343);Object.defineProperty(n,"ConnectionStrategy",{enumerable:!0,get:function(){return u.ConnectionStrategy}}),Object.defineProperty(n,"ConnectionOptions",{enumerable:!0,get:function(){return u.ConnectionOptions}}),Object.defineProperty(n,"NullLogger",{enumerable:!0,get:function(){return u.NullLogger}}),Object.defineProperty(n,"createMessageConnection",{enumerable:!0,get:function(){return u.createMessageConnection}}),Object.defineProperty(n,"ProgressToken",{enumerable:!0,get:function(){return u.ProgressToken}}),Object.defineProperty(n,"ProgressType",{enumerable:!0,get:function(){return u.ProgressType}}),Object.defineProperty(n,"Trace",{enumerable:!0,get:function(){return u.Trace}}),Object.defineProperty(n,"TraceFormat",{enumerable:!0,get:function(){return u.TraceFormat}}),Object.defineProperty(n,"SetTraceNotification",{enumerable:!0,get:function(){return u.SetTraceNotification}}),Object.defineProperty(n,"LogTraceNotification",{enumerable:!0,get:function(){return u.LogTraceNotification}}),Object.defineProperty(n,"ConnectionErrors",{enumerable:!0,get:function(){return u.ConnectionErrors}}),Object.defineProperty(n,"ConnectionError",{enumerable:!0,get:function(){return u.ConnectionError}}),Object.defineProperty(n,"CancellationReceiverStrategy",{enumerable:!0,get:function(){return u.CancellationReceiverStrategy}}),Object.defineProperty(n,"CancellationSenderStrategy",{enumerable:!0,get:function(){return u.CancellationSenderStrategy}}),Object.defineProperty(n,"CancellationStrategy",{enumerable:!0,get:function(){return u.CancellationStrategy}});const d=t(147);n.RAL=d.default},3881:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.CancellationTokenSource=n.CancellationToken=void 0;const r=t(147),i=t(7574),o=t(7135);var a;!function(e){e.None=Object.freeze({isCancellationRequested:!1,onCancellationRequested:o.Event.None}),e.Cancelled=Object.freeze({isCancellationRequested:!0,onCancellationRequested:o.Event.None}),e.is=function(n){const t=n;return t&&(t===e.None||t===e.Cancelled||i.boolean(t.isCancellationRequested)&&!!t.onCancellationRequested)}}(a=n.CancellationToken||(n.CancellationToken={}));const s=Object.freeze((function(e,n){const t=(0,r.default)().timer.setTimeout(e.bind(n),0);return{dispose(){t.dispose()}}}));class l{constructor(){this._isCancelled=!1}cancel(){this._isCancelled||(this._isCancelled=!0,this._emitter&&(this._emitter.fire(void 0),this.dispose()))}get isCancellationRequested(){return this._isCancelled}get onCancellationRequested(){return this._isCancelled?s:(this._emitter||(this._emitter=new o.Emitter),this._emitter.event)}dispose(){this._emitter&&(this._emitter.dispose(),this._emitter=void 0)}}n.CancellationTokenSource=class{get token(){return this._token||(this._token=new l),this._token}cancel(){this._token?this._token.cancel():this._token=a.Cancelled}dispose(){this._token?this._token instanceof l&&this._token.dispose():this._token=a.None}}},1343:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.createMessageConnection=n.ConnectionOptions=n.CancellationStrategy=n.CancellationSenderStrategy=n.CancellationReceiverStrategy=n.ConnectionStrategy=n.ConnectionError=n.ConnectionErrors=n.LogTraceNotification=n.SetTraceNotification=n.TraceFormat=n.Trace=n.NullLogger=n.ProgressType=n.ProgressToken=void 0;const r=t(147),i=t(7574),o=t(839),a=t(6184),s=t(7135),l=t(3881);var c,u,d,h,p,f,m,g,E,T,R,S,y,A;!function(e){e.type=new o.NotificationType("$/cancelRequest")}(c||(c={})),function(e){e.is=function(e){return"string"==typeof e||"number"==typeof e}}(u=n.ProgressToken||(n.ProgressToken={})),function(e){e.type=new o.NotificationType("$/progress")}(d||(d={})),n.ProgressType=class{constructor(){}},function(e){e.is=function(e){return i.func(e)}}(h||(h={})),n.NullLogger=Object.freeze({error:()=>{},warn:()=>{},info:()=>{},log:()=>{}}),function(e){e[e.Off=0]="Off",e[e.Messages=1]="Messages",e[e.Compact=2]="Compact",e[e.Verbose=3]="Verbose"}(p=n.Trace||(n.Trace={})),function(e){e.fromString=function(n){if(!i.string(n))return e.Off;switch(n=n.toLowerCase()){case"off":default:return e.Off;case"messages":return e.Messages;case"compact":return e.Compact;case"verbose":return e.Verbose}},e.toString=function(n){switch(n){case e.Off:return"off";case e.Messages:return"messages";case e.Compact:return"compact";case e.Verbose:return"verbose";default:return"off"}}}(p=n.Trace||(n.Trace={})),function(e){e.Text="text",e.JSON="json"}(n.TraceFormat||(n.TraceFormat={})),function(e){e.fromString=function(n){return i.string(n)&&"json"===(n=n.toLowerCase())?e.JSON:e.Text}}(f=n.TraceFormat||(n.TraceFormat={})),function(e){e.type=new o.NotificationType("$/setTrace")}(m=n.SetTraceNotification||(n.SetTraceNotification={})),function(e){e.type=new o.NotificationType("$/logTrace")}(g=n.LogTraceNotification||(n.LogTraceNotification={})),function(e){e[e.Closed=1]="Closed",e[e.Disposed=2]="Disposed",e[e.AlreadyListening=3]="AlreadyListening"}(E=n.ConnectionErrors||(n.ConnectionErrors={}));class v extends Error{constructor(e,n){super(n),this.code=e,Object.setPrototypeOf(this,v.prototype)}}n.ConnectionError=v,function(e){e.is=function(e){const n=e;return n&&i.func(n.cancelUndispatched)}}(T=n.ConnectionStrategy||(n.ConnectionStrategy={})),function(e){e.Message=Object.freeze({createCancellationTokenSource:e=>new l.CancellationTokenSource}),e.is=function(e){const n=e;return n&&i.func(n.createCancellationTokenSource)}}(R=n.CancellationReceiverStrategy||(n.CancellationReceiverStrategy={})),function(e){e.Message=Object.freeze({sendCancellation:(e,n)=>e.sendNotification(c.type,{id:n}),cleanup(e){}}),e.is=function(e){const n=e;return n&&i.func(n.sendCancellation)&&i.func(n.cleanup)}}(S=n.CancellationSenderStrategy||(n.CancellationSenderStrategy={})),function(e){e.Message=Object.freeze({receiver:R.Message,sender:S.Message}),e.is=function(e){const n=e;return n&&R.is(n.receiver)&&S.is(n.sender)}}(y=n.CancellationStrategy||(n.CancellationStrategy={})),(n.ConnectionOptions||(n.ConnectionOptions={})).is=function(e){const n=e;return n&&(y.is(n.cancellationStrategy)||T.is(n.connectionStrategy))},function(e){e[e.New=1]="New",e[e.Listening=2]="Listening",e[e.Closed=3]="Closed",e[e.Disposed=4]="Disposed"}(A||(A={})),n.createMessageConnection=function(e,t,T,R){const S=void 0!==T?T:n.NullLogger;let I=0,C=0,_=0;const b="2.0";let O;const D=new Map;let N;const w=new Map,L=new Map;let x,M,k=new a.LinkedMap,P=new Map,F=new Set,G=new Map,U=p.Off,H=f.Text,q=A.New;const X=new s.Emitter,j=new s.Emitter,K=new s.Emitter,B=new s.Emitter,$=new s.Emitter,W=R&&R.cancellationStrategy?R.cancellationStrategy:y.Message;function V(e){if(null===e)throw new Error("Can't send requests with id null since the response can't be correlated.");return"req-"+e.toString()}function z(e){}function Y(){return q===A.Listening}function Z(){return q===A.Closed}function J(){return q===A.Disposed}function Q(){q!==A.New&&q!==A.Listening||(q=A.Closed,j.fire(void 0))}function ee(){x||0===k.size||(x=(0,r.default)().timer.setImmediate((()=>{x=void 0,function(){if(0===k.size)return;const e=k.shift();try{o.Message.isRequest(e)?function(e){if(J())return;function n(n,r,i){const a={jsonrpc:b,id:e.id};n instanceof o.ResponseError?a.error=n.toJson():a.result=void 0===n?null:n,re(a,r,i),t.write(a).catch((()=>S.error("Sending response failed.")))}function r(n,r,i){const o={jsonrpc:b,id:e.id,error:n.toJson()};re(o,r,i),t.write(o).catch((()=>S.error("Sending response failed.")))}!function(e){if(U!==p.Off&&M)if(H===f.Text){let n;U!==p.Verbose&&U!==p.Compact||!e.params||(n=`Params: ${te(e.params)}\n\n`),M.log(`Received request '${e.method} - (${e.id})'.`,n)}else oe("receive-request",e)}(e);const a=D.get(e.method);let s,l;a&&(s=a.type,l=a.handler);const c=Date.now();if(l||O){const a=e.id??String(Date.now()),u=W.receiver.createCancellationTokenSource(a);null!==e.id&&F.has(e.id)&&u.cancel(),null!==e.id&&G.set(a,u);try{let d;if(l)if(void 0===e.params){if(void 0!==s&&0!==s.numberOfParams)return void r(new o.ResponseError(o.ErrorCodes.InvalidParams,`Request ${e.method} defines ${s.numberOfParams} params but received none.`),e.method,c);d=l(u.token)}else if(Array.isArray(e.params)){if(void 0!==s&&s.parameterStructures===o.ParameterStructures.byName)return void r(new o.ResponseError(o.ErrorCodes.InvalidParams,`Request ${e.method} defines parameters by name but received parameters by position`),e.method,c);d=l(...e.params,u.token)}else{if(void 0!==s&&s.parameterStructures===o.ParameterStructures.byPosition)return void r(new o.ResponseError(o.ErrorCodes.InvalidParams,`Request ${e.method} defines parameters by position but received parameters by name`),e.method,c);d=l(e.params,u.token)}else O&&(d=O(e.method,e.params,u.token));const h=d;d?h.then?h.then((t=>{G.delete(a),n(t,e.method,c)}),(n=>{G.delete(a),n instanceof o.ResponseError?r(n,e.method,c):n&&i.string(n.message)?r(new o.ResponseError(o.ErrorCodes.InternalError,`Request ${e.method} failed with message: ${n.message}`),e.method,c):r(new o.ResponseError(o.ErrorCodes.InternalError,`Request ${e.method} failed unexpectedly without providing any details.`),e.method,c)})):(G.delete(a),n(d,e.method,c)):(G.delete(a),function(n,r,i){void 0===n&&(n=null);const o={jsonrpc:b,id:e.id,result:n};re(o,r,i),t.write(o).catch((()=>S.error("Sending response failed.")))}(d,e.method,c))}catch(t){G.delete(a),t instanceof o.ResponseError?n(t,e.method,c):t&&i.string(t.message)?r(new o.ResponseError(o.ErrorCodes.InternalError,`Request ${e.method} failed with message: ${t.message}`),e.method,c):r(new o.ResponseError(o.ErrorCodes.InternalError,`Request ${e.method} failed unexpectedly without providing any details.`),e.method,c)}}else r(new o.ResponseError(o.ErrorCodes.MethodNotFound,`Unhandled method ${e.method}`),e.method,c)}(e):o.Message.isNotification(e)?function(e){if(J())return;let n,t;if(e.method===c.type.method){const n=e.params.id;return F.delete(n),void ie(e)}{const r=w.get(e.method);r&&(t=r.handler,n=r.type)}if(t||N)try{if(ie(e),t)if(void 0===e.params)void 0!==n&&0!==n.numberOfParams&&n.parameterStructures!==o.ParameterStructures.byName&&S.error(`Notification ${e.method} defines ${n.numberOfParams} params but received none.`),t();else if(Array.isArray(e.params)){const r=e.params;e.method===d.type.method&&2===r.length&&u.is(r[0])?t({token:r[0],value:r[1]}):(void 0!==n&&(n.parameterStructures===o.ParameterStructures.byName&&S.error(`Notification ${e.method} defines parameters by name but received parameters by position`),n.numberOfParams!==e.params.length&&S.error(`Notification ${e.method} defines ${n.numberOfParams} params but received ${r.length} arguments`)),t(...r))}else void 0!==n&&n.parameterStructures===o.ParameterStructures.byPosition&&S.error(`Notification ${e.method} defines parameters by position but received parameters by name`),t(e.params);else N&&N(e.method,e.params)}catch(n){n.message?S.error(`Notification handler '${e.method}' failed with message: ${n.message}`):S.error(`Notification handler '${e.method}' failed unexpectedly.`)}else K.fire(e)}(e):o.Message.isResponse(e)?function(e){if(!J())if(null===e.id)e.error?S.error(`Received response message without id: Error is: \n${JSON.stringify(e.error,void 0,4)}`):S.error("Received response message without id. No further error information provided.");else{const n=e.id,t=P.get(n);if(function(e,n){if(U!==p.Off&&M)if(H===f.Text){let t;if(U!==p.Verbose&&U!==p.Compact||(e.error&&e.error.data?t=`Error data: ${te(e.error.data)}\n\n`:e.result?t=`Result: ${te(e.result)}\n\n`:void 0===e.error&&(t="No result returned.\n\n")),n){const r=e.error?` Request failed: ${e.error.message} (${e.error.code}).`:"";M.log(`Received response '${n.method} - (${e.id})' in ${Date.now()-n.timerStart}ms.${r}`,t)}else M.log(`Received response ${e.id} without active response promise.`,t)}else oe("receive-response",e)}(e,t),void 0!==t){P.delete(n);try{if(e.error){const n=e.error;t.reject(new o.ResponseError(n.code,n.message,n.data))}else{if(void 0===e.result)throw new Error("Should never happen.");t.resolve(e.result)}}catch(e){e.message?S.error(`Response handler '${t.method}' failed with message: ${e.message}`):S.error(`Response handler '${t.method}' failed unexpectedly.`)}}}}(e):function(e){if(!e)return void S.error("Received empty message.");S.error(`Received message which is neither a response nor a notification message:\n${JSON.stringify(e,null,4)}`);const n=e;if(i.string(n.id)||i.number(n.id)){const e=n.id,t=P.get(e);t&&t.reject(new Error("The received response has neither a result nor an error property."))}}(e)}finally{ee()}}()})))}e.onClose(Q),e.onError((function(e){X.fire([e,void 0,void 0])})),t.onClose(Q),t.onError((function(e){X.fire(e)}));const ne=e=>{try{if(o.Message.isNotification(e)&&e.method===c.type.method){const n=e.params.id,r=V(n),i=k.get(r);if(o.Message.isRequest(i)){const o=R?.connectionStrategy,a=o&&o.cancelUndispatched?o.cancelUndispatched(i,z):void 0;if(a&&(void 0!==a.error||void 0!==a.result))return k.delete(r),G.delete(n),a.id=i.id,re(a,e.method,Date.now()),void t.write(a).catch((()=>S.error("Sending response for canceled message failed.")))}const a=G.get(n);if(void 0!==a)return a.cancel(),void ie(e);F.add(n)}!function(e,n){var t;o.Message.isRequest(n)?e.set(V(n.id),n):o.Message.isResponse(n)?e.set(null===(t=n.id)?"res-unknown-"+(++_).toString():"res-"+t.toString(),n):e.set("not-"+(++C).toString(),n)}(k,e)}finally{ee()}};function te(e){if(null!=e)switch(U){case p.Verbose:return JSON.stringify(e,null,4);case p.Compact:return JSON.stringify(e);default:return}}function re(e,n,t){if(U!==p.Off&&M)if(H===f.Text){let r;U!==p.Verbose&&U!==p.Compact||(e.error&&e.error.data?r=`Error data: ${te(e.error.data)}\n\n`:e.result?r=`Result: ${te(e.result)}\n\n`:void 0===e.error&&(r="No result returned.\n\n")),M.log(`Sending response '${n} - (${e.id})'. Processing request took ${Date.now()-t}ms`,r)}else oe("send-response",e)}function ie(e){if(U!==p.Off&&M&&e.method!==g.type.method)if(H===f.Text){let n;U!==p.Verbose&&U!==p.Compact||(n=e.params?`Params: ${te(e.params)}\n\n`:"No parameters provided.\n\n"),M.log(`Received notification '${e.method}'.`,n)}else oe("receive-notification",e)}function oe(e,n){if(!M||U===p.Off)return;const t={isLSPMessage:!0,type:e,message:n,timestamp:Date.now()};M.log(t)}function ae(){if(Z())throw new v(E.Closed,"Connection is closed.");if(J())throw new v(E.Disposed,"Connection is disposed.")}function se(e){return void 0===e?null:e}function le(e){return null===e?void 0:e}function ce(e){return null!=e&&!Array.isArray(e)&&"object"==typeof e}function ue(e,n){switch(e){case o.ParameterStructures.auto:return ce(n)?le(n):[se(n)];case o.ParameterStructures.byName:if(!ce(n))throw new Error("Received parameters by name but param is not an object literal.");return le(n);case o.ParameterStructures.byPosition:return[se(n)];default:throw new Error(`Unknown parameter structure ${e.toString()}`)}}function de(e,n){let t;const r=e.numberOfParams;switch(r){case 0:t=void 0;break;case 1:t=ue(e.parameterStructures,n[0]);break;default:t=[];for(let e=0;e<n.length&&e<r;e++)t.push(se(n[e]));if(n.length<r)for(let e=n.length;e<r;e++)t.push(null)}return t}const he={sendNotification:(e,...n)=>{let r,a;if(ae(),i.string(e)){r=e;const t=n[0];let i=0,s=o.ParameterStructures.auto;o.ParameterStructures.is(t)&&(i=1,s=t);let l=n.length;const c=l-i;switch(c){case 0:a=void 0;break;case 1:a=ue(s,n[i]);break;default:if(s===o.ParameterStructures.byName)throw new Error(`Received ${c} parameters for 'by Name' notification parameter structure.`);a=n.slice(i,l).map((e=>se(e)))}}else{const t=n;r=e.method,a=de(e,t)}const s={jsonrpc:b,method:r,params:a};return function(e){if(U!==p.Off&&M)if(H===f.Text){let n;U!==p.Verbose&&U!==p.Compact||(n=e.params?`Params: ${te(e.params)}\n\n`:"No parameters provided.\n\n"),M.log(`Sending notification '${e.method}'.`,n)}else oe("send-notification",e)}(s),t.write(s).catch((()=>S.error("Sending notification failed.")))},onNotification:(e,n)=>{let t;return ae(),i.func(e)?N=e:n&&(i.string(e)?(t=e,w.set(e,{type:void 0,handler:n})):(t=e.method,w.set(e.method,{type:e,handler:n}))),{dispose:()=>{void 0!==t?w.delete(t):N=void 0}}},onProgress:(e,n,t)=>{if(L.has(n))throw new Error(`Progress handler for token ${n} already registered`);return L.set(n,t),{dispose:()=>{L.delete(n)}}},sendProgress:(e,n,t)=>he.sendNotification(d.type,{token:n,value:t}),onUnhandledProgress:B.event,sendRequest:(e,...n)=>{let r,a,s;if(ae(),function(){if(!Y())throw new Error("Call listen() first.")}(),i.string(e)){r=e;const t=n[0],i=n[n.length-1];let c=0,u=o.ParameterStructures.auto;o.ParameterStructures.is(t)&&(c=1,u=t);let d=n.length;l.CancellationToken.is(i)&&(d-=1,s=i);const h=d-c;switch(h){case 0:a=void 0;break;case 1:a=ue(u,n[c]);break;default:if(u===o.ParameterStructures.byName)throw new Error(`Received ${h} parameters for 'by Name' request parameter structure.`);a=n.slice(c,d).map((e=>se(e)))}}else{const t=n;r=e.method,a=de(e,t);const i=e.numberOfParams;s=l.CancellationToken.is(t[i])?t[i]:void 0}const c=I++;let u;return s&&(u=s.onCancellationRequested((()=>{const e=W.sender.sendCancellation(he,c);return void 0===e?(S.log(`Received no promise from cancellation strategy when cancelling id ${c}`),Promise.resolve()):e.catch((()=>{S.log(`Sending cancellation messages for id ${c} failed`)}))}))),new Promise(((e,n)=>{const i={jsonrpc:b,id:c,method:r,params:a};let s={method:r,timerStart:Date.now(),resolve:n=>{e(n),W.sender.cleanup(c),u?.dispose()},reject:e=>{n(e),W.sender.cleanup(c),u?.dispose()}};!function(e){if(U!==p.Off&&M)if(H===f.Text){let n;U!==p.Verbose&&U!==p.Compact||!e.params||(n=`Params: ${te(e.params)}\n\n`),M.log(`Sending request '${e.method} - (${e.id})'.`,n)}else oe("send-request",e)}(i);try{t.write(i).catch((()=>S.error("Sending request failed.")))}catch(e){s.reject(new o.ResponseError(o.ErrorCodes.MessageWriteError,e.message?e.message:"Unknown reason")),s=null}s&&P.set(c,s)}))},onRequest:(e,n)=>{ae();let t=null;return h.is(e)?(t=void 0,O=e):i.string(e)?(t=null,void 0!==n&&(t=e,D.set(e,{handler:n,type:void 0}))):void 0!==n&&(t=e.method,D.set(e.method,{type:e,handler:n})),{dispose:()=>{null!==t&&(void 0!==t?D.delete(t):O=void 0)}}},hasPendingResponse:()=>P.size>0,trace:async(e,n,t)=>{let r=!1,o=f.Text;void 0!==t&&(i.boolean(t)?r=t:(r=t.sendNotification||!1,o=t.traceFormat||f.Text)),U=e,H=o,M=U===p.Off?void 0:n,!r||Z()||J()||await he.sendNotification(m.type,{value:p.toString(e)})},onError:X.event,onClose:j.event,onUnhandledNotification:K.event,onDispose:$.event,end:()=>{t.end()},dispose:()=>{if(J())return;q=A.Disposed,$.fire(void 0);const n=new o.ResponseError(o.ErrorCodes.PendingResponseRejected,"Pending response rejected since connection got disposed");for(const e of P.values())e.reject(n);P=new Map,G=new Map,F=new Set,k=new a.LinkedMap,i.func(t.dispose)&&t.dispose(),i.func(e.dispose)&&e.dispose()},listen:()=>{ae(),function(){if(Y())throw new v(E.AlreadyListening,"Connection is already listening")}(),q=A.Listening,e.listen(ne)},inspect:()=>{(0,r.default)().console.log("inspect")}};return he.onNotification(g.type,(e=>{if(U===p.Off||!M)return;const n=U===p.Verbose||U===p.Compact;M.log(e.message,n?e.verbose:void 0)})),he.onNotification(d.type,(e=>{const n=L.get(e.token);n?n(e.value):B.fire(e)})),he}},3911:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.Disposable=void 0,(n.Disposable||(n.Disposable={})).create=function(e){return{dispose:e}}},7135:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.Emitter=n.Event=void 0;const r=t(147);!function(e){const n={dispose(){}};e.None=function(){return n}}(n.Event||(n.Event={}));class i{add(e,n=null,t){this._callbacks||(this._callbacks=[],this._contexts=[]),this._callbacks.push(e),this._contexts.push(n),Array.isArray(t)&&t.push({dispose:()=>this.remove(e,n)})}remove(e,n=null){if(!this._callbacks)return;let t=!1;for(let r=0,i=this._callbacks.length;r<i;r++)if(this._callbacks[r]===e){if(this._contexts[r]===n)return this._callbacks.splice(r,1),void this._contexts.splice(r,1);t=!0}if(t)throw new Error("When adding a listener with a context, you should remove it with the same context")}invoke(...e){if(!this._callbacks)return[];const n=[],t=this._callbacks.slice(0),i=this._contexts.slice(0);for(let o=0,a=t.length;o<a;o++)try{n.push(t[o].apply(i[o],e))}catch(e){(0,r.default)().console.error(e)}return n}isEmpty(){return!this._callbacks||0===this._callbacks.length}dispose(){this._callbacks=void 0,this._contexts=void 0}}class o{constructor(e){this._options=e}get event(){return this._event||(this._event=(e,n,t)=>{this._callbacks||(this._callbacks=new i),this._options&&this._options.onFirstListenerAdd&&this._callbacks.isEmpty()&&this._options.onFirstListenerAdd(this),this._callbacks.add(e,n);const r={dispose:()=>{this._callbacks&&(this._callbacks.remove(e,n),r.dispose=o._noop,this._options&&this._options.onLastListenerRemove&&this._callbacks.isEmpty()&&this._options.onLastListenerRemove(this))}};return Array.isArray(t)&&t.push(r),r}),this._event}fire(e){this._callbacks&&this._callbacks.invoke.call(this._callbacks,e)}dispose(){this._callbacks&&(this._callbacks.dispose(),this._callbacks=void 0)}}n.Emitter=o,o._noop=function(){}},7574:(e,n)=>{"use strict";function t(e){return"string"==typeof e||e instanceof String}function r(e){return Array.isArray(e)}Object.defineProperty(n,"__esModule",{value:!0}),n.stringArray=n.array=n.func=n.error=n.number=n.string=n.boolean=void 0,n.boolean=function(e){return!0===e||!1===e},n.string=t,n.number=function(e){return"number"==typeof e||e instanceof Number},n.error=function(e){return e instanceof Error},n.func=function(e){return"function"==typeof e},n.array=r,n.stringArray=function(e){return r(e)&&e.every((e=>t(e)))}},6184:(e,n)=>{"use strict";var t,r;Object.defineProperty(n,"__esModule",{value:!0}),n.LRUCache=n.LinkedMap=n.Touch=void 0,function(e){e.None=0,e.First=1,e.AsOld=e.First,e.Last=2,e.AsNew=e.Last}(r=n.Touch||(n.Touch={}));class i{constructor(){this[t]="LinkedMap",this._map=new Map,this._head=void 0,this._tail=void 0,this._size=0,this._state=0}clear(){this._map.clear(),this._head=void 0,this._tail=void 0,this._size=0,this._state++}isEmpty(){return!this._head&&!this._tail}get size(){return this._size}get first(){return this._head?.value}get last(){return this._tail?.value}has(e){return this._map.has(e)}get(e,n=r.None){const t=this._map.get(e);if(t)return n!==r.None&&this.touch(t,n),t.value}set(e,n,t=r.None){let i=this._map.get(e);if(i)i.value=n,t!==r.None&&this.touch(i,t);else{switch(i={key:e,value:n,next:void 0,previous:void 0},t){case r.None:this.addItemLast(i);break;case r.First:this.addItemFirst(i);break;case r.Last:default:this.addItemLast(i)}this._map.set(e,i),this._size++}return this}delete(e){return!!this.remove(e)}remove(e){const n=this._map.get(e);if(n)return this._map.delete(e),this.removeItem(n),this._size--,n.value}shift(){if(!this._head&&!this._tail)return;if(!this._head||!this._tail)throw new Error("Invalid list");const e=this._head;return this._map.delete(e.key),this.removeItem(e),this._size--,e.value}forEach(e,n){const t=this._state;let r=this._head;for(;r;){if(n?e.bind(n)(r.value,r.key,this):e(r.value,r.key,this),this._state!==t)throw new Error("LinkedMap got modified during iteration.");r=r.next}}keys(){const e=this._state;let n=this._head;const t={[Symbol.iterator]:()=>t,next:()=>{if(this._state!==e)throw new Error("LinkedMap got modified during iteration.");if(n){const e={value:n.key,done:!1};return n=n.next,e}return{value:void 0,done:!0}}};return t}values(){const e=this._state;let n=this._head;const t={[Symbol.iterator]:()=>t,next:()=>{if(this._state!==e)throw new Error("LinkedMap got modified during iteration.");if(n){const e={value:n.value,done:!1};return n=n.next,e}return{value:void 0,done:!0}}};return t}entries(){const e=this._state;let n=this._head;const t={[Symbol.iterator]:()=>t,next:()=>{if(this._state!==e)throw new Error("LinkedMap got modified during iteration.");if(n){const e={value:[n.key,n.value],done:!1};return n=n.next,e}return{value:void 0,done:!0}}};return t}[(t=Symbol.toStringTag,Symbol.iterator)](){return this.entries()}trimOld(e){if(e>=this.size)return;if(0===e)return void this.clear();let n=this._head,t=this.size;for(;n&&t>e;)this._map.delete(n.key),n=n.next,t--;this._head=n,this._size=t,n&&(n.previous=void 0),this._state++}addItemFirst(e){if(this._head||this._tail){if(!this._head)throw new Error("Invalid list");e.next=this._head,this._head.previous=e}else this._tail=e;this._head=e,this._state++}addItemLast(e){if(this._head||this._tail){if(!this._tail)throw new Error("Invalid list");e.previous=this._tail,this._tail.next=e}else this._head=e;this._tail=e,this._state++}removeItem(e){if(e===this._head&&e===this._tail)this._head=void 0,this._tail=void 0;else if(e===this._head){if(!e.next)throw new Error("Invalid list");e.next.previous=void 0,this._head=e.next}else if(e===this._tail){if(!e.previous)throw new Error("Invalid list");e.previous.next=void 0,this._tail=e.previous}else{const n=e.next,t=e.previous;if(!n||!t)throw new Error("Invalid list");n.previous=t,t.next=n}e.next=void 0,e.previous=void 0,this._state++}touch(e,n){if(!this._head||!this._tail)throw new Error("Invalid list");if(n===r.First||n===r.Last)if(n===r.First){if(e===this._head)return;const n=e.next,t=e.previous;e===this._tail?(t.next=void 0,this._tail=t):(n.previous=t,t.next=n),e.previous=void 0,e.next=this._head,this._head.previous=e,this._head=e,this._state++}else if(n===r.Last){if(e===this._tail)return;const n=e.next,t=e.previous;e===this._head?(n.previous=void 0,this._head=n):(n.previous=t,t.next=n),e.next=void 0,e.previous=this._tail,this._tail.next=e,this._tail=e,this._state++}}toJSON(){const e=[];return this.forEach(((n,t)=>{e.push([t,n])})),e}fromJSON(e){this.clear();for(const[n,t]of e)this.set(n,t)}}n.LinkedMap=i,n.LRUCache=class extends i{constructor(e,n=1){super(),this._limit=e,this._ratio=Math.min(Math.max(0,n),1)}get limit(){return this._limit}set limit(e){this._limit=e,this.checkTrim()}get ratio(){return this._ratio}set ratio(e){this._ratio=Math.min(Math.max(0,e),1),this.checkTrim()}get(e,n=r.AsNew){return super.get(e,n)}peek(e){return super.get(e,r.None)}set(e,n){return super.set(e,n,r.Last),this.checkTrim(),this}checkTrim(){this.size>this._limit&&this.trimOld(Math.round(this._limit*this._ratio))}}},5530:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.AbstractMessageBuffer=void 0,n.AbstractMessageBuffer=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encoding(){return this._encoding}append(e){const n="string"==typeof e?this.fromString(e,this._encoding):e;this._chunks.push(n),this._totalLength+=n.byteLength}tryReadHeaders(){if(0===this._chunks.length)return;let e=0,n=0,t=0,r=0;e:for(;n<this._chunks.length;){const i=this._chunks[n];for(t=0;t<i.length;){switch(i[t]){case 13:switch(e){case 0:e=1;break;case 2:e=3;break;default:e=0}break;case 10:switch(e){case 1:e=2;break;case 3:e=4,t++;break e;default:e=0}break;default:e=0}t++}r+=i.byteLength,n++}if(4!==e)return;const i=this._read(r+t),o=new Map,a=this.toString(i,"ascii").split("\r\n");if(a.length<2)return o;for(let e=0;e<a.length-2;e++){const n=a[e],t=n.indexOf(":");if(-1===t)throw new Error("Message header must separate key and value using :");const r=n.substr(0,t),i=n.substr(t+1).trim();o.set(r,i)}return o}tryReadBody(e){if(!(this._totalLength<e))return this._read(e)}get numberOfBytes(){return this._totalLength}_read(e){if(0===e)return this.emptyBuffer();if(e>this._totalLength)throw new Error("Cannot read so many bytes!");if(this._chunks[0].byteLength===e){const n=this._chunks[0];return this._chunks.shift(),this._totalLength-=e,this.asNative(n)}if(this._chunks[0].byteLength>e){const n=this._chunks[0],t=this.asNative(n,e);return this._chunks[0]=n.slice(e),this._totalLength-=e,t}const n=this.allocNative(e);let t=0;for(;e>0;){const r=this._chunks[0];if(r.byteLength>e){const i=r.slice(0,e);n.set(i,t),t+=e,this._chunks[0]=r.slice(e),this._totalLength-=e,e-=e}else n.set(r,t),t+=r.byteLength,this._chunks.shift(),this._totalLength-=r.byteLength,e-=r.byteLength}return n}}},6525:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.ReadableStreamMessageReader=n.AbstractMessageReader=n.MessageReader=void 0;const r=t(147),i=t(7574),o=t(7135);var a;(n.MessageReader||(n.MessageReader={})).is=function(e){let n=e;return n&&i.func(n.listen)&&i.func(n.dispose)&&i.func(n.onError)&&i.func(n.onClose)&&i.func(n.onPartialMessage)};class s{constructor(){this.errorEmitter=new o.Emitter,this.closeEmitter=new o.Emitter,this.partialMessageEmitter=new o.Emitter}dispose(){this.errorEmitter.dispose(),this.closeEmitter.dispose()}get onError(){return this.errorEmitter.event}fireError(e){this.errorEmitter.fire(this.asError(e))}get onClose(){return this.closeEmitter.event}fireClose(){this.closeEmitter.fire(void 0)}get onPartialMessage(){return this.partialMessageEmitter.event}firePartialMessage(e){this.partialMessageEmitter.fire(e)}asError(e){return e instanceof Error?e:new Error(`Reader received error. Reason: ${i.string(e.message)?e.message:"unknown"}`)}}n.AbstractMessageReader=s,function(e){e.fromOptions=function(e){let n,t;const i=new Map;let o;const a=new Map;if(void 0===e||"string"==typeof e)n=e??"utf-8";else{if(n=e.charset??"utf-8",void 0!==e.contentDecoder&&(t=e.contentDecoder,i.set(t.name,t)),void 0!==e.contentDecoders)for(const n of e.contentDecoders)i.set(n.name,n);if(void 0!==e.contentTypeDecoder&&(o=e.contentTypeDecoder,a.set(o.name,o)),void 0!==e.contentTypeDecoders)for(const n of e.contentTypeDecoders)a.set(n.name,n)}return void 0===o&&(o=(0,r.default)().applicationJson.decoder,a.set(o.name,o)),{charset:n,contentDecoder:t,contentDecoders:i,contentTypeDecoder:o,contentTypeDecoders:a}}}(a||(a={})),n.ReadableStreamMessageReader=class extends s{constructor(e,n){super(),this.readable=e,this.options=a.fromOptions(n),this.buffer=(0,r.default)().messageBuffer.create(this.options.charset),this._partialMessageTimeout=1e4,this.nextMessageLength=-1,this.messageToken=0}set partialMessageTimeout(e){this._partialMessageTimeout=e}get partialMessageTimeout(){return this._partialMessageTimeout}listen(e){this.nextMessageLength=-1,this.messageToken=0,this.partialMessageTimer=void 0,this.callback=e;const n=this.readable.onData((e=>{this.onData(e)}));return this.readable.onError((e=>this.fireError(e))),this.readable.onClose((()=>this.fireClose())),n}onData(e){for(this.buffer.append(e);;){if(-1===this.nextMessageLength){const e=this.buffer.tryReadHeaders();if(!e)return;const n=e.get("Content-Length");if(!n)throw new Error("Header must provide a Content-Length property.");const t=parseInt(n);if(isNaN(t))throw new Error("Content-Length value must be a number.");this.nextMessageLength=t}const e=this.buffer.tryReadBody(this.nextMessageLength);if(void 0===e)return void this.setPartialMessageTimer();let n;this.clearPartialMessageTimer(),this.nextMessageLength=-1,n=void 0!==this.options.contentDecoder?this.options.contentDecoder.decode(e):Promise.resolve(e),n.then((e=>{this.options.contentTypeDecoder.decode(e,this.options).then((e=>{this.callback(e)}),(e=>{this.fireError(e)}))}),(e=>{this.fireError(e)}))}}clearPartialMessageTimer(){this.partialMessageTimer&&(this.partialMessageTimer.dispose(),this.partialMessageTimer=void 0)}setPartialMessageTimer(){this.clearPartialMessageTimer(),this._partialMessageTimeout<=0||(this.partialMessageTimer=(0,r.default)().timer.setTimeout(((e,n)=>{this.partialMessageTimer=void 0,e===this.messageToken&&(this.firePartialMessage({messageToken:e,waitingTime:n}),this.setPartialMessageTimer())}),this._partialMessageTimeout,this.messageToken,this._partialMessageTimeout))}}},6654:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.WriteableStreamMessageWriter=n.AbstractMessageWriter=n.MessageWriter=void 0;const r=t(147),i=t(7574),o=t(142),a=t(7135);var s;(n.MessageWriter||(n.MessageWriter={})).is=function(e){let n=e;return n&&i.func(n.dispose)&&i.func(n.onClose)&&i.func(n.onError)&&i.func(n.write)};class l{constructor(){this.errorEmitter=new a.Emitter,this.closeEmitter=new a.Emitter}dispose(){this.errorEmitter.dispose(),this.closeEmitter.dispose()}get onError(){return this.errorEmitter.event}fireError(e,n,t){this.errorEmitter.fire([this.asError(e),n,t])}get onClose(){return this.closeEmitter.event}fireClose(){this.closeEmitter.fire(void 0)}asError(e){return e instanceof Error?e:new Error(`Writer received error. Reason: ${i.string(e.message)?e.message:"unknown"}`)}}n.AbstractMessageWriter=l,function(e){e.fromOptions=function(e){return void 0===e||"string"==typeof e?{charset:e??"utf-8",contentTypeEncoder:(0,r.default)().applicationJson.encoder}:{charset:e.charset??"utf-8",contentEncoder:e.contentEncoder,contentTypeEncoder:e.contentTypeEncoder??(0,r.default)().applicationJson.encoder}}}(s||(s={})),n.WriteableStreamMessageWriter=class extends l{constructor(e,n){super(),this.writable=e,this.options=s.fromOptions(n),this.errorCount=0,this.writeSemaphore=new o.Semaphore(1),this.writable.onError((e=>this.fireError(e))),this.writable.onClose((()=>this.fireClose()))}async write(e){return this.writeSemaphore.lock((async()=>this.options.contentTypeEncoder.encode(e,this.options).then((e=>void 0!==this.options.contentEncoder?this.options.contentEncoder.encode(e):e)).then((n=>{const t=[];return t.push("Content-Length: ",n.byteLength.toString(),"\r\n"),t.push("\r\n"),this.doWrite(e,t,n)}),(e=>{throw this.fireError(e),e}))))}async doWrite(e,n,t){try{return await this.writable.write(n.join(""),"ascii"),this.writable.write(t)}catch(n){return this.handleError(n,e),Promise.reject(n)}}handleError(e,n){this.errorCount++,this.fireError(e,n,this.errorCount)}end(){this.writable.end()}}},839:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.Message=n.NotificationType9=n.NotificationType8=n.NotificationType7=n.NotificationType6=n.NotificationType5=n.NotificationType4=n.NotificationType3=n.NotificationType2=n.NotificationType1=n.NotificationType0=n.NotificationType=n.RequestType9=n.RequestType8=n.RequestType7=n.RequestType6=n.RequestType5=n.RequestType4=n.RequestType3=n.RequestType2=n.RequestType1=n.RequestType=n.RequestType0=n.AbstractMessageSignature=n.ParameterStructures=n.ResponseError=n.ErrorCodes=void 0;const r=t(7574);var i,o;!function(e){e.ParseError=-32700,e.InvalidRequest=-32600,e.MethodNotFound=-32601,e.InvalidParams=-32602,e.InternalError=-32603,e.jsonrpcReservedErrorRangeStart=-32099,e.serverErrorStart=-32099,e.MessageWriteError=-32099,e.MessageReadError=-32098,e.PendingResponseRejected=-32097,e.ConnectionInactive=-32096,e.ServerNotInitialized=-32002,e.UnknownErrorCode=-32001,e.jsonrpcReservedErrorRangeEnd=-32e3,e.serverErrorEnd=-32e3}(i=n.ErrorCodes||(n.ErrorCodes={}));class a extends Error{constructor(e,n,t){super(n),this.code=r.number(e)?e:i.UnknownErrorCode,this.data=t,Object.setPrototypeOf(this,a.prototype)}toJson(){const e={code:this.code,message:this.message};return void 0!==this.data&&(e.data=this.data),e}}n.ResponseError=a;class s{constructor(e){this.kind=e}static is(e){return e===s.auto||e===s.byName||e===s.byPosition}toString(){return this.kind}}n.ParameterStructures=s,s.auto=new s("auto"),s.byPosition=new s("byPosition"),s.byName=new s("byName");class l{constructor(e,n){this.method=e,this.numberOfParams=n}get parameterStructures(){return s.auto}}n.AbstractMessageSignature=l,n.RequestType0=class extends l{constructor(e){super(e,0)}},n.RequestType=class extends l{constructor(e,n=s.auto){super(e,1),this._parameterStructures=n}get parameterStructures(){return this._parameterStructures}},n.RequestType1=class extends l{constructor(e,n=s.auto){super(e,1),this._parameterStructures=n}get parameterStructures(){return this._parameterStructures}},n.RequestType2=class extends l{constructor(e){super(e,2)}},n.RequestType3=class extends l{constructor(e){super(e,3)}},n.RequestType4=class extends l{constructor(e){super(e,4)}},n.RequestType5=class extends l{constructor(e){super(e,5)}},n.RequestType6=class extends l{constructor(e){super(e,6)}},n.RequestType7=class extends l{constructor(e){super(e,7)}},n.RequestType8=class extends l{constructor(e){super(e,8)}},n.RequestType9=class extends l{constructor(e){super(e,9)}},n.NotificationType=class extends l{constructor(e,n=s.auto){super(e,1),this._parameterStructures=n}get parameterStructures(){return this._parameterStructures}},n.NotificationType0=class extends l{constructor(e){super(e,0)}},n.NotificationType1=class extends l{constructor(e,n=s.auto){super(e,1),this._parameterStructures=n}get parameterStructures(){return this._parameterStructures}},n.NotificationType2=class extends l{constructor(e){super(e,2)}},n.NotificationType3=class extends l{constructor(e){super(e,3)}},n.NotificationType4=class extends l{constructor(e){super(e,4)}},n.NotificationType5=class extends l{constructor(e){super(e,5)}},n.NotificationType6=class extends l{constructor(e){super(e,6)}},n.NotificationType7=class extends l{constructor(e){super(e,7)}},n.NotificationType8=class extends l{constructor(e){super(e,8)}},n.NotificationType9=class extends l{constructor(e){super(e,9)}},(o=n.Message||(n.Message={})).isRequest=function(e){const n=e;return n&&r.string(n.method)&&(r.string(n.id)||r.number(n.id))},o.isNotification=function(e){const n=e;return n&&r.string(n.method)&&void 0===e.id},o.isResponse=function(e){const n=e;return n&&(void 0!==n.result||!!n.error)&&(r.string(n.id)||r.number(n.id)||null===n.id)}},147:(e,n)=>{"use strict";let t;function r(){if(void 0===t)throw new Error("No runtime abstraction layer installed");return t}Object.defineProperty(n,"__esModule",{value:!0}),function(e){e.install=function(e){if(void 0===e)throw new Error("No runtime abstraction layer provided");t=e}}(r||(r={})),n.default=r},142:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.Semaphore=void 0;const r=t(147);n.Semaphore=class{constructor(e=1){if(e<=0)throw new Error("Capacity must be greater than 0");this._capacity=e,this._active=0,this._waiting=[]}lock(e){return new Promise(((n,t)=>{this._waiting.push({thunk:e,resolve:n,reject:t}),this.runNext()}))}get active(){return this._active}runNext(){0!==this._waiting.length&&this._active!==this._capacity&&(0,r.default)().timer.setImmediate((()=>this.doRunNext()))}doRunNext(){if(0===this._waiting.length||this._active===this._capacity)return;const e=this._waiting.shift();if(this._active++,this._active>this._capacity)throw new Error("To many thunks active");try{const n=e.thunk();n instanceof Promise?n.then((n=>{this._active--,e.resolve(n),this.runNext()}),(n=>{this._active--,e.reject(n),this.runNext()})):(this._active--,e.resolve(n),this.runNext())}catch(n){this._active--,e.reject(n),this.runNext()}}}},4389:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var i=Object.getOwnPropertyDescriptor(n,t);i&&!("get"in i?!n.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,i)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__exportStar||function(e,n){for(var t in e)"default"===t||Object.prototype.hasOwnProperty.call(n,t)||r(n,e,t)};Object.defineProperty(n,"__esModule",{value:!0}),n.createMessageConnection=n.createServerSocketTransport=n.createClientSocketTransport=n.createServerPipeTransport=n.createClientPipeTransport=n.generateRandomPipeName=n.StreamMessageWriter=n.StreamMessageReader=n.SocketMessageWriter=n.SocketMessageReader=n.IPCMessageWriter=n.IPCMessageReader=void 0;const o=t(3034);o.default.install();const a=t(3870),s=t(1017),l=t(2037),c=t(6113),u=t(1808);i(t(3870),n);class d extends a.AbstractMessageReader{constructor(e){super(),this.process=e;let n=this.process;n.on("error",(e=>this.fireError(e))),n.on("close",(()=>this.fireClose()))}listen(e){return this.process.on("message",e),a.Disposable.create((()=>this.process.off("message",e)))}}n.IPCMessageReader=d;class h extends a.AbstractMessageWriter{constructor(e){super(),this.process=e,this.errorCount=0;let n=this.process;n.on("error",(e=>this.fireError(e))),n.on("close",(()=>this.fireClose))}write(e){try{return"function"==typeof this.process.send&&this.process.send(e,void 0,void 0,(n=>{n?(this.errorCount++,this.handleError(n,e)):this.errorCount=0})),Promise.resolve()}catch(n){return this.handleError(n,e),Promise.reject(n)}}handleError(e,n){this.errorCount++,this.fireError(e,n,this.errorCount)}end(){}}n.IPCMessageWriter=h;class p extends a.ReadableStreamMessageReader{constructor(e,n="utf-8"){super((0,o.default)().stream.asReadableStream(e),n)}}n.SocketMessageReader=p;class f extends a.WriteableStreamMessageWriter{constructor(e,n){super((0,o.default)().stream.asWritableStream(e),n),this.socket=e}dispose(){super.dispose(),this.socket.destroy()}}n.SocketMessageWriter=f;class m extends a.ReadableStreamMessageReader{constructor(e,n){super((0,o.default)().stream.asReadableStream(e),n)}}n.StreamMessageReader=m;class g extends a.WriteableStreamMessageWriter{constructor(e,n){super((0,o.default)().stream.asWritableStream(e),n)}}n.StreamMessageWriter=g;const E=process.env.XDG_RUNTIME_DIR,T=new Map([["linux",107],["darwin",103]]);n.generateRandomPipeName=function(){const e=(0,c.randomBytes)(21).toString("hex");if("win32"===process.platform)return`\\\\.\\pipe\\vscode-jsonrpc-${e}-sock`;let n;n=E?s.join(E,`vscode-ipc-${e}.sock`):s.join(l.tmpdir(),`vscode-${e}.sock`);const t=T.get(process.platform);return void 0!==t&&n.length>=t&&(0,o.default)().console.warn(`WARNING: IPC handle "${n}" is longer than ${t} characters.`),n},n.createClientPipeTransport=function(e,n="utf-8"){let t;const r=new Promise(((e,n)=>{t=e}));return new Promise(((i,o)=>{let a=(0,u.createServer)((e=>{a.close(),t([new p(e,n),new f(e,n)])}));a.on("error",o),a.listen(e,(()=>{a.removeListener("error",o),i({onConnected:()=>r})}))}))},n.createServerPipeTransport=function(e,n="utf-8"){const t=(0,u.createConnection)(e);return[new p(t,n),new f(t,n)]},n.createClientSocketTransport=function(e,n="utf-8"){let t;const r=new Promise(((e,n)=>{t=e}));return new Promise(((i,o)=>{const a=(0,u.createServer)((e=>{a.close(),t([new p(e,n),new f(e,n)])}));a.on("error",o),a.listen(e,"127.0.0.1",(()=>{a.removeListener("error",o),i({onConnected:()=>r})}))}))},n.createServerSocketTransport=function(e,n="utf-8"){const t=(0,u.createConnection)(e,"127.0.0.1");return[new p(t,n),new f(t,n)]},n.createMessageConnection=function(e,n,t,r){t||(t=a.NullLogger);const i=function(e){const n=e;return void 0!==n.read&&void 0!==n.addListener}(e)?new m(e):e,o=function(e){const n=e;return void 0!==n.write&&void 0!==n.addListener}(n)?new g(n):n;return a.ConnectionStrategy.is(r)&&(r={connectionStrategy:r}),(0,a.createMessageConnection)(i,o,t,r)}},3034:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(147),i=t(3837),o=t(3911),a=t(5530);class s extends a.AbstractMessageBuffer{constructor(e="utf-8"){super(e)}emptyBuffer(){return s.emptyBuffer}fromString(e,n){return Buffer.from(e,n)}toString(e,n){return e instanceof Buffer?e.toString(n):new i.TextDecoder(n).decode(e)}asNative(e,n){return void 0===n?e instanceof Buffer?e:Buffer.from(e):e instanceof Buffer?e.slice(0,n):Buffer.from(e,0,n)}allocNative(e){return Buffer.allocUnsafe(e)}}s.emptyBuffer=Buffer.allocUnsafe(0);class l{constructor(e){this.stream=e}onClose(e){return this.stream.on("close",e),o.Disposable.create((()=>this.stream.off("close",e)))}onError(e){return this.stream.on("error",e),o.Disposable.create((()=>this.stream.off("error",e)))}onEnd(e){return this.stream.on("end",e),o.Disposable.create((()=>this.stream.off("end",e)))}onData(e){return this.stream.on("data",e),o.Disposable.create((()=>this.stream.off("data",e)))}}class c{constructor(e){this.stream=e}onClose(e){return this.stream.on("close",e),o.Disposable.create((()=>this.stream.off("close",e)))}onError(e){return this.stream.on("error",e),o.Disposable.create((()=>this.stream.off("error",e)))}onEnd(e){return this.stream.on("end",e),o.Disposable.create((()=>this.stream.off("end",e)))}write(e,n){return new Promise(((t,r)=>{const i=e=>{null==e?t():r(e)};"string"==typeof e?this.stream.write(e,n,i):this.stream.write(e,i)}))}end(){this.stream.end()}}const u=Object.freeze({messageBuffer:Object.freeze({create:e=>new s(e)}),applicationJson:Object.freeze({encoder:Object.freeze({name:"application/json",encode:(e,n)=>{try{return Promise.resolve(Buffer.from(JSON.stringify(e,void 0,0),n.charset))}catch(e){return Promise.reject(e)}}}),decoder:Object.freeze({name:"application/json",decode:(e,n)=>{try{return e instanceof Buffer?Promise.resolve(JSON.parse(e.toString(n.charset))):Promise.resolve(JSON.parse(new i.TextDecoder(n.charset).decode(e)))}catch(e){return Promise.reject(e)}}})}),stream:Object.freeze({asReadableStream:e=>new l(e),asWritableStream:e=>new c(e)}),console,timer:Object.freeze({setTimeout(e,n,...t){const r=setTimeout(e,n,...t);return{dispose:()=>clearTimeout(r)}},setImmediate(e,...n){const t=setImmediate(e,...n);return{dispose:()=>clearImmediate(t)}},setInterval(e,n,...t){const r=setInterval(e,n,...t);return{dispose:()=>clearInterval(r)}}})});function d(){return u}!function(e){e.install=function(){r.default.install(u)}}(d||(d={})),n.default=d},5028:(e,n,t)=>{"use strict";e.exports=t(4389)},5734:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var i=Object.getOwnPropertyDescriptor(n,t);i&&!("get"in i?!n.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,i)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__exportStar||function(e,n){for(var t in e)"default"===t||Object.prototype.hasOwnProperty.call(n,t)||r(n,e,t)};Object.defineProperty(n,"__esModule",{value:!0}),n.DiagnosticPullMode=n.vsdiag=void 0,i(t(273),n),i(t(8909),n);var o=t(2570);Object.defineProperty(n,"vsdiag",{enumerable:!0,get:function(){return o.vsdiag}}),Object.defineProperty(n,"DiagnosticPullMode",{enumerable:!0,get:function(){return o.DiagnosticPullMode}}),i(t(4384),n)},5578:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.CallHierarchyFeature=void 0;const r=t(9496),i=t(273),o=t(8909);class a{constructor(e){this.client=e,this.middleware=e.middleware}prepareCallHierarchy(e,n,t){const r=this.client,o=this.middleware,a=(e,n,t)=>{const o=r.code2ProtocolConverter.asTextDocumentPositionParams(e,n);return r.sendRequest(i.CallHierarchyPrepareRequest.type,o,t).then((e=>t.isCancellationRequested?null:r.protocol2CodeConverter.asCallHierarchyItems(e,t)),(e=>r.handleFailedRequest(i.CallHierarchyPrepareRequest.type,t,e,null)))};return o.prepareCallHierarchy?o.prepareCallHierarchy(e,n,t,a):a(e,n,t)}provideCallHierarchyIncomingCalls(e,n){const t=this.client,r=this.middleware,o=(e,n)=>{const r={item:t.code2ProtocolConverter.asCallHierarchyItem(e)};return t.sendRequest(i.CallHierarchyIncomingCallsRequest.type,r,n).then((e=>n.isCancellationRequested?null:t.protocol2CodeConverter.asCallHierarchyIncomingCalls(e,n)),(e=>t.handleFailedRequest(i.CallHierarchyIncomingCallsRequest.type,n,e,null)))};return r.provideCallHierarchyIncomingCalls?r.provideCallHierarchyIncomingCalls(e,n,o):o(e,n)}provideCallHierarchyOutgoingCalls(e,n){const t=this.client,r=this.middleware,o=(e,n)=>{const r={item:t.code2ProtocolConverter.asCallHierarchyItem(e)};return t.sendRequest(i.CallHierarchyOutgoingCallsRequest.type,r,n).then((e=>n.isCancellationRequested?null:t.protocol2CodeConverter.asCallHierarchyOutgoingCalls(e,n)),(e=>t.handleFailedRequest(i.CallHierarchyOutgoingCallsRequest.type,n,e,null)))};return r.provideCallHierarchyOutgoingCalls?r.provideCallHierarchyOutgoingCalls(e,n,o):o(e,n)}}class s extends o.TextDocumentLanguageFeature{constructor(e){super(e,i.CallHierarchyPrepareRequest.type)}fillClientCapabilities(e){const n=e;(0,o.ensure)((0,o.ensure)(n,"textDocument"),"callHierarchy").dynamicRegistration=!0}initialize(e,n){const[t,r]=this.getRegistration(n,e.callHierarchyProvider);t&&r&&this.register({id:t,registerOptions:r})}registerLanguageProvider(e){const n=this._client,t=new a(n);return[r.languages.registerCallHierarchyProvider(this._client.protocol2CodeConverter.asDocumentSelector(e.documentSelector),t),t]}}n.CallHierarchyFeature=s},4384:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.ProposedFeatures=n.BaseLanguageClient=n.MessageTransports=n.SuspendMode=n.State=n.CloseAction=n.ErrorAction=n.RevealOutputChannelOn=void 0;const r=t(9496),i=t(273),o=t(71),a=t(8785),s=t(9763),l=t(4904),c=t(1980),u=t(8071),d=t(8909),h=t(2570),p=t(203),f=t(6495),m=t(743),g=t(1435),E=t(6782),T=t(122),R=t(2908),S=t(9959),y=t(2483),A=t(3051),v=t(8480),I=t(9474),C=t(7711),_=t(6426),b=t(6458),O=t(3471),D=t(4849),N=t(5338),w=t(3069),L=t(6495),x=t(9889),M=t(328),k=t(5941),P=t(6454),F=t(707),G=t(750),U=t(3603),H=t(5578),q=t(9957),X=t(8406),j=t(3483),K=t(4175),B=t(5098),$=t(6190);var W,V,z,Y,Z,J,Q;!function(e){e[e.Info=1]="Info",e[e.Warn=2]="Warn",e[e.Error=3]="Error",e[e.Never=4]="Never"}(W=n.RevealOutputChannelOn||(n.RevealOutputChannelOn={})),function(e){e[e.Continue=1]="Continue",e[e.Shutdown=2]="Shutdown"}(V=n.ErrorAction||(n.ErrorAction={})),function(e){e[e.DoNotRestart=1]="DoNotRestart",e[e.Restart=2]="Restart"}(z=n.CloseAction||(n.CloseAction={})),function(e){e[e.Stopped=1]="Stopped",e[e.Starting=3]="Starting",e[e.Running=2]="Running"}(Y=n.State||(n.State={})),(Q=n.SuspendMode||(n.SuspendMode={})).off="off",Q.on="on";class ee{constructor(e,n){this.client=e,this.maxRestartCount=n,this.restarts=[]}error(e,n,t){return t&&t<=3?{action:V.Continue}:{action:V.Shutdown}}closed(){return this.restarts.push(Date.now()),this.restarts.length<=this.maxRestartCount?{action:z.Restart}:this.restarts[this.restarts.length-1]-this.restarts[0]<=18e4?{action:z.DoNotRestart,message:`The ${this.client.name} server crashed ${this.maxRestartCount+1} times in the last 3 minutes. The server will not be restarted. See the output for more information.`}:(this.restarts.shift(),{action:z.Restart})}}!function(e){e.Initial="initial",e.Starting="starting",e.StartFailed="startFailed",e.Running="running",e.Stopping="stopping",e.Stopped="stopped"}(Z||(Z={})),(n.MessageTransports||(n.MessageTransports={})).is=function(e){return e&&i.MessageReader.is(e.reader)&&i.MessageWriter.is(e.writer)};class ne{constructor(e,n,t){this._traceFormat=i.TraceFormat.Text,this._diagnosticQueue=new Map,this._diagnosticQueueState={state:"idle"},this._features=[],this._dynamicFeatures=new Map,this.workspaceEditLock=new l.Semaphore(1),this._id=e,this._name=n;const r={isTrusted:!1,supportHtml:!1};void 0!==(t=t||{}).markdown&&(r.isTrusted=!0===t.markdown.isTrusted,r.supportHtml=!0===t.markdown.supportHtml),this._clientOptions={documentSelector:t.documentSelector??[],synchronize:t.synchronize??{},diagnosticCollectionName:t.diagnosticCollectionName,outputChannelName:t.outputChannelName??this._name,revealOutputChannelOn:t.revealOutputChannelOn??W.Error,stdioEncoding:t.stdioEncoding??"utf8",initializationOptions:t.initializationOptions,initializationFailedHandler:t.initializationFailedHandler,progressOnInitialization:!!t.progressOnInitialization,errorHandler:t.errorHandler??this.createDefaultErrorHandler(t.connectionOptions?.maxRestartCount),middleware:t.middleware??{},uriConverters:t.uriConverters,workspaceFolder:t.workspaceFolder,connectionOptions:t.connectionOptions,markdown:r,diagnosticPullOptions:t.diagnosticPullOptions??{onChange:!0,onSave:!1},notebookDocumentOptions:t.notebookDocumentOptions??{}},this._clientOptions.synchronize=this._clientOptions.synchronize||{},this._state=Z.Initial,this._ignoredRegistrations=new Set,this._notificationHandlers=new Map,this._pendingNotificationHandlers=new Map,this._notificationDisposables=new Map,this._requestHandlers=new Map,this._pendingRequestHandlers=new Map,this._requestDisposables=new Map,this._progressHandlers=new Map,this._pendingProgressHandlers=new Map,this._progressDisposables=new Map,this._connection=void 0,this._initializeResult=void 0,t.outputChannel?(this._outputChannel=t.outputChannel,this._disposeOutputChannel=!1):(this._outputChannel=void 0,this._disposeOutputChannel=!0),this._traceOutputChannel=t.traceOutputChannel,this._diagnostics=void 0,this._fileEvents=[],this._fileEventDelayer=new l.Delayer(250),this._onStop=void 0,this._telemetryEmitter=new i.Emitter,this._stateChangeEmitter=new i.Emitter,this._trace=i.Trace.Off,this._tracer={log:(e,n)=>{s.string(e)?this.logTrace(e,n):this.logObjectTrace(e)}},this._c2p=o.createConverter(t.uriConverters?t.uriConverters.code2Protocol:void 0),this._p2c=a.createConverter(t.uriConverters?t.uriConverters.protocol2Code:void 0,this._clientOptions.markdown.isTrusted,this._clientOptions.markdown.supportHtml),this._syncedDocuments=new Map,this.registerBuiltinFeatures()}get name(){return this._name}get middleware(){return this._clientOptions.middleware??Object.create(null)}get clientOptions(){return this._clientOptions}get protocol2CodeConverter(){return this._p2c}get code2ProtocolConverter(){return this._c2p}get onTelemetry(){return this._telemetryEmitter.event}get onDidChangeState(){return this._stateChangeEmitter.event}get outputChannel(){return this._outputChannel||(this._outputChannel=r.window.createOutputChannel(this._clientOptions.outputChannelName?this._clientOptions.outputChannelName:this._name)),this._outputChannel}get traceOutputChannel(){return this._traceOutputChannel?this._traceOutputChannel:this.outputChannel}get diagnostics(){return this._diagnostics}get state(){return this.getPublicState()}get $state(){return this._state}set $state(e){let n=this.getPublicState();this._state=e;let t=this.getPublicState();t!==n&&this._stateChangeEmitter.fire({oldState:n,newState:t})}getPublicState(){switch(this.$state){case Z.Starting:return Y.Starting;case Z.Running:return Y.Running;default:return Y.Stopped}}get initializeResult(){return this._initializeResult}async sendRequest(e,...n){if(this.$state===Z.StartFailed||this.$state===Z.Stopping||this.$state===Z.Stopped)return Promise.reject(new i.ResponseError(i.ErrorCodes.ConnectionInactive,"Client is not running"));try{const t=await this.$start();return this.forceDocumentSync(),t.sendRequest(e,...n)}catch(n){throw this.error(`Sending request ${s.string(e)?e:e.method} failed.`,n),n}}onRequest(e,n){const t="string"==typeof e?e:e.method;this._requestHandlers.set(t,n);const r=this.activeConnection();let i;return void 0!==r?(this._requestDisposables.set(t,r.onRequest(e,n)),i={dispose:()=>{const e=this._requestDisposables.get(t);void 0!==e&&(e.dispose(),this._requestDisposables.delete(t))}}):(this._pendingRequestHandlers.set(t,n),i={dispose:()=>{this._pendingRequestHandlers.delete(t);const e=this._requestDisposables.get(t);void 0!==e&&(e.dispose(),this._requestDisposables.delete(t))}}),{dispose:()=>{this._requestHandlers.delete(t),i.dispose()}}}async sendNotification(e,n){if(this.$state===Z.StartFailed||this.$state===Z.Stopping||this.$state===Z.Stopped)return Promise.reject(new i.ResponseError(i.ErrorCodes.ConnectionInactive,"Client is not running"));try{const t=await this.$start();return this.forceDocumentSync(),t.sendNotification(e,n)}catch(n){throw this.error(`Sending notification ${s.string(e)?e:e.method} failed.`,n),n}}onNotification(e,n){const t="string"==typeof e?e:e.method;this._notificationHandlers.set(t,n);const r=this.activeConnection();let i;return void 0!==r?(this._notificationDisposables.set(t,r.onNotification(e,n)),i={dispose:()=>{const e=this._notificationDisposables.get(t);void 0!==e&&(e.dispose(),this._notificationDisposables.delete(t))}}):(this._pendingNotificationHandlers.set(t,n),i={dispose:()=>{this._pendingNotificationHandlers.delete(t);const e=this._notificationDisposables.get(t);void 0!==e&&(e.dispose(),this._notificationDisposables.delete(t))}}),{dispose:()=>{this._notificationHandlers.delete(t),i.dispose()}}}async sendProgress(e,n,t){try{return(await this.$start()).sendProgress(e,n,t)}catch(e){throw this.error(`Sending progress for token ${n} failed.`,e),e}}onProgress(e,n,t){this._progressHandlers.set(n,{type:e,handler:t});const r=this.activeConnection();let o;const a=this._clientOptions.middleware?.handleWorkDoneProgress,s=i.WorkDoneProgress.is(e)&&void 0!==a?e=>{a(n,e,(()=>t(e)))}:t;return void 0!==r?(this._progressDisposables.set(n,r.onProgress(e,n,s)),o={dispose:()=>{const e=this._progressDisposables.get(n);void 0!==e&&(e.dispose(),this._progressDisposables.delete(n))}}):(this._pendingProgressHandlers.set(n,{type:e,handler:t}),o={dispose:()=>{this._pendingProgressHandlers.delete(n);const e=this._progressDisposables.get(n);void 0!==e&&(e.dispose(),this._progressDisposables.delete(n))}}),{dispose:()=>{this._progressHandlers.delete(n),o.dispose()}}}createDefaultErrorHandler(e){if(void 0!==e&&e<0)throw new Error(`Invalid maxRestartCount: ${e}`);return new ee(this,e??4)}async setTrace(e){this._trace=e;const n=this.activeConnection();void 0!==n&&await n.trace(this._trace,this._tracer,{sendNotification:!1,traceFormat:this._traceFormat})}data2String(e){if(e instanceof i.ResponseError){const n=e;return`  Message: ${n.message}\n  Code: ${n.code} ${n.data?"\n"+n.data.toString():""}`}return e instanceof Error?s.string(e.stack)?e.stack:e.message:s.string(e)?e:e.toString()}info(e,n,t=!0){this.outputChannel.appendLine(`[Info  - ${(new Date).toLocaleTimeString()}] ${e}`),null!=n&&this.outputChannel.appendLine(this.data2String(n)),t&&this._clientOptions.revealOutputChannelOn<=W.Info&&this.showNotificationMessage(i.MessageType.Info,e)}warn(e,n,t=!0){this.outputChannel.appendLine(`[Warn  - ${(new Date).toLocaleTimeString()}] ${e}`),null!=n&&this.outputChannel.appendLine(this.data2String(n)),t&&this._clientOptions.revealOutputChannelOn<=W.Warn&&this.showNotificationMessage(i.MessageType.Warning,e)}error(e,n,t=!0){this.outputChannel.appendLine(`[Error - ${(new Date).toLocaleTimeString()}] ${e}`),null!=n&&this.outputChannel.appendLine(this.data2String(n)),("force"===t||t&&this._clientOptions.revealOutputChannelOn<=W.Error)&&this.showNotificationMessage(i.MessageType.Error,e)}showNotificationMessage(e,n){n=n??"A request has failed. See the output for more information.",(e===i.MessageType.Error?r.window.showErrorMessage:e===i.MessageType.Warning?r.window.showWarningMessage:r.window.showInformationMessage)(n,"Go to output").then((e=>{void 0!==e&&this.outputChannel.show(!0)}))}logTrace(e,n){this.traceOutputChannel.appendLine(`[Trace - ${(new Date).toLocaleTimeString()}] ${e}`),n&&this.traceOutputChannel.appendLine(this.data2String(n))}logObjectTrace(e){e.isLSPMessage&&e.type?this.traceOutputChannel.append(`[LSP   - ${(new Date).toLocaleTimeString()}] `):this.traceOutputChannel.append(`[Trace - ${(new Date).toLocaleTimeString()}] `),e&&this.traceOutputChannel.appendLine(`${JSON.stringify(e)}`)}needsStart(){return this.$state===Z.Initial||this.$state===Z.Stopping||this.$state===Z.Stopped}needsStop(){return this.$state===Z.Starting||this.$state===Z.Running}activeConnection(){return this.$state===Z.Running&&void 0!==this._connection?this._connection:void 0}isRunning(){return this.$state===Z.Running}async start(){if(void 0!==this._onStart)return this._onStart;const[e,n,t]=this.createOnStartPromise();this._onStart=e,void 0!==this._onStop&&(await this._onStop,this._onStop=void 0),void 0===this._diagnostics&&(this._diagnostics=this._clientOptions.diagnosticCollectionName?r.languages.createDiagnosticCollection(this._clientOptions.diagnosticCollectionName):r.languages.createDiagnosticCollection());for(const[e,n]of this._notificationHandlers)this._pendingNotificationHandlers.has(e)||this._pendingNotificationHandlers.set(e,n);for(const[e,n]of this._requestHandlers)this._pendingRequestHandlers.has(e)||this._pendingRequestHandlers.set(e,n);for(const[e,n]of this._progressHandlers)this._pendingProgressHandlers.has(e)||this._pendingProgressHandlers.set(e,n);this.$state=Z.Starting;try{const e=await this.createConnection();e.onNotification(i.LogMessageNotification.type,(e=>{switch(e.type){case i.MessageType.Error:this.error(e.message,void 0,!1);break;case i.MessageType.Warning:this.warn(e.message,void 0,!1);break;case i.MessageType.Info:this.info(e.message,void 0,!1);break;default:this.outputChannel.appendLine(e.message)}})),e.onNotification(i.ShowMessageNotification.type,(e=>{switch(e.type){case i.MessageType.Error:r.window.showErrorMessage(e.message);break;case i.MessageType.Warning:r.window.showWarningMessage(e.message);break;case i.MessageType.Info:default:r.window.showInformationMessage(e.message)}})),e.onRequest(i.ShowMessageRequest.type,(e=>{let n;switch(e.type){case i.MessageType.Error:n=r.window.showErrorMessage;break;case i.MessageType.Warning:n=r.window.showWarningMessage;break;case i.MessageType.Info:default:n=r.window.showInformationMessage}let t=e.actions||[];return n(e.message,...t)})),e.onNotification(i.TelemetryEventNotification.type,(e=>{this._telemetryEmitter.fire(e)})),e.onRequest(i.ShowDocumentRequest.type,(async e=>{const n=async e=>{const n=this.protocol2CodeConverter.asUri(e.uri);try{if(!0===e.external)return{success:await r.env.openExternal(n)};{const t={};return void 0!==e.selection&&(t.selection=this.protocol2CodeConverter.asRange(e.selection)),void 0===e.takeFocus||!1===e.takeFocus?t.preserveFocus=!0:!0===e.takeFocus&&(t.preserveFocus=!1),await r.window.showTextDocument(n,t),{success:!0}}}catch(e){return{success:!0}}},t=this._clientOptions.middleware.window?.showDocument;return void 0!==t?t(e,n):n(e)})),e.listen(),await this.initialize(e),n()}catch(e){this.$state=Z.StartFailed,this.error(`${this._name} client: couldn't create connection to server.`,e,"force"),t(e)}return this._onStart}createOnStartPromise(){let e,n;return[new Promise(((t,r)=>{e=t,n=r})),e,n]}async initialize(e){this.refreshTrace(e,!1);const n=this._clientOptions.initializationOptions,[t,o]=void 0!==this._clientOptions.workspaceFolder?[this._clientOptions.workspaceFolder.uri.fsPath,[{uri:this._c2p.asUri(this._clientOptions.workspaceFolder.uri),name:this._clientOptions.workspaceFolder.name}]]:[this._clientGetRootPath(),null],a={processId:null,clientInfo:{name:r.env.appName,version:r.version},locale:this.getLocale(),rootPath:t||null,rootUri:t?this._c2p.asUri(r.Uri.file(t)):null,capabilities:this.computeClientCapabilities(),initializationOptions:s.func(n)?n():n,trace:i.Trace.toString(this._trace),workspaceFolders:o};if(this.fillInitializeParams(a),!this._clientOptions.progressOnInitialization)return this.doInitialize(e,a);{const n=c.generateUuid(),t=new u.ProgressPart(e,n);a.workDoneToken=n;try{const n=await this.doInitialize(e,a);return t.done(),n}catch(e){throw t.cancel(),e}}}async doInitialize(e,n){try{const t=await e.initialize(n);if(void 0!==t.capabilities.positionEncoding&&t.capabilities.positionEncoding!==i.PositionEncodingKind.UTF16)throw new Error(`Unsupported position encoding (${t.capabilities.positionEncoding}) received from server ${this.name}`);let r;this._initializeResult=t,this.$state=Z.Running,s.number(t.capabilities.textDocumentSync)?r=t.capabilities.textDocumentSync===i.TextDocumentSyncKind.None?{openClose:!1,change:i.TextDocumentSyncKind.None,save:void 0}:{openClose:!0,change:t.capabilities.textDocumentSync,save:{includeText:!1}}:void 0!==t.capabilities.textDocumentSync&&null!==t.capabilities.textDocumentSync&&(r=t.capabilities.textDocumentSync),this._capabilities=Object.assign({},t.capabilities,{resolvedTextDocumentSync:r}),e.onNotification(i.PublishDiagnosticsNotification.type,(e=>this.handleDiagnostics(e))),e.onRequest(i.RegistrationRequest.type,(e=>this.handleRegistrationRequest(e))),e.onRequest("client/registerFeature",(e=>this.handleRegistrationRequest(e))),e.onRequest(i.UnregistrationRequest.type,(e=>this.handleUnregistrationRequest(e))),e.onRequest("client/unregisterFeature",(e=>this.handleUnregistrationRequest(e))),e.onRequest(i.ApplyWorkspaceEditRequest.type,(e=>this.handleApplyWorkspaceEdit(e)));for(const[n,t]of this._pendingNotificationHandlers)this._notificationDisposables.set(n,e.onNotification(n,t));this._pendingNotificationHandlers.clear();for(const[n,t]of this._pendingRequestHandlers)this._requestDisposables.set(n,e.onRequest(n,t));this._pendingRequestHandlers.clear();for(const[n,t]of this._pendingProgressHandlers)this._progressDisposables.set(n,e.onProgress(t.type,n,t.handler));return this._pendingProgressHandlers.clear(),await e.sendNotification(i.InitializedNotification.type,{}),this.hookFileEvents(e),this.hookConfigurationChanged(e),this.initializeFeatures(e),t}catch(n){throw this._clientOptions.initializationFailedHandler?this._clientOptions.initializationFailedHandler(n)?this.initialize(e):this.stop():n instanceof i.ResponseError&&n.data&&n.data.retry?r.window.showErrorMessage(n.message,{title:"Retry",id:"retry"}).then((n=>{n&&"retry"===n.id?this.initialize(e):this.stop()})):(n&&n.message&&r.window.showErrorMessage(n.message),this.error("Server initialization failed.",n),this.stop()),n}}_clientGetRootPath(){let e=r.workspace.workspaceFolders;if(!e||0===e.length)return;let n=e[0];return"file"===n.uri.scheme?n.uri.fsPath:void 0}stop(e=2e3){return this.shutdown("stop",e)}suspend(){return this.shutdown("suspend",5e3)}async shutdown(e,n){if(this.$state===Z.Stopped||this.$state===Z.Initial)return;if(this.$state===Z.Stopping&&this._onStop)return this._onStop;const t=await this.$start();this._initializeResult=void 0,this.$state=Z.Stopping,this.cleanUp(e);const r=new Promise((e=>{(0,i.RAL)().timer.setTimeout(e,n)})),o=(async e=>(await e.shutdown(),await e.exit(),e))(t);return this._onStop=Promise.race([r,o]).then((e=>{if(void 0===e)throw this.error("Stopping server timed out",void 0,!1),new Error("Stopping the server timed out");e.end(),e.dispose()}),(e=>{throw this.error("Stopping server failed",e,!1),e})).finally((()=>{this.$state=Z.Stopped,"stop"===e&&this.cleanUpChannel(),this._onStart=void 0,this._onStop=void 0,this._connection=void 0,this._ignoredRegistrations.clear()}))}cleanUp(e){this._fileEvents=[],this._fileEventDelayer.cancel(),this._syncedDocuments&&this._syncedDocuments.clear();for(const e of Array.from(this._features.entries()).map((e=>e[1])).reverse())e.dispose();"stop"===e&&void 0!==this._diagnostics&&(this._diagnostics.dispose(),this._diagnostics=void 0),void 0!==this._idleInterval&&(this._idleInterval.dispose(),this._idleInterval=void 0)}cleanUpChannel(){void 0!==this._outputChannel&&this._disposeOutputChannel&&(this._outputChannel.dispose(),this._outputChannel=void 0)}notifyFileEvent(e){const n=this;async function t(e){return n._fileEvents.push(e),n._fileEventDelayer.trigger((async()=>{const e=await n.$start();n.forceDocumentSync();const t=e.sendNotification(i.DidChangeWatchedFilesNotification.type,{changes:n._fileEvents});return n._fileEvents=[],t}))}const r=this.clientOptions.middleware?.workspace;(r?.didChangeWatchedFile?r.didChangeWatchedFile(e,t):t(e)).catch((e=>{n.error("Notify file events failed.",e)}))}forceDocumentSync(){void 0===this._didChangeTextDocumentFeature&&(this._didChangeTextDocumentFeature=this._dynamicFeatures.get(i.DidChangeTextDocumentNotification.type.method)),this._didChangeTextDocumentFeature.forceDelivery()}handleDiagnostics(e){if(!this._diagnostics)return;const n=e.uri;"busy"===this._diagnosticQueueState.state&&this._diagnosticQueueState.document===n&&this._diagnosticQueueState.tokenSource.cancel(),this._diagnosticQueue.set(e.uri,e.diagnostics),this.triggerDiagnosticQueue()}triggerDiagnosticQueue(){(0,i.RAL)().timer.setImmediate((()=>{this.workDiagnosticQueue()}))}workDiagnosticQueue(){if("busy"===this._diagnosticQueueState.state)return;const e=this._diagnosticQueue.entries().next();if(!0===e.done)return;const[n,t]=e.value;this._diagnosticQueue.delete(n);const i=new r.CancellationTokenSource;this._diagnosticQueueState={state:"busy",document:n,tokenSource:i},this._p2c.asDiagnostics(t,i.token).then((e=>{if(!i.token.isCancellationRequested){const t=this._p2c.asUri(n),r=this.clientOptions.middleware;r.handleDiagnostics?r.handleDiagnostics(t,e,((e,n)=>this.setDiagnostics(e,n))):this.setDiagnostics(t,e)}})).finally((()=>{this._diagnosticQueueState={state:"idle"},this.triggerDiagnosticQueue()}))}setDiagnostics(e,n){this._diagnostics&&this._diagnostics.set(e,n)}async $start(){if(this.$state===Z.StartFailed)throw new Error("Previous start failed. Can't restart server.");await this.start();const e=this.activeConnection();if(void 0===e)throw new Error("Starting server failed");return e}async createConnection(){const e=await this.createMessageTransports(this._clientOptions.stdioEncoding||"utf8");return this._connection=function(e,n,t,r,o){let a=-1;const l=new te,c=(0,i.createProtocolConnection)(e,n,l,o);return c.onError((e=>{t(e[0],e[1],e[2])})),c.onClose(r),{get lastUsed(){return a},resetLastUsed:()=>{a=-1},listen:()=>c.listen(),sendRequest:(e,...n)=>(a=Date.now(),c.sendRequest(e,...n)),onRequest:(e,n)=>c.onRequest(e,n),hasPendingResponse:()=>c.hasPendingResponse(),sendNotification:(e,n)=>(a=Date.now(),c.sendNotification(e,n)),onNotification:(e,n)=>c.onNotification(e,n),onProgress:c.onProgress,sendProgress:c.sendProgress,trace:(e,n,t)=>{const r={sendNotification:!1,traceFormat:i.TraceFormat.Text};return void 0===t?c.trace(e,n,r):(s.boolean(t),c.trace(e,n,t))},initialize:e=>(a=Date.now(),c.sendRequest(i.InitializeRequest.type,e)),shutdown:()=>(a=Date.now(),c.sendRequest(i.ShutdownRequest.type,void 0)),exit:()=>(a=Date.now(),c.sendNotification(i.ExitNotification.type)),end:()=>c.end(),dispose:()=>c.dispose()}}(e.reader,e.writer,((e,n,t)=>{this.handleConnectionError(e,n,t)}),(()=>{this.handleConnectionClosed()}),this._clientOptions.connectionOptions),this._connection}handleConnectionClosed(){if(this.$state===Z.Stopped)return;try{void 0!==this._connection&&this._connection.dispose()}catch(e){}let e={action:z.DoNotRestart};if(this.$state!==Z.Stopping)try{e=this._clientOptions.errorHandler.closed()}catch(e){}this._connection=void 0,e.action===z.DoNotRestart?(this.error(e.message??"Connection to server got closed. Server will not be restarted.",void 0,"force"),this.cleanUp("stop"),this.$state===Z.Starting?this.$state=Z.StartFailed:this.$state=Z.Stopped,this._onStop=Promise.resolve(),this._onStart=void 0):e.action===z.Restart&&(this.info(e.message??"Connection to server got closed. Server will restart."),this.cleanUp("restart"),this.$state=Z.Initial,this._onStop=Promise.resolve(),this._onStart=void 0,this.start().catch((e=>this.error("Restarting server failed",e,"force"))))}handleConnectionError(e,n,t){const r=this._clientOptions.errorHandler.error(e,n,t);r.action===V.Shutdown&&(this.error(r.message??`Client ${this._name}: connection to server is erroring. Shutting down server.`,void 0,"force"),this.stop().catch((e=>{this.error("Stopping server failed",e,!1)})))}hookConfigurationChanged(e){r.workspace.onDidChangeConfiguration((()=>{this.refreshTrace(e,!0)}))}refreshTrace(e,n=!1){const t=r.workspace.getConfiguration(this._id);let o=i.Trace.Off,a=i.TraceFormat.Text;if(t){const e=t.get("trace.server","off");"string"==typeof e?o=i.Trace.fromString(e):(o=i.Trace.fromString(t.get("trace.server.verbosity","off")),a=i.TraceFormat.fromString(t.get("trace.server.format","text")))}this._trace=o,this._traceFormat=a,e.trace(this._trace,this._tracer,{sendNotification:n,traceFormat:this._traceFormat}).catch((e=>{this.error("Updating trace failed with error",e,!1)}))}hookFileEvents(e){let n,t=this._clientOptions.synchronize.fileEvents;t&&(n=s.array(t)?t:[t],n&&this._dynamicFeatures.get(i.DidChangeWatchedFilesNotification.type.method).registerRaw(c.generateUuid(),n))}registerFeatures(e){for(let n of e)this.registerFeature(n)}registerFeature(e){if(this._features.push(e),d.DynamicFeature.is(e)){const n=e.registrationType;this._dynamicFeatures.set(n.method,e)}}getFeature(e){return this._dynamicFeatures.get(e)}hasDedicatedTextSynchronizationFeature(e){const n=this.getFeature(i.NotebookDocumentSyncRegistrationType.method);return void 0!==n&&n instanceof p.NotebookDocumentSyncFeature&&n.handles(e)}registerBuiltinFeatures(){this.registerFeature(new f.ConfigurationFeature(this)),this.registerFeature(new m.DidOpenTextDocumentFeature(this,this._syncedDocuments)),this.registerFeature(new m.DidChangeTextDocumentFeature(this)),this.registerFeature(new m.WillSaveFeature(this)),this.registerFeature(new m.WillSaveWaitUntilFeature(this)),this.registerFeature(new m.DidSaveTextDocumentFeature(this)),this.registerFeature(new m.DidCloseTextDocumentFeature(this,this._syncedDocuments)),this.registerFeature(new N.FileSystemWatcherFeature(this,(e=>this.notifyFileEvent(e)))),this.registerFeature(new g.CompletionItemFeature(this)),this.registerFeature(new E.HoverFeature(this)),this.registerFeature(new R.SignatureHelpFeature(this)),this.registerFeature(new T.DefinitionFeature(this)),this.registerFeature(new v.ReferencesFeature(this)),this.registerFeature(new S.DocumentHighlightFeature(this)),this.registerFeature(new y.DocumentSymbolFeature(this)),this.registerFeature(new A.WorkspaceSymbolFeature(this)),this.registerFeature(new I.CodeActionFeature(this)),this.registerFeature(new C.CodeLensFeature(this)),this.registerFeature(new _.DocumentFormattingFeature(this)),this.registerFeature(new _.DocumentRangeFormattingFeature(this)),this.registerFeature(new _.DocumentOnTypeFormattingFeature(this)),this.registerFeature(new b.RenameFeature(this)),this.registerFeature(new O.DocumentLinkFeature(this)),this.registerFeature(new D.ExecuteCommandFeature(this)),this.registerFeature(new f.SyncConfigurationFeature(this)),this.registerFeature(new L.ConfigurationFeature(this)),this.registerFeature(new M.TypeDefinitionFeature(this)),this.registerFeature(new x.ImplementationFeature(this)),this.registerFeature(new w.ColorProviderFeature(this)),void 0===this.clientOptions.workspaceFolder&&this.registerFeature(new k.WorkspaceFoldersFeature(this)),this.registerFeature(new P.FoldingRangeFeature(this)),this.registerFeature(new F.DeclarationFeature(this)),this.registerFeature(new G.SelectionRangeFeature(this)),this.registerFeature(new U.ProgressFeature(this)),this.registerFeature(new H.CallHierarchyFeature(this)),this.registerFeature(new q.SemanticTokensFeature(this)),this.registerFeature(new j.LinkedEditingFeature(this)),this.registerFeature(new X.DidCreateFilesFeature(this)),this.registerFeature(new X.DidRenameFilesFeature(this)),this.registerFeature(new X.DidDeleteFilesFeature(this)),this.registerFeature(new X.WillCreateFilesFeature(this)),this.registerFeature(new X.WillRenameFilesFeature(this)),this.registerFeature(new X.WillDeleteFilesFeature(this)),this.registerFeature(new K.TypeHierarchyFeature(this)),this.registerFeature(new B.InlineValueFeature(this)),this.registerFeature(new $.InlayHintsFeature(this)),this.registerFeature(new h.DiagnosticFeature(this)),this.registerFeature(new p.NotebookDocumentSyncFeature(this))}registerProposedFeatures(){this.registerFeatures(J.createAll(this))}fillInitializeParams(e){for(let n of this._features)s.func(n.fillInitializeParams)&&n.fillInitializeParams(e)}computeClientCapabilities(){const e={};(0,d.ensure)(e,"workspace").applyEdit=!0;const n=(0,d.ensure)((0,d.ensure)(e,"workspace"),"workspaceEdit");n.documentChanges=!0,n.resourceOperations=[i.ResourceOperationKind.Create,i.ResourceOperationKind.Rename,i.ResourceOperationKind.Delete],n.failureHandling=i.FailureHandlingKind.TextOnlyTransactional,n.normalizesLineEndings=!0,n.changeAnnotationSupport={groupsOnLabel:!0};const t=(0,d.ensure)((0,d.ensure)(e,"textDocument"),"publishDiagnostics");t.relatedInformation=!0,t.versionSupport=!1,t.tagSupport={valueSet:[i.DiagnosticTag.Unnecessary,i.DiagnosticTag.Deprecated]},t.codeDescriptionSupport=!0,t.dataSupport=!0;const r=(0,d.ensure)(e,"window");(0,d.ensure)(r,"showMessage").messageActionItem={additionalPropertiesSupport:!0},(0,d.ensure)(r,"showDocument").support=!0;const o=(0,d.ensure)(e,"general");o.staleRequestSupport={cancel:!0,retryOnContentModified:Array.from(ne.RequestsToCancelOnContentModified)},o.regularExpressions={engine:"ECMAScript",version:"ES2020"},o.markdown={parser:"marked",version:"1.1.0"},o.positionEncodings=["utf-16"],this._clientOptions.markdown.supportHtml&&(o.markdown.allowedTags=["ul","li","p","code","blockquote","ol","h1","h2","h3","h4","h5","h6","hr","em","pre","table","thead","tbody","tr","th","td","div","del","a","strong","br","img","span"]);for(let n of this._features)n.fillClientCapabilities(e);return e}initializeFeatures(e){const n=this._clientOptions.documentSelector;for(const e of this._features)s.func(e.preInitialize)&&e.preInitialize(this._capabilities,n);for(const e of this._features)e.initialize(this._capabilities,n)}async handleRegistrationRequest(e){if(this.isRunning())for(const n of e.registrations){const e=this._dynamicFeatures.get(n.method);if(void 0===e)return Promise.reject(new Error(`No feature implementation for ${n.method} found. Registration failed.`));const t=n.registerOptions??{};t.documentSelector=t.documentSelector??this._clientOptions.documentSelector;const r={id:n.id,registerOptions:t};try{e.register(r)}catch(e){return Promise.reject(e)}}else for(const n of e.registrations)this._ignoredRegistrations.add(n.id)}async handleUnregistrationRequest(e){for(let n of e.unregisterations){if(this._ignoredRegistrations.has(n.id))continue;const e=this._dynamicFeatures.get(n.method);if(!e)return Promise.reject(new Error(`No feature implementation for ${n.method} found. Unregistration failed.`));e.unregister(n.id)}}async handleApplyWorkspaceEdit(e){const n=e.edit,t=await this.workspaceEditLock.lock((()=>this._p2c.asWorkspaceEdit(n))),o=new Map;r.workspace.textDocuments.forEach((e=>o.set(e.uri.toString(),e)));let a=!1;if(n.documentChanges)for(const e of n.documentChanges)if(i.TextDocumentEdit.is(e)&&e.textDocument.version&&e.textDocument.version>=0){const n=o.get(e.textDocument.uri);if(n&&n.version!==e.textDocument.version){a=!0;break}}return a?Promise.resolve({applied:!1}):s.asPromise(r.workspace.applyEdit(t).then((e=>({applied:e}))))}handleFailedRequest(e,n,t,o,a=!0){if(t instanceof i.ResponseError){if(t.code===i.ErrorCodes.PendingResponseRejected||t.code===i.ErrorCodes.ConnectionInactive)return o;if(t.code===i.LSPErrorCodes.RequestCancelled||t.code===i.LSPErrorCodes.ServerCancelled){if(void 0!==n&&n.isCancellationRequested)return o;throw void 0!==t.data?new d.LSPCancellationError(t.data):new r.CancellationError}if(t.code===i.LSPErrorCodes.ContentModified){if(ne.RequestsToCancelOnContentModified.has(e.method))throw new r.CancellationError;return o}}throw this.error(`Request ${e.method} failed.`,t,a),t}}n.BaseLanguageClient=ne,ne.RequestsToCancelOnContentModified=new Set([i.SemanticTokensRequest.method,i.SemanticTokensRangeRequest.method,i.SemanticTokensDeltaRequest.method]);class te{error(e){(0,i.RAL)().console.error(e)}warn(e){(0,i.RAL)().console.warn(e)}info(e){(0,i.RAL)().console.info(e)}log(e){(0,i.RAL)().console.log(e)}}!function(e){e.createAll=function(e){return[]}}(J=n.ProposedFeatures||(n.ProposedFeatures={}))},9474:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.CodeActionFeature=void 0;const r=t(9496),i=t(273),o=t(1980),a=t(8909);class s extends a.TextDocumentLanguageFeature{constructor(e){super(e,i.CodeActionRequest.type)}fillClientCapabilities(e){const n=(0,a.ensure)((0,a.ensure)(e,"textDocument"),"codeAction");n.dynamicRegistration=!0,n.isPreferredSupport=!0,n.disabledSupport=!0,n.dataSupport=!0,n.resolveSupport={properties:["edit"]},n.codeActionLiteralSupport={codeActionKind:{valueSet:[i.CodeActionKind.Empty,i.CodeActionKind.QuickFix,i.CodeActionKind.Refactor,i.CodeActionKind.RefactorExtract,i.CodeActionKind.RefactorInline,i.CodeActionKind.RefactorRewrite,i.CodeActionKind.Source,i.CodeActionKind.SourceOrganizeImports]}},n.honorsChangeAnnotations=!1}initialize(e,n){const t=this.getRegistrationOptions(n,e.codeActionProvider);t&&this.register({id:o.generateUuid(),registerOptions:t})}registerLanguageProvider(e){const n=e.documentSelector,t={provideCodeActions:(e,n,t,r)=>{const o=this._client,a=async(e,n,t,r)=>{const a={textDocument:o.code2ProtocolConverter.asTextDocumentIdentifier(e),range:o.code2ProtocolConverter.asRange(n),context:await o.code2ProtocolConverter.asCodeActionContext(t,r)};return o.sendRequest(i.CodeActionRequest.type,a,r).then((e=>r.isCancellationRequested||null==e?null:o.protocol2CodeConverter.asCodeActionResult(e,r)),(e=>o.handleFailedRequest(i.CodeActionRequest.type,r,e,null)))},s=o.middleware;return s.provideCodeActions?s.provideCodeActions(e,n,t,r,a):a(e,n,t,r)},resolveCodeAction:e.resolveProvider?(e,n)=>{const t=this._client,r=this._client.middleware,o=async(e,n)=>t.sendRequest(i.CodeActionResolveRequest.type,await t.code2ProtocolConverter.asCodeAction(e,n),n).then((r=>n.isCancellationRequested?e:t.protocol2CodeConverter.asCodeAction(r,n)),(r=>t.handleFailedRequest(i.CodeActionResolveRequest.type,n,r,e)));return r.resolveCodeAction?r.resolveCodeAction(e,n,o):o(e,n)}:void 0};return[r.languages.registerCodeActionsProvider(this._client.protocol2CodeConverter.asDocumentSelector(n),t,e.codeActionKinds?{providedCodeActionKinds:this._client.protocol2CodeConverter.asCodeActionKinds(e.codeActionKinds)}:void 0),t]}}n.CodeActionFeature=s},71:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.createConverter=void 0;const r=t(9496),i=t(273),o=t(9763),a=t(4904),s=t(1807),l=t(583),c=t(8705),u=t(6434),d=t(6640),h=t(8714),p=t(1365),f=t(3912),m=t(1065);var g;!function(e){e.is=function(e){const n=e;return n&&!!n.inserting&&!!n.replacing}}(g||(g={})),n.createConverter=function(e){const n=e||(e=>e.toString());function t(e){return n(e)}function E(e){return{uri:n(e.uri)}}function T(e){return{uri:n(e.uri),languageId:e.languageId,version:e.version,text:e.getText()}}function R(e){switch(e){case r.TextDocumentSaveReason.Manual:return i.TextDocumentSaveReason.Manual;case r.TextDocumentSaveReason.AfterDelay:return i.TextDocumentSaveReason.AfterDelay;case r.TextDocumentSaveReason.FocusOut:return i.TextDocumentSaveReason.FocusOut}return i.TextDocumentSaveReason.Manual}function S(e){switch(e){case r.CompletionTriggerKind.TriggerCharacter:return i.CompletionTriggerKind.TriggerCharacter;case r.CompletionTriggerKind.TriggerForIncompleteCompletions:return i.CompletionTriggerKind.TriggerForIncompleteCompletions;default:return i.CompletionTriggerKind.Invoked}}function y(e){switch(e){case r.SignatureHelpTriggerKind.Invoke:return i.SignatureHelpTriggerKind.Invoked;case r.SignatureHelpTriggerKind.TriggerCharacter:return i.SignatureHelpTriggerKind.TriggerCharacter;case r.SignatureHelpTriggerKind.ContentChange:return i.SignatureHelpTriggerKind.ContentChange}}function A(e){return{label:e.label}}function v(e){return{label:e.label,parameters:(n=e.parameters,n.map(A))};var n}function I(e){return{line:e.line,character:e.character}}function C(e){return null==e?e:{line:e.line>i.uinteger.MAX_VALUE?i.uinteger.MAX_VALUE:e.line,character:e.character>i.uinteger.MAX_VALUE?i.uinteger.MAX_VALUE:e.character}}function _(e){return null==e?e:{start:C(e.start),end:C(e.end)}}function b(e){return null==e?e:i.Location.create(t(e.uri),_(e.range))}function O(e){switch(e){case r.DiagnosticSeverity.Error:return i.DiagnosticSeverity.Error;case r.DiagnosticSeverity.Warning:return i.DiagnosticSeverity.Warning;case r.DiagnosticSeverity.Information:return i.DiagnosticSeverity.Information;case r.DiagnosticSeverity.Hint:return i.DiagnosticSeverity.Hint}}function D(e){switch(e){case r.DiagnosticTag.Unnecessary:return i.DiagnosticTag.Unnecessary;case r.DiagnosticTag.Deprecated:return i.DiagnosticTag.Deprecated;default:return}}function N(e){return{message:e.message,location:b(e.location)}}function w(e){const n=i.Diagnostic.create(_(e.range),e.message),r=e instanceof d.ProtocolDiagnostic?e:void 0;void 0!==r&&void 0!==r.data&&(n.data=r.data);const a=function(e){if(null!=e)return o.number(e)||o.string(e)?e:{value:e.value,target:t(e.target)}}(e.code);return d.DiagnosticCode.is(a)?void 0!==r&&r.hasDiagnosticCode?n.code=a:(n.code=a.value,n.codeDescription={href:a.target}):n.code=a,o.number(e.severity)&&(n.severity=O(e.severity)),Array.isArray(e.tags)&&(n.tags=function(e){if(!e)return;let n=[];for(let t of e){let e=D(t);void 0!==e&&n.push(e)}return n.length>0?n:void 0}(e.tags)),e.relatedInformation&&(n.relatedInformation=e.relatedInformation.map(N)),e.source&&(n.source=e.source),n}function L(e,n){return null==e?e:a.map(e,w,n)}function x(e){if(e===r.CompletionItemTag.Deprecated)return i.CompletionItemTag.Deprecated}function M(e){return{range:_(e.range),newText:e.newText}}function k(e){return null==e?e:e.map(M)}function P(e){return e<=r.SymbolKind.TypeParameter?e+1:i.SymbolKind.Property}function F(e){return e}function G(e){return e.map(F)}function U(e){let n=i.Command.create(e.title,e.command);return e.arguments&&(n.arguments=e.arguments),n}function H(e){const n=i.InlayHintLabelPart.create(e.value);return void 0!==e.location&&(n.location=b(e.location)),void 0!==e.command&&(n.command=U(e.command)),void 0!==e.tooltip&&(n.tooltip=q(e.tooltip)),n}function q(e){return"string"==typeof e?e:{kind:i.MarkupKind.Markdown,value:e.value}}return{asUri:t,asTextDocumentIdentifier:E,asTextDocumentItem:T,asVersionedTextDocumentIdentifier:function(e){return{uri:n(e.uri),version:e.version}},asOpenTextDocumentParams:function(e){return{textDocument:T(e)}},asChangeTextDocumentParams:function(e){if(function(e){let n=e;return!!n.uri&&!!n.version}(e))return{textDocument:{uri:n(e.uri),version:e.version},contentChanges:[{text:e.getText()}]};if(function(e){let n=e;return!!n.document&&!!n.contentChanges}(e)){let t=e.document;return{textDocument:{uri:n(t.uri),version:t.version},contentChanges:e.contentChanges.map((e=>{let n=e.range;return{range:{start:{line:n.start.line,character:n.start.character},end:{line:n.end.line,character:n.end.character}},rangeLength:e.rangeLength,text:e.text}}))}}throw Error("Unsupported text document change parameter")},asCloseTextDocumentParams:function(e){return{textDocument:E(e)}},asSaveTextDocumentParams:function(e,n=!1){let t={textDocument:E(e)};return n&&(t.text=e.getText()),t},asWillSaveTextDocumentParams:function(e){return{textDocument:E(e.document),reason:R(e.reason)}},asDidCreateFilesParams:function(e){return{files:e.files.map((e=>({uri:n(e)})))}},asDidRenameFilesParams:function(e){return{files:e.files.map((e=>({oldUri:n(e.oldUri),newUri:n(e.newUri)})))}},asDidDeleteFilesParams:function(e){return{files:e.files.map((e=>({uri:n(e)})))}},asWillCreateFilesParams:function(e){return{files:e.files.map((e=>({uri:n(e)})))}},asWillRenameFilesParams:function(e){return{files:e.files.map((e=>({oldUri:n(e.oldUri),newUri:n(e.newUri)})))}},asWillDeleteFilesParams:function(e){return{files:e.files.map((e=>({uri:n(e)})))}},asTextDocumentPositionParams:function(e,n){return{textDocument:E(e),position:I(n)}},asCompletionParams:function(e,n,t){return{textDocument:E(e),position:I(n),context:{triggerKind:S(t.triggerKind),triggerCharacter:t.triggerCharacter}}},asSignatureHelpParams:function(e,n,t){return{textDocument:E(e),position:I(n),context:{isRetrigger:t.isRetrigger,triggerCharacter:t.triggerCharacter,triggerKind:y(t.triggerKind),activeSignatureHelp:(r=t.activeSignatureHelp,void 0===r?r:{signatures:(i=r.signatures,i.map(v)),activeSignature:r.activeSignature,activeParameter:r.activeParameter})}};var r,i},asWorkerPosition:I,asRange:_,asPosition:C,asPositions:function(e,n){return a.map(e,C,n)},asLocation:b,asDiagnosticSeverity:O,asDiagnosticTag:D,asDiagnostic:w,asDiagnostics:L,asCompletionItem:function(e,n=!1){let t,a;o.string(e.label)?t=e.label:(t=e.label.label,!n||void 0===e.label.detail&&void 0===e.label.description||(a={detail:e.label.detail,description:e.label.description}));let l={label:t};void 0!==a&&(l.labelDetails=a);let c=e instanceof s.default?e:void 0;var u,d;e.detail&&(l.detail=e.detail),e.documentation&&(c&&"$string"!==c.documentationFormat?l.documentation=function(e,n){switch(e){case"$string":return n;case i.MarkupKind.PlainText:return{kind:e,value:n};case i.MarkupKind.Markdown:return{kind:e,value:n.value};default:return`Unsupported Markup content received. Kind is: ${e}`}}(c.documentationFormat,e.documentation):l.documentation=e.documentation),e.filterText&&(l.filterText=e.filterText),function(e,n){let t,o,a=i.InsertTextFormat.PlainText;n.textEdit?(t=n.textEdit.newText,o=n.textEdit.range):n.insertText instanceof r.SnippetString?(a=i.InsertTextFormat.Snippet,t=n.insertText.value):t=n.insertText,n.range&&(o=n.range),e.insertTextFormat=a,n.fromEdit&&void 0!==t&&void 0!==o?e.textEdit=function(e,n){return g.is(n)?i.InsertReplaceEdit.create(e,_(n.inserting),_(n.replacing)):{newText:e,range:_(n)}}(t,o):e.insertText=t}(l,e),o.number(e.kind)&&(l.kind=(u=e.kind,void 0!==(d=c&&c.originalItemKind)?d:u+1)),e.sortText&&(l.sortText=e.sortText),e.additionalTextEdits&&(l.additionalTextEdits=k(e.additionalTextEdits)),e.commitCharacters&&(l.commitCharacters=e.commitCharacters.slice()),e.command&&(l.command=U(e.command)),!0!==e.preselect&&!1!==e.preselect||(l.preselect=e.preselect);const h=function(e){if(void 0===e)return e;const n=[];for(let t of e){const e=x(t);void 0!==e&&n.push(e)}return n}(e.tags);if(c){if(void 0!==c.data&&(l.data=c.data),!0===c.deprecated||!1===c.deprecated){if(!0===c.deprecated&&void 0!==h&&h.length>0){const e=h.indexOf(r.CompletionItemTag.Deprecated);-1!==e&&h.splice(e,1)}l.deprecated=c.deprecated}void 0!==c.insertTextMode&&(l.insertTextMode=c.insertTextMode)}return void 0!==h&&h.length>0&&(l.tags=h),void 0===l.insertTextMode&&!0===e.keepWhitespace&&(l.insertTextMode=i.InsertTextMode.adjustIndentation),l},asTextEdit:M,asSymbolKind:P,asSymbolTag:F,asSymbolTags:G,asReferenceParams:function(e,n,t){return{textDocument:E(e),position:I(n),context:{includeDeclaration:t.includeDeclaration}}},asCodeAction:async function(e,n){let t=i.CodeAction.create(e.title);if(e instanceof u.default&&void 0!==e.data&&(t.data=e.data),void 0!==e.kind&&(t.kind=function(e){if(null!=e)return e.value}(e.kind)),void 0!==e.diagnostics&&(t.diagnostics=await L(e.diagnostics,n)),void 0!==e.edit)throw new Error("VS Code code actions can only be converted to a protocol code action without an edit.");return void 0!==e.command&&(t.command=U(e.command)),void 0!==e.isPreferred&&(t.isPreferred=e.isPreferred),void 0!==e.disabled&&(t.disabled={reason:e.disabled.reason}),t},asCodeActionContext:async function(e,n){if(null==e)return e;let t;return e.only&&o.string(e.only.value)&&(t=[e.only.value]),i.CodeActionContext.create(await L(e.diagnostics,n),t,function(e){switch(e){case r.CodeActionTriggerKind.Invoke:return i.CodeActionTriggerKind.Invoked;case r.CodeActionTriggerKind.Automatic:return i.CodeActionTriggerKind.Automatic;default:return}}(e.triggerKind))},asInlineValueContext:function(e){return null==e?e:i.InlineValueContext.create(e.frameId,_(e.stoppedLocation))},asCommand:U,asCodeLens:function(e){let n=i.CodeLens.create(_(e.range));return e.command&&(n.command=U(e.command)),e instanceof l.default&&e.data&&(n.data=e.data),n},asFormattingOptions:function(e,n){const t={tabSize:e.tabSize,insertSpaces:e.insertSpaces};return n.trimTrailingWhitespace&&(t.trimTrailingWhitespace=!0),n.trimFinalNewlines&&(t.trimFinalNewlines=!0),n.insertFinalNewline&&(t.insertFinalNewline=!0),t},asDocumentSymbolParams:function(e){return{textDocument:E(e)}},asCodeLensParams:function(e){return{textDocument:E(e)}},asDocumentLink:function(e){let n=i.DocumentLink.create(_(e.range));e.target&&(n.target=t(e.target)),void 0!==e.tooltip&&(n.tooltip=e.tooltip);let r=e instanceof c.default?e:void 0;return r&&r.data&&(n.data=r.data),n},asDocumentLinkParams:function(e){return{textDocument:E(e)}},asCallHierarchyItem:function(e){const n={name:e.name,kind:P(e.kind),uri:t(e.uri),range:_(e.range),selectionRange:_(e.selectionRange)};return void 0!==e.detail&&e.detail.length>0&&(n.detail=e.detail),void 0!==e.tags&&(n.tags=G(e.tags)),e instanceof h.default&&void 0!==e.data&&(n.data=e.data),n},asTypeHierarchyItem:function(e){const n={name:e.name,kind:P(e.kind),uri:t(e.uri),range:_(e.range),selectionRange:_(e.selectionRange)};return void 0!==e.detail&&e.detail.length>0&&(n.detail=e.detail),void 0!==e.tags&&(n.tags=G(e.tags)),e instanceof p.default&&void 0!==e.data&&(n.data=e.data),n},asInlayHint:function(e){const n="string"==typeof e.label?e.label:e.label.map(H),t=i.InlayHint.create(C(e.position),n);return void 0!==e.kind&&(t.kind=e.kind),void 0!==e.textEdits&&(t.textEdits=k(e.textEdits)),void 0!==e.tooltip&&(t.tooltip=q(e.tooltip)),void 0!==e.paddingLeft&&(t.paddingLeft=e.paddingLeft),void 0!==e.paddingRight&&(t.paddingRight=e.paddingRight),e instanceof m.default&&void 0!==e.data&&(t.data=e.data),t},asWorkspaceSymbol:function(e){const t=e instanceof f.default?{name:e.name,kind:P(e.kind),location:e.hasRange?b(e.location):{uri:n(e.location.uri)},data:e.data}:{name:e.name,kind:P(e.kind),location:b(e.location)};return void 0!==e.tags&&(t.tags=G(e.tags)),""!==e.containerName&&(t.containerName=e.containerName),t}}}},7711:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.CodeLensFeature=void 0;const r=t(9496),i=t(273),o=t(1980),a=t(8909);class s extends a.TextDocumentLanguageFeature{constructor(e){super(e,i.CodeLensRequest.type)}fillClientCapabilities(e){(0,a.ensure)((0,a.ensure)(e,"textDocument"),"codeLens").dynamicRegistration=!0,(0,a.ensure)((0,a.ensure)(e,"workspace"),"codeLens").refreshSupport=!0}initialize(e,n){this._client.onRequest(i.CodeLensRefreshRequest.type,(async()=>{for(const e of this.getAllProviders())e.onDidChangeCodeLensEmitter.fire()}));const t=this.getRegistrationOptions(n,e.codeLensProvider);t&&this.register({id:o.generateUuid(),registerOptions:t})}registerLanguageProvider(e){const n=e.documentSelector,t=new r.EventEmitter,o={onDidChangeCodeLenses:t.event,provideCodeLenses:(e,n)=>{const t=this._client,r=(e,n)=>t.sendRequest(i.CodeLensRequest.type,t.code2ProtocolConverter.asCodeLensParams(e),n).then((e=>n.isCancellationRequested?null:t.protocol2CodeConverter.asCodeLenses(e,n)),(e=>t.handleFailedRequest(i.CodeLensRequest.type,n,e,null))),o=t.middleware;return o.provideCodeLenses?o.provideCodeLenses(e,n,r):r(e,n)},resolveCodeLens:e.resolveProvider?(e,n)=>{const t=this._client,r=(e,n)=>t.sendRequest(i.CodeLensResolveRequest.type,t.code2ProtocolConverter.asCodeLens(e),n).then((r=>n.isCancellationRequested?e:t.protocol2CodeConverter.asCodeLens(r)),(r=>t.handleFailedRequest(i.CodeLensResolveRequest.type,n,r,e))),o=t.middleware;return o.resolveCodeLens?o.resolveCodeLens(e,n,r):r(e,n)}:void 0};return[r.languages.registerCodeLensProvider(this._client.protocol2CodeConverter.asDocumentSelector(n),o),{provider:o,onDidChangeCodeLensEmitter:t}]}}n.CodeLensFeature=s},3069:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.ColorProviderFeature=void 0;const r=t(9496),i=t(273),o=t(8909);class a extends o.TextDocumentLanguageFeature{constructor(e){super(e,i.DocumentColorRequest.type)}fillClientCapabilities(e){(0,o.ensure)((0,o.ensure)(e,"textDocument"),"colorProvider").dynamicRegistration=!0}initialize(e,n){let[t,r]=this.getRegistration(n,e.colorProvider);t&&r&&this.register({id:t,registerOptions:r})}registerLanguageProvider(e){const n=e.documentSelector,t={provideColorPresentations:(e,n,t)=>{const r=this._client,o=(e,n,t)=>{const o={color:e,textDocument:r.code2ProtocolConverter.asTextDocumentIdentifier(n.document),range:r.code2ProtocolConverter.asRange(n.range)};return r.sendRequest(i.ColorPresentationRequest.type,o,t).then((e=>t.isCancellationRequested?null:this._client.protocol2CodeConverter.asColorPresentations(e,t)),(e=>r.handleFailedRequest(i.ColorPresentationRequest.type,t,e,null)))},a=r.middleware;return a.provideColorPresentations?a.provideColorPresentations(e,n,t,o):o(e,n,t)},provideDocumentColors:(e,n)=>{const t=this._client,r=(e,n)=>{const r={textDocument:t.code2ProtocolConverter.asTextDocumentIdentifier(e)};return t.sendRequest(i.DocumentColorRequest.type,r,n).then((e=>n.isCancellationRequested?null:this._client.protocol2CodeConverter.asColorInformations(e,n)),(e=>t.handleFailedRequest(i.DocumentColorRequest.type,n,e,null)))},o=t.middleware;return o.provideDocumentColors?o.provideDocumentColors(e,n,r):r(e,n)}};return[r.languages.registerColorProvider(this._client.protocol2CodeConverter.asDocumentSelector(n),t),t]}}n.ColorProviderFeature=a},1435:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.CompletionItemFeature=void 0;const r=t(9496),i=t(273),o=t(8909),a=t(1980),s=[i.CompletionItemKind.Text,i.CompletionItemKind.Method,i.CompletionItemKind.Function,i.CompletionItemKind.Constructor,i.CompletionItemKind.Field,i.CompletionItemKind.Variable,i.CompletionItemKind.Class,i.CompletionItemKind.Interface,i.CompletionItemKind.Module,i.CompletionItemKind.Property,i.CompletionItemKind.Unit,i.CompletionItemKind.Value,i.CompletionItemKind.Enum,i.CompletionItemKind.Keyword,i.CompletionItemKind.Snippet,i.CompletionItemKind.Color,i.CompletionItemKind.File,i.CompletionItemKind.Reference,i.CompletionItemKind.Folder,i.CompletionItemKind.EnumMember,i.CompletionItemKind.Constant,i.CompletionItemKind.Struct,i.CompletionItemKind.Event,i.CompletionItemKind.Operator,i.CompletionItemKind.TypeParameter];class l extends o.TextDocumentLanguageFeature{constructor(e){super(e,i.CompletionRequest.type),this.labelDetailsSupport=new Map}fillClientCapabilities(e){let n=(0,o.ensure)((0,o.ensure)(e,"textDocument"),"completion");n.dynamicRegistration=!0,n.contextSupport=!0,n.completionItem={snippetSupport:!0,commitCharactersSupport:!0,documentationFormat:[i.MarkupKind.Markdown,i.MarkupKind.PlainText],deprecatedSupport:!0,preselectSupport:!0,tagSupport:{valueSet:[i.CompletionItemTag.Deprecated]},insertReplaceSupport:!0,resolveSupport:{properties:["documentation","detail","additionalTextEdits"]},insertTextModeSupport:{valueSet:[i.InsertTextMode.asIs,i.InsertTextMode.adjustIndentation]},labelDetailsSupport:!0},n.insertTextMode=i.InsertTextMode.adjustIndentation,n.completionItemKind={valueSet:s},n.completionList={itemDefaults:["commitCharacters","editRange","insertTextFormat","insertTextMode"]}}initialize(e,n){const t=this.getRegistrationOptions(n,e.completionProvider);t&&this.register({id:a.generateUuid(),registerOptions:t})}registerLanguageProvider(e,n){this.labelDetailsSupport.set(n,!!e.completionItem?.labelDetailsSupport);const t=e.triggerCharacters??[],o=e.allCommitCharacters,a=e.documentSelector,s={provideCompletionItems:(e,n,t,r)=>{const a=this._client,s=this._client.middleware,l=(e,n,t,r)=>a.sendRequest(i.CompletionRequest.type,a.code2ProtocolConverter.asCompletionParams(e,n,t),r).then((e=>r.isCancellationRequested?null:a.protocol2CodeConverter.asCompletionResult(e,o,r)),(e=>a.handleFailedRequest(i.CompletionRequest.type,r,e,null)));return s.provideCompletionItem?s.provideCompletionItem(e,n,r,t,l):l(e,n,r,t)},resolveCompletionItem:e.resolveProvider?(e,t)=>{const r=this._client,o=this._client.middleware,a=(e,t)=>r.sendRequest(i.CompletionResolveRequest.type,r.code2ProtocolConverter.asCompletionItem(e,!!this.labelDetailsSupport.get(n)),t).then((e=>t.isCancellationRequested?null:r.protocol2CodeConverter.asCompletionItem(e)),(n=>r.handleFailedRequest(i.CompletionResolveRequest.type,t,n,e)));return o.resolveCompletionItem?o.resolveCompletionItem(e,t,a):a(e,t)}:void 0};return[r.languages.registerCompletionItemProvider(this._client.protocol2CodeConverter.asDocumentSelector(a),s,...t),s]}}n.CompletionItemFeature=l},6495:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.SyncConfigurationFeature=n.toJSONObject=n.ConfigurationFeature=void 0;const r=t(9496),i=t(273),o=t(9763),a=t(1980),s=t(8909);function l(e){if(e){if(Array.isArray(e))return e.map(l);if("object"==typeof e){const n=Object.create(null);for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=l(e[t]));return n}}return e}n.ConfigurationFeature=class{constructor(e){this._client=e}getState(){return{kind:"static"}}fillClientCapabilities(e){e.workspace=e.workspace||{},e.workspace.configuration=!0}initialize(){let e=this._client;e.onRequest(i.ConfigurationRequest.type,((n,t)=>{let r=e=>{let n=[];for(let t of e.items){let e=void 0!==t.scopeUri&&null!==t.scopeUri?this._client.protocol2CodeConverter.asUri(t.scopeUri):void 0;n.push(this.getConfiguration(e,null!==t.section?t.section:void 0))}return n},i=e.middleware.workspace;return i&&i.configuration?i.configuration(n,t,r):r(n)}))}getConfiguration(e,n){let t=null;if(n){let i=n.lastIndexOf(".");if(-1===i)t=l(r.workspace.getConfiguration(void 0,e).get(n));else{let o=r.workspace.getConfiguration(n.substr(0,i),e);o&&(t=l(o.get(n.substr(i+1))))}}else{let n=r.workspace.getConfiguration(void 0,e);t={};for(let e of Object.keys(n))n.has(e)&&(t[e]=l(n.get(e)))}return void 0===t&&(t=null),t}dispose(){}},n.toJSONObject=l,n.SyncConfigurationFeature=class{constructor(e){this._client=e,this._listeners=new Map}getState(){return{kind:"workspace",id:this.registrationType.method,registrations:this._listeners.size>0}}get registrationType(){return i.DidChangeConfigurationNotification.type}fillClientCapabilities(e){(0,s.ensure)((0,s.ensure)(e,"workspace"),"didChangeConfiguration").dynamicRegistration=!0}initialize(){let e=this._client.clientOptions.synchronize?.configurationSection;void 0!==e&&this.register({id:a.generateUuid(),registerOptions:{section:e}})}register(e){let n=r.workspace.onDidChangeConfiguration((n=>{this.onDidChangeConfiguration(e.registerOptions.section,n)}));this._listeners.set(e.id,n),void 0!==e.registerOptions.section&&this.onDidChangeConfiguration(e.registerOptions.section,void 0)}unregister(e){let n=this._listeners.get(e);n&&(this._listeners.delete(e),n.dispose())}dispose(){for(const e of this._listeners.values())e.dispose();this._listeners.clear()}onDidChangeConfiguration(e,n){let t;if(t=o.string(e)?[e]:e,void 0!==t&&void 0!==n&&!t.some((e=>n.affectsConfiguration(e))))return;const r=async e=>void 0===e?this._client.sendNotification(i.DidChangeConfigurationNotification.type,{settings:null}):this._client.sendNotification(i.DidChangeConfigurationNotification.type,{settings:this.extractSettingsInformation(e)});let a=this._client.middleware.workspace?.didChangeConfiguration;(a?a(t,r):r(t)).catch((e=>{this._client.error(`Sending notification ${i.DidChangeConfigurationNotification.type.method} failed`,e)}))}extractSettingsInformation(e){function n(e,n){let t=e;for(let e=0;e<n.length-1;e++){let r=t[n[e]];r||(r=Object.create(null),t[n[e]]=r),t=r}return t}let t=this._client.clientOptions.workspaceFolder?this._client.clientOptions.workspaceFolder.uri:void 0,i=Object.create(null);for(let o=0;o<e.length;o++){let a=e[o],s=a.indexOf("."),c=null;if(c=s>=0?r.workspace.getConfiguration(a.substr(0,s),t).get(a.substr(s+1)):r.workspace.getConfiguration(void 0,t).get(a),c){let t=e[o].split(".");n(i,t)[t[t.length-1]]=l(c)}}return i}}},707:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.DeclarationFeature=void 0;const r=t(9496),i=t(273),o=t(8909);class a extends o.TextDocumentLanguageFeature{constructor(e){super(e,i.DeclarationRequest.type)}fillClientCapabilities(e){const n=(0,o.ensure)((0,o.ensure)(e,"textDocument"),"declaration");n.dynamicRegistration=!0,n.linkSupport=!0}initialize(e,n){const[t,r]=this.getRegistration(n,e.declarationProvider);t&&r&&this.register({id:t,registerOptions:r})}registerLanguageProvider(e){const n=e.documentSelector,t={provideDeclaration:(e,n,t)=>{const r=this._client,o=(e,n,t)=>r.sendRequest(i.DeclarationRequest.type,r.code2ProtocolConverter.asTextDocumentPositionParams(e,n),t).then((e=>t.isCancellationRequested?null:r.protocol2CodeConverter.asDeclarationResult(e,t)),(e=>r.handleFailedRequest(i.DeclarationRequest.type,t,e,null))),a=r.middleware;return a.provideDeclaration?a.provideDeclaration(e,n,t,o):o(e,n,t)}};return[this.registerProvider(n,t),t]}registerProvider(e,n){return r.languages.registerDeclarationProvider(this._client.protocol2CodeConverter.asDocumentSelector(e),n)}}n.DeclarationFeature=a},122:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.DefinitionFeature=void 0;const r=t(9496),i=t(273),o=t(8909),a=t(1980);class s extends o.TextDocumentLanguageFeature{constructor(e){super(e,i.DefinitionRequest.type)}fillClientCapabilities(e){let n=(0,o.ensure)((0,o.ensure)(e,"textDocument"),"definition");n.dynamicRegistration=!0,n.linkSupport=!0}initialize(e,n){const t=this.getRegistrationOptions(n,e.definitionProvider);t&&this.register({id:a.generateUuid(),registerOptions:t})}registerLanguageProvider(e){const n=e.documentSelector,t={provideDefinition:(e,n,t)=>{const r=this._client,o=(e,n,t)=>r.sendRequest(i.DefinitionRequest.type,r.code2ProtocolConverter.asTextDocumentPositionParams(e,n),t).then((e=>t.isCancellationRequested?null:r.protocol2CodeConverter.asDefinitionResult(e,t)),(e=>r.handleFailedRequest(i.DefinitionRequest.type,t,e,null))),a=r.middleware;return a.provideDefinition?a.provideDefinition(e,n,t,o):o(e,n,t)}};return[this.registerProvider(n,t),t]}registerProvider(e,n){return r.languages.registerDefinitionProvider(this._client.protocol2CodeConverter.asDocumentSelector(e),n)}}n.DefinitionFeature=s},2570:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.DiagnosticFeature=n.DiagnosticPullMode=n.vsdiag=void 0;const r=t(1171),i=t(9496),o=t(273),a=t(1980),s=t(8909);function l(e,n){return void 0===e[n]&&(e[n]={}),e[n]}var c,u,d,h;!function(e){let n;!function(e){e.full="full",e.unChanged="unChanged"}(n=e.DocumentDiagnosticReportKind||(e.DocumentDiagnosticReportKind={}))}(c=n.vsdiag||(n.vsdiag={})),function(e){e.onType="onType",e.onSave="onSave"}(u=n.DiagnosticPullMode||(n.DiagnosticPullMode={})),function(e){e.active="open",e.reschedule="reschedule",e.outDated="drop"}(d||(d={}));class p{constructor(){this.open=new Set;const e=()=>{this.open.clear();for(const e of i.window.tabGroups.all)for(const n of e.tabs){const e=n.input;e instanceof i.TabInputText?this.open.add(e.uri.toString()):e instanceof i.TabInputTextDiff&&this.open.add(e.modified.toString())}};e(),void 0!==i.window.tabGroups.onDidChangeTabGroups?this.disposable=i.window.tabGroups.onDidChangeTabGroups(e):this.disposable={dispose:()=>{}}}dispose(){this.disposable.dispose()}isActive(e){return e instanceof i.Uri?i.window.activeTextEditor?.document.uri===e:i.window.activeTextEditor?.document===e}isVisible(e){const n=e instanceof i.Uri?e:e.uri;return this.open.has(n.toString())}getTabResources(){const e=[];for(const n of i.window.tabGroups.all)for(const t of n.tabs){const n=t.input;n instanceof i.TabInputText?e.push(n.uri):n instanceof i.TabInputTextDiff&&e.push(n.modified)}return e}}!function(e){e[e.document=1]="document",e[e.workspace=2]="workspace"}(h||(h={}));class f{constructor(){this.documentPullStates=new Map,this.workspacePullStates=new Map}track(e,n,t){const r=e===h.document?this.documentPullStates:this.workspacePullStates,[o,a,s]=n instanceof i.Uri?[n.toString(),n,t]:[n.uri.toString(),n.uri,n.version];let l=r.get(o);return void 0===l&&(l={document:a,pulledVersion:s,resultId:void 0},r.set(o,l)),l}update(e,n,t,r){const o=e===h.document?this.documentPullStates:this.workspacePullStates,[a,s,l,c]=n instanceof i.Uri?[n.toString(),n,t,r]:[n.uri.toString(),n.uri,n.version,t];let u=o.get(a);void 0===u?(u={document:s,pulledVersion:l,resultId:c},o.set(a,u)):(u.pulledVersion=l,u.resultId=c)}unTrack(e,n){const t=n instanceof i.Uri?n.toString():n.uri.toString();(e===h.document?this.documentPullStates:this.workspacePullStates).delete(t)}tracks(e,n){const t=n instanceof i.Uri?n.toString():n.uri.toString();return(e===h.document?this.documentPullStates:this.workspacePullStates).has(t)}getResultId(e,n){const t=n instanceof i.Uri?n.toString():n.uri.toString();return(e===h.document?this.documentPullStates:this.workspacePullStates).get(t)?.resultId}getAllResultIds(){const e=[];for(let[n,t]of this.workspacePullStates)this.documentPullStates.has(n)&&(t=this.documentPullStates.get(n)),void 0!==t.resultId&&e.push({uri:n,value:t.resultId});return e}}class m{constructor(e,n,t){this.client=e,this.tabs=n,this.options=t,this.isDisposed=!1,this.onDidChangeDiagnosticsEmitter=new i.EventEmitter,this.provider=this.createProvider(),this.diagnostics=i.languages.createDiagnosticCollection(t.identifier),this.openRequests=new Map,this.documentStates=new f,this.workspaceErrorCounter=0}knows(e,n){return this.documentStates.tracks(e,n)}pull(e,n){if(this.isDisposed)return;const t=e instanceof i.Uri?e:e.uri;this.pullAsync(e).then((()=>{n&&n()}),(e=>{this.client.error(`Document pull failed for text document ${t.toString()}`,e,!1)}))}async pullAsync(e,n){if(this.isDisposed)return;const t=e instanceof i.Uri,r=t?e:e.uri,a=r.toString();n=t?n:e.version;const l=this.openRequests.get(a),u=t?this.documentStates.track(h.document,e,n):this.documentStates.track(h.document,e);if(void 0===l){const t=new i.CancellationTokenSource;let l,p;this.openRequests.set(a,{state:d.active,document:e,version:n,tokenSource:t});try{l=await this.provider.provideDiagnostics(e,u.resultId,t.token)??{kind:c.DocumentDiagnosticReportKind.full,items:[]}}catch(n){if(n instanceof s.LSPCancellationError&&o.DiagnosticServerCancellationData.is(n.data)&&!1===n.data.retriggerRequest&&(p={state:d.outDated,document:e}),!(void 0===p&&n instanceof i.CancellationError))throw n;p={state:d.reschedule,document:e}}if(p=p??this.openRequests.get(a),void 0===p)return this.client.error(`Lost request state in diagnostic pull model. Clearing diagnostics for ${a}`),void this.diagnostics.delete(r);if(this.openRequests.delete(a),!this.tabs.isVisible(e))return void this.documentStates.unTrack(h.document,e);if(p.state===d.outDated)return;void 0!==l&&(l.kind===c.DocumentDiagnosticReportKind.full&&this.diagnostics.set(r,l.items),u.pulledVersion=n,u.resultId=l.resultId),p.state===d.reschedule&&this.pull(e)}else l.state===d.active?(l.tokenSource.cancel(),this.openRequests.set(a,{state:d.reschedule,document:l.document})):l.state===d.outDated&&this.openRequests.set(a,{state:d.reschedule,document:l.document})}cleanupPull(e){const n=e instanceof i.Uri?e:e.uri,t=n.toString(),r=this.openRequests.get(t);this.options.workspaceDiagnostics||this.options.interFileDependencies?void 0!==r?this.openRequests.set(t,{state:d.reschedule,document:e}):this.pull(e):(void 0!==r&&(r.state===d.active&&r.tokenSource.cancel(),this.openRequests.set(t,{state:d.outDated,document:e})),this.diagnostics.delete(n))}pullWorkspace(){this.isDisposed||this.pullWorkspaceAsync().then((()=>{this.workspaceTimeout=(0,o.RAL)().timer.setTimeout((()=>{this.pullWorkspace()}),2e3)}),(e=>{e instanceof s.LSPCancellationError||o.DiagnosticServerCancellationData.is(e.data)||(this.client.error("Workspace diagnostic pull failed.",e,!1),this.workspaceErrorCounter++),this.workspaceErrorCounter<=5&&(this.workspaceTimeout=(0,o.RAL)().timer.setTimeout((()=>{this.pullWorkspace()}),2e3))}))}async pullWorkspaceAsync(){if(!this.provider.provideWorkspaceDiagnostics||this.isDisposed)return;void 0!==this.workspaceCancellation&&(this.workspaceCancellation.cancel(),this.workspaceCancellation=void 0),this.workspaceCancellation=new i.CancellationTokenSource;const e=this.documentStates.getAllResultIds().map((e=>({uri:this.client.protocol2CodeConverter.asUri(e.uri),value:e.value})));await this.provider.provideWorkspaceDiagnostics(e,this.workspaceCancellation.token,(e=>{if(e&&!this.isDisposed)for(const n of e.items)n.kind===c.DocumentDiagnosticReportKind.full&&(this.documentStates.tracks(h.document,n.uri)||this.diagnostics.set(n.uri,n.items)),this.documentStates.update(h.workspace,n.uri,n.version??void 0,n.resultId)}))}createProvider(){const e={onDidChangeDiagnostics:this.onDidChangeDiagnosticsEmitter.event,provideDiagnostics:(e,n,t)=>{const r=(e,n,t)=>{const r={identifier:this.options.identifier,textDocument:{uri:this.client.code2ProtocolConverter.asUri(e instanceof i.Uri?e:e.uri)},previousResultId:n};return!0!==this.isDisposed&&this.client.isRunning()?this.client.sendRequest(o.DocumentDiagnosticRequest.type,r,t).then((async e=>null==e||this.isDisposed||t.isCancellationRequested?{kind:c.DocumentDiagnosticReportKind.full,items:[]}:e.kind===o.DocumentDiagnosticReportKind.Full?{kind:c.DocumentDiagnosticReportKind.full,resultId:e.resultId,items:await this.client.protocol2CodeConverter.asDiagnostics(e.items,t)}:{kind:c.DocumentDiagnosticReportKind.unChanged,resultId:e.resultId}),(e=>this.client.handleFailedRequest(o.DocumentDiagnosticRequest.type,t,e,{kind:c.DocumentDiagnosticReportKind.full,items:[]}))):{kind:c.DocumentDiagnosticReportKind.full,items:[]}},a=this.client.middleware;return a.provideDiagnostics?a.provideDiagnostics(e,n,t,r):r(e,n,t)}};return this.options.workspaceDiagnostics&&(e.provideWorkspaceDiagnostics=(e,n,t)=>{const r=async e=>e.kind===o.DocumentDiagnosticReportKind.Full?{kind:c.DocumentDiagnosticReportKind.full,uri:this.client.protocol2CodeConverter.asUri(e.uri),resultId:e.resultId,version:e.version,items:await this.client.protocol2CodeConverter.asDiagnostics(e.items,n)}:{kind:c.DocumentDiagnosticReportKind.unChanged,uri:this.client.protocol2CodeConverter.asUri(e.uri),resultId:e.resultId,version:e.version},i=e=>{const n=[];for(const t of e)n.push({uri:this.client.code2ProtocolConverter.asUri(t.uri),value:t.value});return n},s=(e,n)=>{const s=(0,a.generateUuid)(),l=this.client.onProgress(o.WorkspaceDiagnosticRequest.partialResult,s,(async e=>{if(null==e)return void t(null);const n={items:[]};for(const t of e.items)try{n.items.push(await r(t))}catch(e){this.client.error("Converting workspace diagnostics failed.",e)}t(n)})),c={identifier:this.options.identifier,previousResultIds:i(e),partialResultToken:s};return!0!==this.isDisposed&&this.client.isRunning()?this.client.sendRequest(o.WorkspaceDiagnosticRequest.type,c,n).then((async e=>{if(n.isCancellationRequested)return{items:[]};const i={items:[]};for(const n of e.items)i.items.push(await r(n));return l.dispose(),t(i),{items:[]}}),(e=>(l.dispose(),this.client.handleFailedRequest(o.DocumentDiagnosticRequest.type,n,e,{items:[]})))):{items:[]}},l=this.client.middleware;return l.provideWorkspaceDiagnostics?l.provideWorkspaceDiagnostics(e,n,t,s):s(e,n)}),e}dispose(){this.isDisposed=!0,this.workspaceCancellation?.cancel(),this.workspaceTimeout?.dispose();for(const[e,n]of this.openRequests)n.state===d.active&&n.tokenSource.cancel(),this.openRequests.set(e,{state:d.outDated,document:n.document})}}class g{constructor(e){this.diagnosticRequestor=e,this.documents=new o.LinkedMap,this.isDisposed=!1}add(e){if(!0===this.isDisposed)return;const n=e instanceof i.Uri?e.toString():e.uri.toString();this.documents.has(n)||(this.documents.set(n,e,o.Touch.Last),this.trigger())}remove(e){const n=e instanceof i.Uri?e.toString():e.uri.toString();this.documents.has(n)&&(this.documents.delete(n),this.diagnosticRequestor.pull(e)),0===this.documents.size?this.stop():e===this.endDocument&&(this.endDocument=this.documents.last)}trigger(){!0!==this.isDisposed&&(void 0===this.intervalHandle?(this.endDocument=this.documents.last,this.intervalHandle=(0,o.RAL)().timer.setInterval((()=>{const e=this.documents.first;if(void 0!==e){const n=e instanceof i.Uri?e.toString():e.uri.toString();this.diagnosticRequestor.pull(e),this.documents.set(n,e,o.Touch.Last),e===this.endDocument&&this.stop()}}),200)):this.endDocument=this.documents.last)}dispose(){this.isDisposed=!0,this.stop(),this.documents.clear()}stop(){this.intervalHandle?.dispose(),this.intervalHandle=void 0,this.endDocument=void 0}}class E{constructor(e,n,t){const a=e.clientOptions.diagnosticPullOptions??{onChange:!0,onSave:!1},s=e.protocol2CodeConverter.asDocumentSelector(t.documentSelector),l=[],c=e=>e instanceof i.Uri?(e=>{const n=t.documentSelector;if(void 0!==a.match)return a.match(n,e);for(const t of n)if(o.TextDocumentFilter.is(t)){if("string"==typeof t)return!1;if(void 0!==t.language&&"*"!==t.language)return!1;if(void 0!==t.scheme&&"*"!==t.scheme&&t.scheme!==e.scheme)return!1;if(void 0!==t.pattern){const n=new r.Minimatch(t.pattern,{noext:!0});if(!n.makeRe())return!1;if(!n.match(e.fsPath))return!1}}return!0})(e):i.languages.match(s,e)>0&&n.isVisible(e),d=e=>e instanceof i.Uri?this.activeTextDocument?.uri.toString()===e.toString():this.activeTextDocument===e;this.diagnosticRequestor=new m(e,n,t),this.backgroundScheduler=new g(this.diagnosticRequestor);const p=e=>{c(e)&&t.interFileDependencies&&!d(e)&&this.backgroundScheduler.add(e)};this.activeTextDocument=i.window.activeTextEditor?.document,i.window.onDidChangeActiveTextEditor((e=>{const n=this.activeTextDocument;this.activeTextDocument=e?.document,void 0!==n&&p(n),void 0!==this.activeTextDocument&&this.backgroundScheduler.remove(this.activeTextDocument)}));const f=e.getFeature(o.DidOpenTextDocumentNotification.method);l.push(f.onNotificationSent((e=>{const n=e.original;c(n)&&this.diagnosticRequestor.pull(n,(()=>{p(n)}))})));const E=new Set;for(const e of i.workspace.textDocuments)c(e)&&(this.diagnosticRequestor.pull(e,(()=>{p(e)})),E.add(e.uri.toString()));if(!0===a.onTabs)for(const e of n.getTabResources())!E.has(e.toString())&&c(e)&&this.diagnosticRequestor.pull(e,(()=>{p(e)}));if(!0===a.onChange){const n=e.getFeature(o.DidChangeTextDocumentNotification.method);l.push(n.onNotificationSent((async e=>{const n=e.original.document;(void 0===a.filter||!a.filter(n,u.onType))&&this.diagnosticRequestor.knows(h.document,n)&&e.original.contentChanges.length>0&&this.diagnosticRequestor.pull(n,(()=>{this.backgroundScheduler.trigger()}))})))}if(!0===a.onSave){const n=e.getFeature(o.DidSaveTextDocumentNotification.method);l.push(n.onNotificationSent((e=>{const n=e.original;void 0!==a.filter&&a.filter(n,u.onSave)||!this.diagnosticRequestor.knows(h.document,n)||this.diagnosticRequestor.pull(e.original,(()=>{this.backgroundScheduler.trigger()}))})))}const T=e.getFeature(o.DidCloseTextDocumentNotification.method);l.push(T.onNotificationSent((e=>{const n=e.original;this.diagnosticRequestor.cleanupPull(n),this.backgroundScheduler.remove(n)}))),this.diagnosticRequestor.onDidChangeDiagnosticsEmitter.event((()=>{for(const e of i.workspace.textDocuments)c(e)&&this.diagnosticRequestor.pull(e)})),!0===t.workspaceDiagnostics&&"da348dc5-c30a-4515-9d98-31ff3be38d14"!==t.identifier&&this.diagnosticRequestor.pullWorkspace(),this.disposable=i.Disposable.from(...l,this.backgroundScheduler,this.diagnosticRequestor)}get onDidChangeDiagnosticsEmitter(){return this.diagnosticRequestor.onDidChangeDiagnosticsEmitter}get diagnostics(){return this.diagnosticRequestor.provider}}class T extends s.TextDocumentLanguageFeature{constructor(e){super(e,o.DocumentDiagnosticRequest.type)}fillClientCapabilities(e){let n=l(l(e,"textDocument"),"diagnostic");n.dynamicRegistration=!0,n.relatedDocumentSupport=!1,l(l(e,"workspace"),"diagnostics").refreshSupport=!0}initialize(e,n){this._client.onRequest(o.DiagnosticRefreshRequest.type,(async()=>{for(const e of this.getAllProviders())e.onDidChangeDiagnosticsEmitter.fire()}));let[t,r]=this.getRegistration(n,e.diagnosticProvider);t&&r&&this.register({id:t,registerOptions:r})}dispose(){void 0!==this.tabs&&(this.tabs.dispose(),this.tabs=void 0),super.dispose()}registerLanguageProvider(e){void 0===this.tabs&&(this.tabs=new p);const n=new E(this._client,this.tabs,e);return[n.disposable,n]}}n.DiagnosticFeature=T},9959:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.DocumentHighlightFeature=void 0;const r=t(9496),i=t(273),o=t(8909),a=t(1980);class s extends o.TextDocumentLanguageFeature{constructor(e){super(e,i.DocumentHighlightRequest.type)}fillClientCapabilities(e){(0,o.ensure)((0,o.ensure)(e,"textDocument"),"documentHighlight").dynamicRegistration=!0}initialize(e,n){const t=this.getRegistrationOptions(n,e.documentHighlightProvider);t&&this.register({id:a.generateUuid(),registerOptions:t})}registerLanguageProvider(e){const n=e.documentSelector,t={provideDocumentHighlights:(e,n,t)=>{const r=this._client,o=(e,n,t)=>r.sendRequest(i.DocumentHighlightRequest.type,r.code2ProtocolConverter.asTextDocumentPositionParams(e,n),t).then((e=>t.isCancellationRequested?null:r.protocol2CodeConverter.asDocumentHighlights(e,t)),(e=>r.handleFailedRequest(i.DocumentHighlightRequest.type,t,e,null))),a=r.middleware;return a.provideDocumentHighlights?a.provideDocumentHighlights(e,n,t,o):o(e,n,t)}};return[r.languages.registerDocumentHighlightProvider(this._client.protocol2CodeConverter.asDocumentSelector(n),t),t]}}n.DocumentHighlightFeature=s},3471:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.DocumentLinkFeature=void 0;const r=t(9496),i=t(273),o=t(8909),a=t(1980);class s extends o.TextDocumentLanguageFeature{constructor(e){super(e,i.DocumentLinkRequest.type)}fillClientCapabilities(e){const n=(0,o.ensure)((0,o.ensure)(e,"textDocument"),"documentLink");n.dynamicRegistration=!0,n.tooltipSupport=!0}initialize(e,n){const t=this.getRegistrationOptions(n,e.documentLinkProvider);t&&this.register({id:a.generateUuid(),registerOptions:t})}registerLanguageProvider(e){const n=e.documentSelector,t={provideDocumentLinks:(e,n)=>{const t=this._client,r=(e,n)=>t.sendRequest(i.DocumentLinkRequest.type,t.code2ProtocolConverter.asDocumentLinkParams(e),n).then((e=>n.isCancellationRequested?null:t.protocol2CodeConverter.asDocumentLinks(e,n)),(e=>t.handleFailedRequest(i.DocumentLinkRequest.type,n,e,null))),o=t.middleware;return o.provideDocumentLinks?o.provideDocumentLinks(e,n,r):r(e,n)},resolveDocumentLink:e.resolveProvider?(e,n)=>{const t=this._client;let r=(e,n)=>t.sendRequest(i.DocumentLinkResolveRequest.type,t.code2ProtocolConverter.asDocumentLink(e),n).then((r=>n.isCancellationRequested?e:t.protocol2CodeConverter.asDocumentLink(r)),(r=>t.handleFailedRequest(i.DocumentLinkResolveRequest.type,n,r,e)));const o=t.middleware;return o.resolveDocumentLink?o.resolveDocumentLink(e,n,r):r(e,n)}:void 0};return[r.languages.registerDocumentLinkProvider(this._client.protocol2CodeConverter.asDocumentSelector(n),t),t]}}n.DocumentLinkFeature=s},2483:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.DocumentSymbolFeature=n.SupportedSymbolTags=n.SupportedSymbolKinds=void 0;const r=t(9496),i=t(273),o=t(8909),a=t(1980);n.SupportedSymbolKinds=[i.SymbolKind.File,i.SymbolKind.Module,i.SymbolKind.Namespace,i.SymbolKind.Package,i.SymbolKind.Class,i.SymbolKind.Method,i.SymbolKind.Property,i.SymbolKind.Field,i.SymbolKind.Constructor,i.SymbolKind.Enum,i.SymbolKind.Interface,i.SymbolKind.Function,i.SymbolKind.Variable,i.SymbolKind.Constant,i.SymbolKind.String,i.SymbolKind.Number,i.SymbolKind.Boolean,i.SymbolKind.Array,i.SymbolKind.Object,i.SymbolKind.Key,i.SymbolKind.Null,i.SymbolKind.EnumMember,i.SymbolKind.Struct,i.SymbolKind.Event,i.SymbolKind.Operator,i.SymbolKind.TypeParameter],n.SupportedSymbolTags=[i.SymbolTag.Deprecated];class s extends o.TextDocumentLanguageFeature{constructor(e){super(e,i.DocumentSymbolRequest.type)}fillClientCapabilities(e){let t=(0,o.ensure)((0,o.ensure)(e,"textDocument"),"documentSymbol");t.dynamicRegistration=!0,t.symbolKind={valueSet:n.SupportedSymbolKinds},t.hierarchicalDocumentSymbolSupport=!0,t.tagSupport={valueSet:n.SupportedSymbolTags},t.labelSupport=!0}initialize(e,n){const t=this.getRegistrationOptions(n,e.documentSymbolProvider);t&&this.register({id:a.generateUuid(),registerOptions:t})}registerLanguageProvider(e){const n=e.documentSelector,t={provideDocumentSymbols:(e,n)=>{const t=this._client,r=(e,n)=>t.sendRequest(i.DocumentSymbolRequest.type,t.code2ProtocolConverter.asDocumentSymbolParams(e),n).then((async e=>{if(n.isCancellationRequested||null==e)return null;if(0===e.length)return[];{const r=e[0];return i.DocumentSymbol.is(r)?await t.protocol2CodeConverter.asDocumentSymbols(e,n):await t.protocol2CodeConverter.asSymbolInformations(e,n)}}),(e=>t.handleFailedRequest(i.DocumentSymbolRequest.type,n,e,null))),o=t.middleware;return o.provideDocumentSymbols?o.provideDocumentSymbols(e,n,r):r(e,n)}},o=void 0!==e.label?{label:e.label}:void 0;return[r.languages.registerDocumentSymbolProvider(this._client.protocol2CodeConverter.asDocumentSelector(n),t,o),t]}}n.DocumentSymbolFeature=s},4849:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.ExecuteCommandFeature=void 0;const r=t(9496),i=t(273),o=t(1980),a=t(8909);n.ExecuteCommandFeature=class{constructor(e){this._client=e,this._commands=new Map}getState(){return{kind:"workspace",id:this.registrationType.method,registrations:this._commands.size>0}}get registrationType(){return i.ExecuteCommandRequest.type}fillClientCapabilities(e){(0,a.ensure)((0,a.ensure)(e,"workspace"),"executeCommand").dynamicRegistration=!0}initialize(e){e.executeCommandProvider&&this.register({id:o.generateUuid(),registerOptions:Object.assign({},e.executeCommandProvider)})}register(e){const n=this._client,t=n.middleware,o=(e,t)=>{let r={command:e,arguments:t};return n.sendRequest(i.ExecuteCommandRequest.type,r).then(void 0,(e=>n.handleFailedRequest(i.ExecuteCommandRequest.type,void 0,e,void 0)))};if(e.registerOptions.commands){const n=[];for(const i of e.registerOptions.commands)n.push(r.commands.registerCommand(i,((...e)=>t.executeCommand?t.executeCommand(i,e,o):o(i,e))));this._commands.set(e.id,n)}}unregister(e){let n=this._commands.get(e);n&&n.forEach((e=>e.dispose()))}dispose(){this._commands.forEach((e=>{e.forEach((e=>e.dispose()))})),this._commands.clear()}}},8909:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.WorkspaceFeature=n.TextDocumentLanguageFeature=n.TextDocumentEventFeature=n.DynamicDocumentFeature=n.DynamicFeature=n.StaticFeature=n.ensure=n.LSPCancellationError=void 0;const r=t(9496),i=t(273),o=t(9763),a=t(1980);class s extends r.CancellationError{constructor(e){super(),this.data=e}}n.LSPCancellationError=s,n.ensure=function(e,n){return void 0===e[n]&&(e[n]={}),e[n]},(n.StaticFeature||(n.StaticFeature={})).is=function(e){const n=e;return null!=n&&o.func(n.fillClientCapabilities)&&o.func(n.initialize)&&o.func(n.getState)&&o.func(n.dispose)&&(void 0===n.fillInitializeParams||o.func(n.fillInitializeParams))},(n.DynamicFeature||(n.DynamicFeature={})).is=function(e){const n=e;return null!=n&&o.func(n.fillClientCapabilities)&&o.func(n.initialize)&&o.func(n.getState)&&o.func(n.dispose)&&(void 0===n.fillInitializeParams||o.func(n.fillInitializeParams))&&o.func(n.register)&&o.func(n.unregister)&&void 0!==n.registrationType};class l{constructor(e){this._client=e}getState(){const e=this.getDocumentSelectors();let n=0;for(const t of e){n++;for(const e of r.workspace.textDocuments)if(r.languages.match(t,e)>0)return{kind:"document",id:this.registrationType.method,registrations:!0,matches:!0}}const t=n>0;return{kind:"document",id:this.registrationType.method,registrations:t,matches:!1}}}n.DynamicDocumentFeature=l,n.TextDocumentEventFeature=class extends l{constructor(e,n,t,i,o,a,s){super(e),this._event=n,this._type=t,this._middleware=i,this._createParams=o,this._textDocument=a,this._selectorFilter=s,this._selectors=new Map,this._onNotificationSent=new r.EventEmitter}static textDocumentFilter(e,n){for(const t of e)if(r.languages.match(t,n)>0)return!0;return!1}getStateInfo(){return[this._selectors.values(),!1]}getDocumentSelectors(){return this._selectors.values()}register(e){e.registerOptions.documentSelector&&(this._listener||(this._listener=this._event((e=>{this.callback(e).catch((e=>{this._client.error(`Sending document notification ${this._type.method} failed.`,e)}))}))),this._selectors.set(e.id,this._client.protocol2CodeConverter.asDocumentSelector(e.registerOptions.documentSelector)))}async callback(e){const n=async e=>{const n=this._createParams(e);await this._client.sendNotification(this._type,n).catch(),this.notificationSent(e,this._type,n)};if(this.matches(e)){const t=this._middleware();return t?t(e,(e=>n(e))):n(e)}}matches(e){return!this._client.hasDedicatedTextSynchronizationFeature(this._textDocument(e))&&(!this._selectorFilter||this._selectorFilter(this._selectors.values(),e))}get onNotificationSent(){return this._onNotificationSent.event}notificationSent(e,n,t){this._onNotificationSent.fire({original:e,type:n,params:t})}unregister(e){this._selectors.delete(e),0===this._selectors.size&&this._listener&&(this._listener.dispose(),this._listener=void 0)}dispose(){this._selectors.clear(),this._onNotificationSent.dispose(),this._listener&&(this._listener.dispose(),this._listener=void 0)}getProvider(e){for(const n of this._selectors.values())if(r.languages.match(n,e)>0)return{send:e=>this.callback(e)}}},n.TextDocumentLanguageFeature=class extends l{constructor(e,n){super(e),this._registrationType=n,this._registrations=new Map}*getDocumentSelectors(){for(const e of this._registrations.values()){const n=e.data.registerOptions.documentSelector;null!==n&&(yield this._client.protocol2CodeConverter.asDocumentSelector(n))}}get registrationType(){return this._registrationType}register(e){if(!e.registerOptions.documentSelector)return;let n=this.registerLanguageProvider(e.registerOptions,e.id);this._registrations.set(e.id,{disposable:n[0],data:e,provider:n[1]})}unregister(e){let n=this._registrations.get(e);void 0!==n&&n.disposable.dispose()}dispose(){this._registrations.forEach((e=>{e.disposable.dispose()})),this._registrations.clear()}getRegistration(e,n){if(!n)return[void 0,void 0];if(i.TextDocumentRegistrationOptions.is(n)){const t=i.StaticRegistrationOptions.hasId(n)?n.id:a.generateUuid(),r=n.documentSelector||e;if(r)return[t,Object.assign({},n,{documentSelector:r})]}else if(o.boolean(n)&&!0===n||i.WorkDoneProgressOptions.is(n)){if(!e)return[void 0,void 0];let t=o.boolean(n)&&!0===n?{documentSelector:e}:Object.assign({},n,{documentSelector:e});return[a.generateUuid(),t]}return[void 0,void 0]}getRegistrationOptions(e,n){if(e&&n)return o.boolean(n)&&!0===n?{documentSelector:e}:Object.assign({},n,{documentSelector:e})}getProvider(e){for(const n of this._registrations.values()){let t=n.data.registerOptions.documentSelector;if(null!==t&&r.languages.match(this._client.protocol2CodeConverter.asDocumentSelector(t),e)>0)return n.provider}}getAllProviders(){const e=[];for(const n of this._registrations.values())e.push(n.provider);return e}},n.WorkspaceFeature=class{constructor(e,n){this._client=e,this._registrationType=n,this._registrations=new Map}getState(){const e=this._registrations.size>0;return{kind:"workspace",id:this._registrationType.method,registrations:e}}get registrationType(){return this._registrationType}register(e){const n=this.registerLanguageProvider(e.registerOptions);this._registrations.set(e.id,{disposable:n[0],provider:n[1]})}unregister(e){let n=this._registrations.get(e);void 0!==n&&n.disposable.dispose()}dispose(){this._registrations.forEach((e=>{e.disposable.dispose()})),this._registrations.clear()}getProviders(){const e=[];for(const n of this._registrations.values())e.push(n.provider);return e}}},8406:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.WillDeleteFilesFeature=n.WillRenameFilesFeature=n.WillCreateFilesFeature=n.DidDeleteFilesFeature=n.DidRenameFilesFeature=n.DidCreateFilesFeature=void 0;const r=t(9496),i=t(1171),o=t(273),a=t(1980);function s(e,n){return void 0===e[n]&&(e[n]={}),e[n]}function l(e,n,t){e[n]=t}class c{constructor(e,n,t,r,i){this._client=e,this._event=n,this._registrationType=t,this._clientCapability=r,this._serverCapability=i,this._filters=new Map}getState(){return{kind:"workspace",id:this._registrationType.method,registrations:this._filters.size>0}}filterSize(){return this._filters.size}get registrationType(){return this._registrationType}fillClientCapabilities(e){const n=s(s(e,"workspace"),"fileOperations");l(n,"dynamicRegistration",!0),l(n,this._clientCapability,!0)}initialize(e){const n=e.workspace?.fileOperations,t=void 0!==n?n[this._serverCapability]:void 0;if(void 0!==t?.filters)try{this.register({id:a.generateUuid(),registerOptions:{filters:t.filters}})}catch(e){this._client.warn(`Ignoring invalid glob pattern for ${this._serverCapability} registration: ${e}`)}}register(e){this._listener||(this._listener=this._event(this.send,this));const n=e.registerOptions.filters.map((e=>{const n=new i.Minimatch(e.pattern.glob,c.asMinimatchOptions(e.pattern.options));if(!n.makeRe())throw new Error(`Invalid pattern ${e.pattern.glob}!`);return{scheme:e.scheme,matcher:n,kind:e.pattern.matches}}));this._filters.set(e.id,n)}unregister(e){this._filters.delete(e),0===this._filters.size&&this._listener&&(this._listener.dispose(),this._listener=void 0)}dispose(){this._filters.clear(),this._listener&&(this._listener.dispose(),this._listener=void 0)}getFileType(e){return c.getFileType(e)}async filter(e,n){const t=await Promise.all(e.files.map((async e=>{const t=n(e),i=t.fsPath.replace(/\\/g,"/");for(const e of this._filters.values())for(const n of e)if(void 0===n.scheme||n.scheme===t.scheme)if(n.matcher.match(i)){if(void 0===n.kind)return!0;const e=await this.getFileType(t);if(void 0===e)return this._client.error(`Failed to determine file type for ${t.toString()}.`),!0;if(e===r.FileType.File&&n.kind===o.FileOperationPatternKind.file||e===r.FileType.Directory&&n.kind===o.FileOperationPatternKind.folder)return!0}else if(n.kind===o.FileOperationPatternKind.folder&&await c.getFileType(t)===r.FileType.Directory&&n.matcher.match(`${i}/`))return!0;return!1}))),i=e.files.filter(((e,n)=>t[n]));return{...e,files:i}}static async getFileType(e){try{return(await r.workspace.fs.stat(e)).type}catch(e){return}}static asMinimatchOptions(e){if(void 0!==e)return!0===e.ignoreCase?{nocase:!0}:void 0}}class u extends c{constructor(e,n,t,r,i,o,a){super(e,n,t,r,i),this._notificationType=t,this._accessUri=o,this._createParams=a}async send(e){const n=await this.filter(e,this._accessUri);if(n.files.length){const e=async e=>this._client.sendNotification(this._notificationType,this._createParams(e));return this.doSend(n,e)}}}class d extends u{constructor(){super(...arguments),this._fsPathFileTypes=new Map}async getFileType(e){const n=e.fsPath;if(this._fsPathFileTypes.has(n))return this._fsPathFileTypes.get(n);const t=await c.getFileType(e);return t&&this._fsPathFileTypes.set(n,t),t}async cacheFileTypes(e,n){await this.filter(e,n)}clearFileTypeCache(){this._fsPathFileTypes.clear()}unregister(e){super.unregister(e),0===this.filterSize()&&this._willListener&&(this._willListener.dispose(),this._willListener=void 0)}dispose(){super.dispose(),this._willListener&&(this._willListener.dispose(),this._willListener=void 0)}}n.DidCreateFilesFeature=class extends u{constructor(e){super(e,r.workspace.onDidCreateFiles,o.DidCreateFilesNotification.type,"didCreate","didCreate",(e=>e),e.code2ProtocolConverter.asDidCreateFilesParams)}doSend(e,n){const t=this._client.middleware.workspace;return t?.didCreateFiles?t.didCreateFiles(e,n):n(e)}},n.DidRenameFilesFeature=class extends d{constructor(e){super(e,r.workspace.onDidRenameFiles,o.DidRenameFilesNotification.type,"didRename","didRename",(e=>e.oldUri),e.code2ProtocolConverter.asDidRenameFilesParams)}register(e){this._willListener||(this._willListener=r.workspace.onWillRenameFiles(this.willRename,this)),super.register(e)}willRename(e){e.waitUntil(this.cacheFileTypes(e,(e=>e.oldUri)))}doSend(e,n){this.clearFileTypeCache();const t=this._client.middleware.workspace;return t?.didRenameFiles?t.didRenameFiles(e,n):n(e)}},n.DidDeleteFilesFeature=class extends d{constructor(e){super(e,r.workspace.onDidDeleteFiles,o.DidDeleteFilesNotification.type,"didDelete","didDelete",(e=>e),e.code2ProtocolConverter.asDidDeleteFilesParams)}register(e){this._willListener||(this._willListener=r.workspace.onWillDeleteFiles(this.willDelete,this)),super.register(e)}willDelete(e){e.waitUntil(this.cacheFileTypes(e,(e=>e)))}doSend(e,n){this.clearFileTypeCache();const t=this._client.middleware.workspace;return t?.didDeleteFiles?t.didDeleteFiles(e,n):n(e)}};class h extends c{constructor(e,n,t,r,i,o,a){super(e,n,t,r,i),this._requestType=t,this._accessUri=o,this._createParams=a}async send(e){const n=this.waitUntil(e);e.waitUntil(n)}async waitUntil(e){const n=await this.filter(e,this._accessUri);if(n.files.length){const e=e=>this._client.sendRequest(this._requestType,this._createParams(e),e.token).then(this._client.protocol2CodeConverter.asWorkspaceEdit);return this.doSend(n,e)}}}n.WillCreateFilesFeature=class extends h{constructor(e){super(e,r.workspace.onWillCreateFiles,o.WillCreateFilesRequest.type,"willCreate","willCreate",(e=>e),e.code2ProtocolConverter.asWillCreateFilesParams)}doSend(e,n){const t=this._client.middleware.workspace;return t?.willCreateFiles?t.willCreateFiles(e,n):n(e)}},n.WillRenameFilesFeature=class extends h{constructor(e){super(e,r.workspace.onWillRenameFiles,o.WillRenameFilesRequest.type,"willRename","willRename",(e=>e.oldUri),e.code2ProtocolConverter.asWillRenameFilesParams)}doSend(e,n){const t=this._client.middleware.workspace;return t?.willRenameFiles?t.willRenameFiles(e,n):n(e)}},n.WillDeleteFilesFeature=class extends h{constructor(e){super(e,r.workspace.onWillDeleteFiles,o.WillDeleteFilesRequest.type,"willDelete","willDelete",(e=>e),e.code2ProtocolConverter.asWillDeleteFilesParams)}doSend(e,n){const t=this._client.middleware.workspace;return t?.willDeleteFiles?t.willDeleteFiles(e,n):n(e)}}},5338:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.FileSystemWatcherFeature=void 0;const r=t(9496),i=t(273),o=t(8909);n.FileSystemWatcherFeature=class{constructor(e,n){this._client=e,this._notifyFileEvent=n,this._watchers=new Map}getState(){return{kind:"workspace",id:this.registrationType.method,registrations:this._watchers.size>0}}get registrationType(){return i.DidChangeWatchedFilesNotification.type}fillClientCapabilities(e){(0,o.ensure)((0,o.ensure)(e,"workspace"),"didChangeWatchedFiles").dynamicRegistration=!0,(0,o.ensure)((0,o.ensure)(e,"workspace"),"didChangeWatchedFiles").relativePatternSupport=!0}initialize(e,n){}register(e){if(!Array.isArray(e.registerOptions.watchers))return;const n=[];for(const t of e.registerOptions.watchers){const e=this._client.protocol2CodeConverter.asGlobPattern(t.globPattern);if(void 0===e)continue;let o=!0,a=!0,s=!0;void 0!==t.kind&&null!==t.kind&&(o=0!=(t.kind&i.WatchKind.Create),a=0!=(t.kind&i.WatchKind.Change),s=0!=(t.kind&i.WatchKind.Delete));const l=r.workspace.createFileSystemWatcher(e,!o,!a,!s);this.hookListeners(l,o,a,s,n),n.push(l)}this._watchers.set(e.id,n)}registerRaw(e,n){let t=[];for(let e of n)this.hookListeners(e,!0,!0,!0,t);this._watchers.set(e,t)}hookListeners(e,n,t,r,o){n&&e.onDidCreate((e=>this._notifyFileEvent({uri:this._client.code2ProtocolConverter.asUri(e),type:i.FileChangeType.Created})),null,o),t&&e.onDidChange((e=>this._notifyFileEvent({uri:this._client.code2ProtocolConverter.asUri(e),type:i.FileChangeType.Changed})),null,o),r&&e.onDidDelete((e=>this._notifyFileEvent({uri:this._client.code2ProtocolConverter.asUri(e),type:i.FileChangeType.Deleted})),null,o)}unregister(e){let n=this._watchers.get(e);if(n)for(let e of n)e.dispose()}dispose(){this._watchers.forEach((e=>{for(let n of e)n.dispose()})),this._watchers.clear()}}},6454:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.FoldingRangeFeature=void 0;const r=t(9496),i=t(273),o=t(8909);class a extends o.TextDocumentLanguageFeature{constructor(e){super(e,i.FoldingRangeRequest.type)}fillClientCapabilities(e){let n=(0,o.ensure)((0,o.ensure)(e,"textDocument"),"foldingRange");n.dynamicRegistration=!0,n.rangeLimit=5e3,n.lineFoldingOnly=!0,n.foldingRangeKind={valueSet:[i.FoldingRangeKind.Comment,i.FoldingRangeKind.Imports,i.FoldingRangeKind.Region]},n.foldingRange={collapsedText:!1}}initialize(e,n){let[t,r]=this.getRegistration(n,e.foldingRangeProvider);t&&r&&this.register({id:t,registerOptions:r})}registerLanguageProvider(e){const n=e.documentSelector,t={provideFoldingRanges:(e,n,t)=>{const r=this._client,o=(e,n,t)=>{const o={textDocument:r.code2ProtocolConverter.asTextDocumentIdentifier(e)};return r.sendRequest(i.FoldingRangeRequest.type,o,t).then((e=>t.isCancellationRequested?null:r.protocol2CodeConverter.asFoldingRanges(e,t)),(e=>r.handleFailedRequest(i.FoldingRangeRequest.type,t,e,null)))},a=r.middleware;return a.provideFoldingRanges?a.provideFoldingRanges(e,n,t,o):o(e,0,t)}};return[r.languages.registerFoldingRangeProvider(this._client.protocol2CodeConverter.asDocumentSelector(n),t),t]}}n.FoldingRangeFeature=a},6426:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.DocumentOnTypeFormattingFeature=n.DocumentRangeFormattingFeature=n.DocumentFormattingFeature=void 0;const r=t(9496),i=t(273),o=t(1980),a=t(8909);var s;!function(e){e.fromConfiguration=function(e){const n=r.workspace.getConfiguration("files",e);return{trimTrailingWhitespace:n.get("trimTrailingWhitespace"),trimFinalNewlines:n.get("trimFinalNewlines"),insertFinalNewline:n.get("insertFinalNewline")}}}(s||(s={}));class l extends a.TextDocumentLanguageFeature{constructor(e){super(e,i.DocumentFormattingRequest.type)}fillClientCapabilities(e){(0,a.ensure)((0,a.ensure)(e,"textDocument"),"formatting").dynamicRegistration=!0}initialize(e,n){const t=this.getRegistrationOptions(n,e.documentFormattingProvider);t&&this.register({id:o.generateUuid(),registerOptions:t})}registerLanguageProvider(e){const n=e.documentSelector,t={provideDocumentFormattingEdits:(e,n,t)=>{const r=this._client,o=(e,n,t)=>{const o={textDocument:r.code2ProtocolConverter.asTextDocumentIdentifier(e),options:r.code2ProtocolConverter.asFormattingOptions(n,s.fromConfiguration(e))};return r.sendRequest(i.DocumentFormattingRequest.type,o,t).then((e=>t.isCancellationRequested?null:r.protocol2CodeConverter.asTextEdits(e,t)),(e=>r.handleFailedRequest(i.DocumentFormattingRequest.type,t,e,null)))},a=r.middleware;return a.provideDocumentFormattingEdits?a.provideDocumentFormattingEdits(e,n,t,o):o(e,n,t)}};return[r.languages.registerDocumentFormattingEditProvider(this._client.protocol2CodeConverter.asDocumentSelector(n),t),t]}}n.DocumentFormattingFeature=l;class c extends a.TextDocumentLanguageFeature{constructor(e){super(e,i.DocumentRangeFormattingRequest.type)}fillClientCapabilities(e){(0,a.ensure)((0,a.ensure)(e,"textDocument"),"rangeFormatting").dynamicRegistration=!0}initialize(e,n){const t=this.getRegistrationOptions(n,e.documentRangeFormattingProvider);t&&this.register({id:o.generateUuid(),registerOptions:t})}registerLanguageProvider(e){const n=e.documentSelector,t={provideDocumentRangeFormattingEdits:(e,n,t,r)=>{const o=this._client,a=(e,n,t,r)=>{const a={textDocument:o.code2ProtocolConverter.asTextDocumentIdentifier(e),range:o.code2ProtocolConverter.asRange(n),options:o.code2ProtocolConverter.asFormattingOptions(t,s.fromConfiguration(e))};return o.sendRequest(i.DocumentRangeFormattingRequest.type,a,r).then((e=>r.isCancellationRequested?null:o.protocol2CodeConverter.asTextEdits(e,r)),(e=>o.handleFailedRequest(i.DocumentRangeFormattingRequest.type,r,e,null)))},l=o.middleware;return l.provideDocumentRangeFormattingEdits?l.provideDocumentRangeFormattingEdits(e,n,t,r,a):a(e,n,t,r)}};return[r.languages.registerDocumentRangeFormattingEditProvider(this._client.protocol2CodeConverter.asDocumentSelector(n),t),t]}}n.DocumentRangeFormattingFeature=c;class u extends a.TextDocumentLanguageFeature{constructor(e){super(e,i.DocumentOnTypeFormattingRequest.type)}fillClientCapabilities(e){(0,a.ensure)((0,a.ensure)(e,"textDocument"),"onTypeFormatting").dynamicRegistration=!0}initialize(e,n){const t=this.getRegistrationOptions(n,e.documentOnTypeFormattingProvider);t&&this.register({id:o.generateUuid(),registerOptions:t})}registerLanguageProvider(e){const n=e.documentSelector,t={provideOnTypeFormattingEdits:(e,n,t,r,o)=>{const a=this._client,l=(e,n,t,r,o)=>{let l={textDocument:a.code2ProtocolConverter.asTextDocumentIdentifier(e),position:a.code2ProtocolConverter.asPosition(n),ch:t,options:a.code2ProtocolConverter.asFormattingOptions(r,s.fromConfiguration(e))};return a.sendRequest(i.DocumentOnTypeFormattingRequest.type,l,o).then((e=>o.isCancellationRequested?null:a.protocol2CodeConverter.asTextEdits(e,o)),(e=>a.handleFailedRequest(i.DocumentOnTypeFormattingRequest.type,o,e,null)))},c=a.middleware;return c.provideOnTypeFormattingEdits?c.provideOnTypeFormattingEdits(e,n,t,r,o,l):l(e,n,t,r,o)}},o=e.moreTriggerCharacter||[];return[r.languages.registerOnTypeFormattingEditProvider(this._client.protocol2CodeConverter.asDocumentSelector(n),t,e.firstTriggerCharacter,...o),t]}}n.DocumentOnTypeFormattingFeature=u},6782:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.HoverFeature=void 0;const r=t(9496),i=t(273),o=t(8909),a=t(1980);class s extends o.TextDocumentLanguageFeature{constructor(e){super(e,i.HoverRequest.type)}fillClientCapabilities(e){const n=(0,o.ensure)((0,o.ensure)(e,"textDocument"),"hover");n.dynamicRegistration=!0,n.contentFormat=[i.MarkupKind.Markdown,i.MarkupKind.PlainText]}initialize(e,n){const t=this.getRegistrationOptions(n,e.hoverProvider);t&&this.register({id:a.generateUuid(),registerOptions:t})}registerLanguageProvider(e){const n=e.documentSelector,t={provideHover:(e,n,t)=>{const r=this._client,o=(e,n,t)=>r.sendRequest(i.HoverRequest.type,r.code2ProtocolConverter.asTextDocumentPositionParams(e,n),t).then((e=>t.isCancellationRequested?null:r.protocol2CodeConverter.asHover(e)),(e=>r.handleFailedRequest(i.HoverRequest.type,t,e,null))),a=r.middleware;return a.provideHover?a.provideHover(e,n,t,o):o(e,n,t)}};return[this.registerProvider(n,t),t]}registerProvider(e,n){return r.languages.registerHoverProvider(this._client.protocol2CodeConverter.asDocumentSelector(e),n)}}n.HoverFeature=s},9889:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.ImplementationFeature=void 0;const r=t(9496),i=t(273),o=t(8909);class a extends o.TextDocumentLanguageFeature{constructor(e){super(e,i.ImplementationRequest.type)}fillClientCapabilities(e){let n=(0,o.ensure)((0,o.ensure)(e,"textDocument"),"implementation");n.dynamicRegistration=!0,n.linkSupport=!0}initialize(e,n){let[t,r]=this.getRegistration(n,e.implementationProvider);t&&r&&this.register({id:t,registerOptions:r})}registerLanguageProvider(e){const n=e.documentSelector,t={provideImplementation:(e,n,t)=>{const r=this._client,o=(e,n,t)=>r.sendRequest(i.ImplementationRequest.type,r.code2ProtocolConverter.asTextDocumentPositionParams(e,n),t).then((e=>t.isCancellationRequested?null:r.protocol2CodeConverter.asDefinitionResult(e,t)),(e=>r.handleFailedRequest(i.ImplementationRequest.type,t,e,null))),a=r.middleware;return a.provideImplementation?a.provideImplementation(e,n,t,o):o(e,n,t)}};return[this.registerProvider(n,t),t]}registerProvider(e,n){return r.languages.registerImplementationProvider(this._client.protocol2CodeConverter.asDocumentSelector(e),n)}}n.ImplementationFeature=a},6190:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.InlayHintsFeature=void 0;const r=t(9496),i=t(273),o=t(8909);class a extends o.TextDocumentLanguageFeature{constructor(e){super(e,i.InlayHintRequest.type)}fillClientCapabilities(e){const n=(0,o.ensure)((0,o.ensure)(e,"textDocument"),"inlayHint");n.dynamicRegistration=!0,n.resolveSupport={properties:["tooltip","textEdits","label.tooltip","label.location","label.command"]},(0,o.ensure)((0,o.ensure)(e,"workspace"),"inlayHint").refreshSupport=!0}initialize(e,n){this._client.onRequest(i.InlayHintRefreshRequest.type,(async()=>{for(const e of this.getAllProviders())e.onDidChangeInlayHints.fire()}));const[t,r]=this.getRegistration(n,e.inlayHintProvider);t&&r&&this.register({id:t,registerOptions:r})}registerLanguageProvider(e){const n=e.documentSelector,t=new r.EventEmitter,o={onDidChangeInlayHints:t.event,provideInlayHints:(e,n,t)=>{const r=this._client,o=async(e,n,t)=>{const o={textDocument:r.code2ProtocolConverter.asTextDocumentIdentifier(e),range:r.code2ProtocolConverter.asRange(n)};try{const e=await r.sendRequest(i.InlayHintRequest.type,o,t);return t.isCancellationRequested?null:r.protocol2CodeConverter.asInlayHints(e,t)}catch(e){return r.handleFailedRequest(i.InlayHintRequest.type,t,e,null)}},a=r.middleware;return a.provideInlayHints?a.provideInlayHints(e,n,t,o):o(e,n,t)}};return o.resolveInlayHint=!0===e.resolveProvider?(e,n)=>{const t=this._client,r=async(e,n)=>{try{const r=await t.sendRequest(i.InlayHintResolveRequest.type,t.code2ProtocolConverter.asInlayHint(e),n);if(n.isCancellationRequested)return null;const o=t.protocol2CodeConverter.asInlayHint(r,n);return n.isCancellationRequested?null:o}catch(e){return t.handleFailedRequest(i.InlayHintResolveRequest.type,n,e,null)}},o=t.middleware;return o.resolveInlayHint?o.resolveInlayHint(e,n,r):r(e,n)}:void 0,[this.registerProvider(n,o),{provider:o,onDidChangeInlayHints:t}]}registerProvider(e,n){return r.languages.registerInlayHintsProvider(this._client.protocol2CodeConverter.asDocumentSelector(e),n)}}n.InlayHintsFeature=a},5098:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.InlineValueFeature=void 0;const r=t(9496),i=t(273),o=t(8909);class a extends o.TextDocumentLanguageFeature{constructor(e){super(e,i.InlineValueRequest.type)}fillClientCapabilities(e){(0,o.ensure)((0,o.ensure)(e,"textDocument"),"inlineValue").dynamicRegistration=!0,(0,o.ensure)((0,o.ensure)(e,"workspace"),"inlineValue").refreshSupport=!0}initialize(e,n){this._client.onRequest(i.InlineValueRefreshRequest.type,(async()=>{for(const e of this.getAllProviders())e.onDidChangeInlineValues.fire()}));const[t,r]=this.getRegistration(n,e.inlineValueProvider);t&&r&&this.register({id:t,registerOptions:r})}registerLanguageProvider(e){const n=e.documentSelector,t=new r.EventEmitter,o={onDidChangeInlineValues:t.event,provideInlineValues:(e,n,t,r)=>{const o=this._client,a=(e,n,t,r)=>{const a={textDocument:o.code2ProtocolConverter.asTextDocumentIdentifier(e),range:o.code2ProtocolConverter.asRange(n),context:o.code2ProtocolConverter.asInlineValueContext(t)};return o.sendRequest(i.InlineValueRequest.type,a,r).then((e=>r.isCancellationRequested?null:o.protocol2CodeConverter.asInlineValues(e,r)),(e=>o.handleFailedRequest(i.InlineValueRequest.type,r,e,null)))},s=o.middleware;return s.provideInlineValues?s.provideInlineValues(e,n,t,r,a):a(e,n,t,r)}};return[this.registerProvider(n,o),{provider:o,onDidChangeInlineValues:t}]}registerProvider(e,n){return r.languages.registerInlineValuesProvider(this._client.protocol2CodeConverter.asDocumentSelector(e),n)}}n.InlineValueFeature=a},3483:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.LinkedEditingFeature=void 0;const r=t(9496),i=t(273),o=t(8909);class a extends o.TextDocumentLanguageFeature{constructor(e){super(e,i.LinkedEditingRangeRequest.type)}fillClientCapabilities(e){(0,o.ensure)((0,o.ensure)(e,"textDocument"),"linkedEditingRange").dynamicRegistration=!0}initialize(e,n){let[t,r]=this.getRegistration(n,e.linkedEditingRangeProvider);t&&r&&this.register({id:t,registerOptions:r})}registerLanguageProvider(e){const n=e.documentSelector,t={provideLinkedEditingRanges:(e,n,t)=>{const r=this._client,o=(e,n,t)=>r.sendRequest(i.LinkedEditingRangeRequest.type,r.code2ProtocolConverter.asTextDocumentPositionParams(e,n),t).then((e=>t.isCancellationRequested?null:r.protocol2CodeConverter.asLinkedEditingRanges(e,t)),(e=>r.handleFailedRequest(i.LinkedEditingRangeRequest.type,t,e,null))),a=r.middleware;return a.provideLinkedEditingRange?a.provideLinkedEditingRange(e,n,t,o):o(e,n,t)}};return[this.registerProvider(n,t),t]}registerProvider(e,n){return r.languages.registerLinkedEditingRangeProvider(this._client.protocol2CodeConverter.asDocumentSelector(e),n)}}n.LinkedEditingFeature=a},203:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.NotebookDocumentSyncFeature=void 0;const r=t(9496),i=t(1171),o=t(273),a=t(1980),s=t(9763);function l(e,n){return void 0===e[n]&&(e[n]={}),e[n]}var c,u,d,h,p;!function(e){let n;!function(n){function t(e,n){return e.map((e=>a(e,n)))}function i(e){return l(new Set,e)}function a(e,n){const t=o.NotebookCell.create(function(e){switch(e){case r.NotebookCellKind.Markup:return o.NotebookCellKind.Markup;case r.NotebookCellKind.Code:return o.NotebookCellKind.Code}}(e.kind),n.asUri(e.document.uri));return Object.keys(e.metadata).length>0&&(t.metadata=i(e.metadata)),void 0!==e.executionSummary&&s.number(e.executionSummary.executionOrder)&&s.boolean(e.executionSummary.success)&&(t.executionSummary={executionOrder:e.executionSummary.executionOrder,success:e.executionSummary.success}),t}function l(e,n){if(e.has(n))throw new Error("Can't deep copy cyclic structures.");if(Array.isArray(n)){const t=[];for(const r of n)if(null!==r&&"object"==typeof r||Array.isArray(r))t.push(l(e,r));else{if(r instanceof RegExp)throw new Error("Can't transfer regular expressions to the server");t.push(r)}return t}{const t=Object.keys(n),r=Object.create(null);for(const i of t){const t=n[i];if(null!==t&&"object"==typeof t||Array.isArray(t))r[i]=l(e,t);else{if(t instanceof RegExp)throw new Error("Can't transfer regular expressions to the server");r[i]=t}}return r}}n.asVersionedNotebookDocumentIdentifier=function(e,n){return{version:e.version,uri:n.asUri(e.uri)}},n.asNotebookDocument=function(e,n,r){const a=o.NotebookDocument.create(r.asUri(e.uri),e.notebookType,e.version,t(n,r));return Object.keys(e.metadata).length>0&&(a.metadata=i(e.metadata)),a},n.asNotebookCells=t,n.asMetadata=i,n.asNotebookCell=a,n.asTextContentChange=function(e,n){const t=n.asChangeTextDocumentParams(e);return{document:t.textDocument,changes:t.contentChanges}},n.asNotebookDocumentChangeEvent=function(n,t){const r=Object.create(null);if(n.metadata&&(r.metadata=e.c2p.asMetadata(n.metadata)),void 0!==n.cells){const i=Object.create(null),o=n.cells;o.structure&&(i.structure={array:{start:o.structure.array.start,deleteCount:o.structure.array.deleteCount,cells:void 0!==o.structure.array.cells?o.structure.array.cells.map((n=>e.c2p.asNotebookCell(n,t))):void 0},didOpen:void 0!==o.structure.didOpen?o.structure.didOpen.map((e=>t.asOpenTextDocumentParams(e.document).textDocument)):void 0,didClose:void 0!==o.structure.didClose?o.structure.didClose.map((e=>t.asCloseTextDocumentParams(e.document).textDocument)):void 0}),void 0!==o.data&&(i.data=o.data.map((n=>e.c2p.asNotebookCell(n,t)))),void 0!==o.textContent&&(i.textContent=o.textContent.map((n=>e.c2p.asTextContentChange(n,t)))),Object.keys(i).length>0&&(r.cells=i)}return r}}(n=e.c2p||(e.c2p={}))}(c||(c={})),function(e){function n(e,n,r=!0){return!(e.kind!==n.kind||e.document.uri.toString()!==n.document.uri.toString()||e.document.languageId!==n.document.languageId||!function(e,n){return e===n||void 0!==e&&void 0!==n&&(e.executionOrder===n.executionOrder&&e.success===n.success&&function(e,n){return e===n||void 0!==e&&void 0!==n&&(e.startTime===n.startTime&&e.endTime===n.endTime)}(e.timing,n.timing))}(e.executionSummary,n.executionSummary))&&(!r||r&&t(e.metadata,n.metadata))}function t(e,n){if(e===n)return!0;if(null==e||null==n)return!1;if(typeof e!=typeof n)return!1;if("object"!=typeof e)return!1;const i=Array.isArray(e),o=Array.isArray(n);if(i!==o)return!1;if(i&&o){if(e.length!==n.length)return!1;for(let r=0;r<e.length;r++)if(!t(e[r],n[r]))return!1}if(r(e)&&r(n)){const r=Object.keys(e),i=Object.keys(n);if(r.length!==i.length)return!1;if(r.sort(),i.sort(),!t(r,i))return!1;for(let i=0;i<r.length;i++){const o=r[i];if(!t(e[o],n[o]))return!1}return!0}return!1}function r(e){return null!==e&&"object"==typeof e}e.computeDiff=function(e,t,r){const i=e.length,o=t.length;let a=0;for(;a<o&&a<i&&n(e[a],t[a],r);)a++;if(a<o&&a<i){let s=i-1,l=o-1;for(;s>=0&&l>=0&&n(e[s],t[l],r);)s--,l--;const c=s+1-a,u=a===l+1?void 0:t.slice(a,l+1);return void 0!==u?{start:a,deleteCount:c,cells:u}:{start:a,deleteCount:c}}return a<o?{start:a,deleteCount:0,cells:t.slice(a)}:a<i?{start:a,deleteCount:i-a}:void 0},e.isObjectLiteral=r}(u||(u={})),function(e){e.matchNotebook=function(e,n){if("string"==typeof e)return"*"===e||n.notebookType===e;if(void 0!==e.notebookType&&"*"!==e.notebookType&&n.notebookType!==e.notebookType)return!1;const t=n.uri;if(void 0!==e.scheme&&"*"!==e.scheme&&t.scheme!==e.scheme)return!1;if(void 0!==e.pattern){const n=new i.Minimatch(e.pattern,{noext:!0});if(!n.makeRe())return!1;if(!n.match(t.fsPath))return!1}return!0}}(d||(d={})),function(e){function n(e,n,t,r){return void 0===n&&void 0===t?{notebook:e,language:r}:{notebook:{notebookType:e,scheme:n,pattern:t},language:r}}e.asDocumentSelector=function(e){const t=e.notebookSelector,r=[];for(const e of t){const t=("string"==typeof e.notebook?e.notebook:e.notebook?.notebookType)??"*",i="string"==typeof e.notebook?void 0:e.notebook?.scheme,o="string"==typeof e.notebook?void 0:e.notebook?.pattern;if(void 0!==e.cells)for(const a of e.cells)r.push(n(t,i,o,a.language));else r.push(n(t,i,o,void 0))}return r}}(h||(h={})),function(e){e.create=function(e){return{cells:e,uris:new Set(e.map((e=>e.document.uri.toString())))}}}(p||(p={}));class f{constructor(e,n){this.client=e,this.options=n,this.notebookSyncInfo=new Map,this.notebookDidOpen=new Set,this.disposables=[],this.selector=e.protocol2CodeConverter.asDocumentSelector(h.asDocumentSelector(n)),r.workspace.onDidOpenNotebookDocument((e=>{this.notebookDidOpen.add(e.uri.toString()),this.didOpen(e)}),void 0,this.disposables);for(const e of r.workspace.notebookDocuments)this.notebookDidOpen.add(e.uri.toString()),this.didOpen(e);r.workspace.onDidChangeNotebookDocument((e=>this.didChangeNotebookDocument(e)),void 0,this.disposables),!0===this.options.save&&r.workspace.onDidSaveNotebookDocument((e=>this.didSave(e)),void 0,this.disposables),r.workspace.onDidCloseNotebookDocument((e=>{this.didClose(e),this.notebookDidOpen.delete(e.uri.toString())}),void 0,this.disposables)}getState(){for(const e of r.workspace.notebookDocuments)if(void 0!==this.getMatchingCells(e))return{kind:"document",id:"$internal",registrations:!0,matches:!0};return{kind:"document",id:"$internal",registrations:!0,matches:!1}}get mode(){return"notebook"}handles(e){return r.languages.match(this.selector,e)>0}didOpenNotebookCellTextDocument(e,n){if(0===r.languages.match(this.selector,n.document))return;if(!this.notebookDidOpen.has(e.uri.toString()))return;const t=this.notebookSyncInfo.get(e.uri.toString()),i=this.cellMatches(e,n);if(void 0!==t){const r=t.uris.has(n.document.uri.toString());if(i&&r||!i&&!r)return;if(i){const n=this.getMatchingCells(e);if(void 0!==n){const r=this.asNotebookDocumentChangeEvent(e,void 0,t,n);void 0!==r&&this.doSendChange(r,n).catch((()=>{}))}}}else i&&this.doSendOpen(e,[n]).catch((()=>{}))}didChangeNotebookCellTextDocument(e,n){0!==r.languages.match(this.selector,n.document)&&this.doSendChange({notebook:e,cells:{textContent:[n]}},void 0).catch((()=>{}))}didCloseNotebookCellTextDocument(e,n){const t=this.notebookSyncInfo.get(e.uri.toString());if(void 0===t)return;const r=n.document.uri,i=t.cells.findIndex((e=>e.document.uri.toString()===r.toString()));if(-1!==i)if(0===i&&1===t.cells.length)this.doSendClose(e,t.cells).catch((()=>{}));else{const n=t.cells.slice(),r=n.splice(i,1);this.doSendChange({notebook:e,cells:{structure:{array:{start:i,deleteCount:1},didClose:r}}},n).catch((()=>{}))}}dispose(){for(const e of this.disposables)e.dispose()}didOpen(e,n=this.getMatchingCells(e),t=this.notebookSyncInfo.get(e.uri.toString())){if(void 0!==t)if(void 0!==n){const r=this.asNotebookDocumentChangeEvent(e,void 0,t,n);void 0!==r&&this.doSendChange(r,n).catch((()=>{}))}else this.doSendClose(e,[]).catch((()=>{}));else{if(void 0===n)return;this.doSendOpen(e,n).catch((()=>{}))}}didChangeNotebookDocument(e){const n=e.notebook,t=this.notebookSyncInfo.get(n.uri.toString());if(void 0===t){if(0===e.contentChanges.length)return;const r=this.getMatchingCells(n);if(void 0===r)return;this.didOpen(n,r,t)}else{const r=this.getMatchingCells(n);if(void 0===r)return void this.didClose(n,t);const i=this.asNotebookDocumentChangeEvent(e.notebook,e,t,r);void 0!==i&&this.doSendChange(i,r).catch((()=>{}))}}didSave(e){void 0!==this.notebookSyncInfo.get(e.uri.toString())&&this.doSendSave(e).catch((()=>{}))}didClose(e,n=this.notebookSyncInfo.get(e.uri.toString())){if(void 0===n)return;const t=e.getCells().filter((e=>n.uris.has(e.document.uri.toString())));this.doSendClose(e,t).catch((()=>{}))}async sendDidOpenNotebookDocument(e){const n=this.getMatchingCells(e);if(void 0!==n)return this.doSendOpen(e,n)}async doSendOpen(e,n){const t=async(e,n)=>{const t=c.c2p.asNotebookDocument(e,n,this.client.code2ProtocolConverter),r=n.map((e=>this.client.code2ProtocolConverter.asTextDocumentItem(e.document)));try{await this.client.sendNotification(o.DidOpenNotebookDocumentNotification.type,{notebookDocument:t,cellTextDocuments:r})}catch(e){throw this.client.error("Sending DidOpenNotebookDocumentNotification failed",e),e}},r=this.client.middleware?.notebooks;return this.notebookSyncInfo.set(e.uri.toString(),p.create(n)),void 0!==r?.didOpen?r.didOpen(e,n,t):t(e,n)}async sendDidChangeNotebookDocument(e){return this.doSendChange(e,void 0)}async doSendChange(e,n=this.getMatchingCells(e.notebook)){const t=async e=>{try{await this.client.sendNotification(o.DidChangeNotebookDocumentNotification.type,{notebookDocument:c.c2p.asVersionedNotebookDocumentIdentifier(e.notebook,this.client.code2ProtocolConverter),change:c.c2p.asNotebookDocumentChangeEvent(e,this.client.code2ProtocolConverter)})}catch(e){throw this.client.error("Sending DidChangeNotebookDocumentNotification failed",e),e}},r=this.client.middleware?.notebooks;return void 0!==e.cells?.structure&&this.notebookSyncInfo.set(e.notebook.uri.toString(),p.create(n??[])),void 0!==r?.didChange?r?.didChange(e,t):t(e)}async sendDidSaveNotebookDocument(e){return this.doSendSave(e)}async doSendSave(e){const n=async e=>{try{await this.client.sendNotification(o.DidSaveNotebookDocumentNotification.type,{notebookDocument:{uri:this.client.code2ProtocolConverter.asUri(e.uri)}})}catch(e){throw this.client.error("Sending DidSaveNotebookDocumentNotification failed",e),e}},t=this.client.middleware?.notebooks;return void 0!==t?.didSave?t.didSave(e,n):n(e)}async sendDidCloseNotebookDocument(e){return this.doSendClose(e,this.getMatchingCells(e)??[])}async doSendClose(e,n){const t=async(e,n)=>{try{await this.client.sendNotification(o.DidCloseNotebookDocumentNotification.type,{notebookDocument:{uri:this.client.code2ProtocolConverter.asUri(e.uri)},cellTextDocuments:n.map((e=>this.client.code2ProtocolConverter.asTextDocumentIdentifier(e.document)))})}catch(e){throw this.client.error("Sending DidCloseNotebookDocumentNotification failed",e),e}},r=this.client.middleware?.notebooks;return this.notebookSyncInfo.delete(e.uri.toString()),void 0!==r?.didClose?r.didClose(e,n,t):t(e,n)}asNotebookDocumentChangeEvent(e,n,t,r){if(void 0!==n&&n.notebook!==e)throw new Error("Notebook must be identical");const i={notebook:e};let o;if(void 0!==n?.metadata&&(i.metadata=c.c2p.asMetadata(n.metadata)),void 0!==n?.cellChanges&&n.cellChanges.length>0){const e=[];o=new Set(r.map((e=>e.document.uri.toString())));for(const t of n.cellChanges)!o.has(t.cell.document.uri.toString())||void 0===t.executionSummary&&void 0===t.metadata||e.push(t.cell);e.length>0&&(i.cells=i.cells??{},i.cells.data=e)}if((void 0!==n?.contentChanges&&n.contentChanges.length>0||void 0===n)&&void 0!==t&&void 0!==r){const e=t.cells,n=r,o=u.computeDiff(e,n,!1);let a,s;if(void 0!==o){a=void 0===o.cells?new Map:new Map(o.cells.map((e=>[e.document.uri.toString(),e]))),s=0===o.deleteCount?new Map:new Map(e.slice(o.start,o.start+o.deleteCount).map((e=>[e.document.uri.toString(),e])));for(const e of Array.from(s.keys()))a.has(e)&&(s.delete(e),a.delete(e));i.cells=i.cells??{};const n=[],t=[];if(a.size>0||s.size>0){for(const e of a.values())n.push(e);for(const e of s.values())t.push(e)}i.cells.structure={array:o,didOpen:n,didClose:t}}}return Object.keys(i).length>1?i:void 0}getMatchingCells(e,n=e.getCells()){if(void 0!==this.options.notebookSelector)for(const t of this.options.notebookSelector){if(void 0===t.notebook){if(void 0===t.cells)return;const r=this.filterCells(e,n,t.cells);return 0===r.length?void 0:r}if(d.matchNotebook(t.notebook,e))return void 0===t.cells?n:this.filterCells(e,n,t.cells)}}cellMatches(e,n){const t=this.getMatchingCells(e,[n]);return void 0!==t&&t[0]===n}filterCells(e,n,t){const r=n.filter((e=>{const n=e.document.languageId;return t.some((e=>"*"===e.language||n===e.language))}));return"function"==typeof this.client.clientOptions.notebookDocumentOptions?.filterCells?this.client.clientOptions.notebookDocumentOptions.filterCells(e,n):r}}class m{constructor(e){this.client=e,this.registrations=new Map,this.registrationType=o.NotebookDocumentSyncRegistrationType.type,r.workspace.onDidOpenTextDocument((e=>{if(e.uri.scheme!==m.CellScheme)return;const[n,t]=this.findNotebookDocumentAndCell(e);if(void 0!==n&&void 0!==t)for(const e of this.registrations.values())e instanceof f&&e.didOpenNotebookCellTextDocument(n,t)})),r.workspace.onDidChangeTextDocument((e=>{if(0===e.contentChanges.length)return;const n=e.document;if(n.uri.scheme!==m.CellScheme)return;const[t]=this.findNotebookDocumentAndCell(n);if(void 0!==t)for(const n of this.registrations.values())n instanceof f&&n.didChangeNotebookCellTextDocument(t,e)})),r.workspace.onDidCloseTextDocument((e=>{if(e.uri.scheme!==m.CellScheme)return;const[n,t]=this.findNotebookDocumentAndCell(e);if(void 0!==n&&void 0!==t)for(const e of this.registrations.values())e instanceof f&&e.didCloseNotebookCellTextDocument(n,t)}))}getState(){if(0===this.registrations.size)return{kind:"document",id:this.registrationType.method,registrations:!1,matches:!1};for(const e of this.registrations.values()){const n=e.getState();if("document"===n.kind&&!0===n.registrations&&!0===n.matches)return{kind:"document",id:this.registrationType.method,registrations:!0,matches:!0}}return{kind:"document",id:this.registrationType.method,registrations:!0,matches:!1}}fillClientCapabilities(e){const n=l(l(e,"notebookDocument"),"synchronization");n.dynamicRegistration=!0,n.executionSummarySupport=!0}preInitialize(e){const n=e.notebookDocumentSync;void 0!==n&&(this.dedicatedChannel=this.client.protocol2CodeConverter.asDocumentSelector(h.asDocumentSelector(n)))}initialize(e){const n=e.notebookDocumentSync;if(void 0===n)return;const t=n.id??a.generateUuid();this.register({id:t,registerOptions:n})}register(e){const n=new f(this.client,e.registerOptions);this.registrations.set(e.id,n)}unregister(e){const n=this.registrations.get(e);n&&n.dispose()}dispose(){for(const e of this.registrations.values())e.dispose();this.registrations.clear()}handles(e){if(e.uri.scheme!==m.CellScheme)return!1;if(void 0!==this.dedicatedChannel&&r.languages.match(this.dedicatedChannel,e)>0)return!0;for(const n of this.registrations.values())if(n.handles(e))return!0;return!1}getProvider(e){for(const n of this.registrations.values())if(n.handles(e.document))return n}findNotebookDocumentAndCell(e){const n=e.uri.toString();for(const e of r.workspace.notebookDocuments)for(const t of e.getCells())if(t.document.uri.toString()===n)return[e,t];return[void 0,void 0]}}n.NotebookDocumentSyncFeature=m,m.CellScheme="vscode-notebook-cell"},3603:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.ProgressFeature=void 0;const r=t(273),i=t(8071);n.ProgressFeature=class{constructor(e){this._client=e,this.activeParts=new Set}getState(){return{kind:"window",id:r.WorkDoneProgressCreateRequest.method,registrations:this.activeParts.size>0}}fillClientCapabilities(e){var n,t;(n=e,t="window",void 0===n[t]&&(n[t]=Object.create(null)),n[t]).workDoneProgress=!0}initialize(){const e=this._client,n=e=>{this.activeParts.delete(e)};e.onRequest(r.WorkDoneProgressCreateRequest.type,(e=>{this.activeParts.add(new i.ProgressPart(this._client,e.token,n))}))}dispose(){for(const e of this.activeParts)e.done();this.activeParts.clear()}}},8071:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.ProgressPart=void 0;const r=t(9496),i=t(273),o=t(9763);n.ProgressPart=class{constructor(e,n,t){this._client=e,this._token=n,this._reported=0,this._infinite=!1,this._lspProgressDisposable=this._client.onProgress(i.WorkDoneProgress.type,this._token,(e=>{switch(e.kind){case"begin":this.begin(e);break;case"report":this.report(e);break;case"end":this.done(),t&&t(this)}}))}begin(e){this._infinite=void 0===e.percentage,void 0!==this._lspProgressDisposable&&r.window.withProgress({location:r.ProgressLocation.Window,cancellable:e.cancellable,title:e.title},(async(n,t)=>{if(void 0!==this._lspProgressDisposable)return this._progress=n,this._cancellationToken=t,this._tokenDisposable=this._cancellationToken.onCancellationRequested((()=>{this._client.sendNotification(i.WorkDoneProgressCancelNotification.type,{token:this._token})})),this.report(e),new Promise(((e,n)=>{this._resolve=e,this._reject=n}))}))}report(e){if(this._infinite&&o.string(e.message))void 0!==this._progress&&this._progress.report({message:e.message});else if(o.number(e.percentage)){const n=Math.max(0,Math.min(e.percentage,100)),t=Math.max(0,n-this._reported);this._reported+=t,void 0!==this._progress&&this._progress.report({message:e.message,increment:t})}}cancel(){this.cleanup(),void 0!==this._reject&&(this._reject(),this._resolve=void 0,this._reject=void 0)}done(){this.cleanup(),void 0!==this._resolve&&(this._resolve(),this._resolve=void 0,this._reject=void 0)}cleanup(){void 0!==this._lspProgressDisposable&&(this._lspProgressDisposable.dispose(),this._lspProgressDisposable=void 0),void 0!==this._tokenDisposable&&(this._tokenDisposable.dispose(),this._tokenDisposable=void 0),this._progress=void 0,this._cancellationToken=void 0}}},8714:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(9496);class i extends r.CallHierarchyItem{constructor(e,n,t,r,i,o,a){super(e,n,t,r,i,o),void 0!==a&&(this.data=a)}}n.default=i},6434:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(9496);class i extends r.CodeAction{constructor(e,n){super(e),this.data=n}}n.default=i},583:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(9496);class i extends r.CodeLens{constructor(e){super(e)}}n.default=i},1807:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(9496);class i extends r.CompletionItem{constructor(e){super(e)}}n.default=i},8785:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.createConverter=void 0;const r=t(9496),i=t(273),o=t(9763),a=t(4904),s=t(1807),l=t(583),c=t(8705),u=t(6434),d=t(6640),h=t(8714),p=t(1365),f=t(3912),m=t(1065),g=t(273);var E;!function(e){e.is=function(e){let n=e;return n&&o.string(n.language)&&o.string(n.value)}}(E||(E={})),n.createConverter=function(e,n,t){const T=e||(e=>r.Uri.parse(e));function R(e){return T(e)}function S(e){let n=new d.ProtocolDiagnostic(v(e.range),e.message,C(e.severity),e.data);if(void 0!==e.code)if("string"==typeof e.code||"number"==typeof e.code)i.CodeDescription.is(e.codeDescription)?n.code={value:e.code,target:R(e.codeDescription.href)}:n.code=e.code;else if(d.DiagnosticCode.is(e.code)){n.hasDiagnosticCode=!0;const t=e.code;n.code={value:t.value,target:R(t.target)}}return e.source&&(n.source=e.source),e.relatedInformation&&(n.relatedInformation=function(e){const n=new Array(e.length);for(let t=0;t<e.length;t++){const i=e[t];n[t]=new r.DiagnosticRelatedInformation(F(i.location),i.message)}return n}(e.relatedInformation)),Array.isArray(e.tags)&&(n.tags=function(e){if(!e)return;let n=[];for(let t of e){let e=y(t);void 0!==e&&n.push(e)}return n.length>0?n:void 0}(e.tags)),n}function y(e){switch(e){case i.DiagnosticTag.Unnecessary:return r.DiagnosticTag.Unnecessary;case i.DiagnosticTag.Deprecated:return r.DiagnosticTag.Deprecated;default:return}}function A(e){return e?new r.Position(e.line,e.character):void 0}function v(e){return e?new r.Range(e.start.line,e.start.character,e.end.line,e.end.character):void 0}async function I(e,n){return a.map(e,(e=>new r.Range(e.start.line,e.start.character,e.end.line,e.end.character)),n)}function C(e){if(null==e)return r.DiagnosticSeverity.Error;switch(e){case i.DiagnosticSeverity.Error:return r.DiagnosticSeverity.Error;case i.DiagnosticSeverity.Warning:return r.DiagnosticSeverity.Warning;case i.DiagnosticSeverity.Information:return r.DiagnosticSeverity.Information;case i.DiagnosticSeverity.Hint:return r.DiagnosticSeverity.Hint}return r.DiagnosticSeverity.Error}function _(e){if(o.string(e))return e;switch(e.kind){case i.MarkupKind.Markdown:return b(e.value);case i.MarkupKind.PlainText:return e.value;default:return`Unsupported Markup content received. Kind is: ${e.kind}`}}function b(e){let o;if(void 0===e||"string"==typeof e)o=new r.MarkdownString(e);else switch(e.kind){case i.MarkupKind.Markdown:o=new r.MarkdownString(e.value);break;case i.MarkupKind.PlainText:o=new r.MarkdownString,o.appendText(e.value);break;default:o=new r.MarkdownString,o.appendText(`Unsupported Markup content received. Kind is: ${e.kind}`)}return o.isTrusted=n,o.supportHtml=t,o}function O(e){if(e===i.CompletionItemTag.Deprecated)return r.CompletionItemTag.Deprecated}function D(e,n,t,a,l,c){const u=function(e){if(null==e)return[];const n=[];for(const t of e){const e=O(t);void 0!==e&&n.push(e)}return n}(e.tags),d=function(e){return i.CompletionItemLabelDetails.is(e.labelDetails)?{label:e.label,detail:e.labelDetails.detail,description:e.labelDetails.description}:e.label}(e),h=new s.default(d);e.detail&&(h.detail=e.detail),e.documentation&&(h.documentation=_(e.documentation),h.documentationFormat=o.string(e.documentation)?"$string":e.documentation.kind),e.filterText&&(h.filterText=e.filterText);const p=function(e,n,t){const o=e.insertTextFormat??t;if(void 0!==e.textEdit||void 0!==n){const[t,s]=void 0!==e.textEdit?(a=e.textEdit,i.InsertReplaceEdit.is(a)?[{inserting:v(a.insert),replacing:v(a.replace)},a.newText]:[v(a.range),a.newText]):[n,e.textEditText??e.label];return o===i.InsertTextFormat.Snippet?{text:new r.SnippetString(s),range:t,fromEdit:!0}:{text:s,range:t,fromEdit:!0}}return e.insertText?o===i.InsertTextFormat.Snippet?{text:new r.SnippetString(e.insertText),fromEdit:!1}:{text:e.insertText,fromEdit:!1}:void 0;var a}(e,t,l);if(p&&(h.insertText=p.text,h.range=p.range,h.fromEdit=p.fromEdit),o.number(e.kind)){let[n,t]=(f=e.kind,i.CompletionItemKind.Text<=f&&f<=i.CompletionItemKind.TypeParameter?[f-1,void 0]:[r.CompletionItemKind.Text,f]);h.kind=n,t&&(h.originalItemKind=t)}var f;e.sortText&&(h.sortText=e.sortText),e.additionalTextEdits&&(h.additionalTextEdits=L(e.additionalTextEdits));const m=void 0!==e.commitCharacters?o.stringArray(e.commitCharacters)?e.commitCharacters:void 0:n;m&&(h.commitCharacters=m.slice()),e.command&&(h.command=V(e.command)),!0!==e.deprecated&&!1!==e.deprecated||(h.deprecated=e.deprecated,!0===e.deprecated&&u.push(r.CompletionItemTag.Deprecated)),!0!==e.preselect&&!1!==e.preselect||(h.preselect=e.preselect);const g=e.data??c;void 0!==g&&(h.data=g),u.length>0&&(h.tags=u);const E=e.insertTextMode??a;return void 0!==E&&(h.insertTextMode=E,E===i.InsertTextMode.asIs&&(h.keepWhitespace=!0)),h}function N(e){if(e)return new r.TextEdit(v(e.range),e.newText)}async function w(e,n){if(e)return a.map(e,N,n)}function L(e){if(!e)return;const n=new Array(e.length);for(let t=0;t<e.length;t++)n[t]=N(e[t]);return n}async function x(e,n){return a.mapAsync(e,M,n)}async function M(e,n){let t=new r.SignatureInformation(e.label);return void 0!==e.documentation&&(t.documentation=_(e.documentation)),void 0!==e.parameters&&(t.parameters=await k(e.parameters,n)),void 0!==e.activeParameter&&(t.activeParameter=e.activeParameter),t}function k(e,n){return a.map(e,P,n)}function P(e){let n=new r.ParameterInformation(e.label);return e.documentation&&(n.documentation=_(e.documentation)),n}function F(e){return e?new r.Location(T(e.uri),v(e.range)):void 0}function G(e){if(!e)return;let n={targetUri:T(e.targetUri),targetRange:v(e.targetRange),originSelectionRange:v(e.originSelectionRange),targetSelectionRange:v(e.targetSelectionRange)};if(!n.targetSelectionRange)throw new Error("targetSelectionRange must not be undefined or null");return n}async function U(e,n){if(e){if(o.array(e)){if(0===e.length)return[];if(i.LocationLink.is(e[0])){const t=e;return a.map(t,G,n)}{const t=e;return a.map(t,F,n)}}return i.LocationLink.is(e)?[G(e)]:F(e)}}function H(e){let n=new r.DocumentHighlight(v(e.range));return o.number(e.kind)&&(n.kind=q(e.kind)),n}function q(e){switch(e){case i.DocumentHighlightKind.Text:return r.DocumentHighlightKind.Text;case i.DocumentHighlightKind.Read:return r.DocumentHighlightKind.Read;case i.DocumentHighlightKind.Write:return r.DocumentHighlightKind.Write}return r.DocumentHighlightKind.Text}function X(e){return e<=i.SymbolKind.TypeParameter?e-1:r.SymbolKind.Property}function j(e){if(e===i.SymbolTag.Deprecated)return r.SymbolTag.Deprecated}function K(e){if(null==e)return;const n=[];for(const t of e){const e=j(t);void 0!==e&&n.push(e)}return 0===n.length?void 0:n}function B(e){const n=e.data,t=e.location,i=void 0===t.range||void 0!==n?new f.default(e.name,X(e.kind),e.containerName??"",void 0===t.range?T(t.uri):new r.Location(T(e.location.uri),v(t.range)),n):new r.SymbolInformation(e.name,X(e.kind),e.containerName??"",new r.Location(T(e.location.uri),v(t.range)));return W(i,e),i}function $(e){let n=new r.DocumentSymbol(e.name,e.detail||"",X(e.kind),v(e.range),v(e.selectionRange));if(W(n,e),void 0!==e.children&&e.children.length>0){let t=[];for(let n of e.children)t.push($(n));n.children=t}return n}function W(e,n){e.tags=K(n.tags),n.deprecated&&(e.tags?e.tags.includes(r.SymbolTag.Deprecated)||(e.tags=e.tags.concat(r.SymbolTag.Deprecated)):e.tags=[r.SymbolTag.Deprecated])}function V(e){let n={title:e.title,command:e.command};return e.arguments&&(n.arguments=e.arguments),n}const z=new Map;function Y(e){if(null==e)return;let n=z.get(e);if(n)return n;let t=e.split(".");n=r.CodeActionKind.Empty;for(let e of t)n=n.append(e);return n}async function Z(e,n){if(null==e)return;let t=new u.default(e.title,e.data);return void 0!==e.kind&&(t.kind=Y(e.kind)),void 0!==e.diagnostics&&(t.diagnostics=function(e){const n=new Array(e.length);for(let t=0;t<e.length;t++)n[t]=S(e[t]);return n}(e.diagnostics)),void 0!==e.edit&&(t.edit=await Q(e.edit,n)),void 0!==e.command&&(t.command=V(e.command)),void 0!==e.isPreferred&&(t.isPreferred=e.isPreferred),void 0!==e.disabled&&(t.disabled={reason:e.disabled.reason}),t}function J(e){if(!e)return;let n=new l.default(v(e.range));return e.command&&(n.command=V(e.command)),void 0!==e.data&&null!==e.data&&(n.data=e.data),n}async function Q(e,n){if(!e)return;const t=new Map;if(void 0!==e.changeAnnotations){const r=e.changeAnnotations;await a.forEach(Object.keys(r),(e=>{const n=function(e){if(void 0!==e)return{label:e.label,needsConfirmation:!!e.needsConfirmation,description:e.description}}(r[e]);t.set(e,n)}),n)}const o=e=>void 0===e?void 0:t.get(e),s=new r.WorkspaceEdit;if(e.documentChanges){const t=e.documentChanges;await a.forEach(t,(e=>{if(i.CreateFile.is(e))s.createFile(T(e.uri),e.options,o(e.annotationId));else if(i.RenameFile.is(e))s.renameFile(T(e.oldUri),T(e.newUri),e.options,o(e.annotationId));else if(i.DeleteFile.is(e))s.deleteFile(T(e.uri),e.options,o(e.annotationId));else{if(!i.TextDocumentEdit.is(e))throw new Error(`Unknown workspace edit change received:\n${JSON.stringify(e,void 0,4)}`);{const n=T(e.textDocument.uri);for(const t of e.edits)i.AnnotatedTextEdit.is(t)?s.replace(n,v(t.range),t.newText,o(t.annotationId)):s.replace(n,v(t.range),t.newText)}}}),n)}else if(e.changes){const t=e.changes;await a.forEach(Object.keys(t),(e=>{s.set(T(e),L(t[e]))}),n)}return s}function ee(e){let n=v(e.range),t=e.target?R(e.target):void 0,r=new c.default(n,t);return void 0!==e.tooltip&&(r.tooltip=e.tooltip),void 0!==e.data&&null!==e.data&&(r.data=e.data),r}function ne(e){return new r.Color(e.red,e.green,e.blue,e.alpha)}function te(e){return new r.ColorInformation(v(e.range),ne(e.color))}function re(e){let n=new r.ColorPresentation(e.label);return n.additionalTextEdits=L(e.additionalTextEdits),e.textEdit&&(n.textEdit=N(e.textEdit)),n}function ie(e){if(e)switch(e){case i.FoldingRangeKind.Comment:return r.FoldingRangeKind.Comment;case i.FoldingRangeKind.Imports:return r.FoldingRangeKind.Imports;case i.FoldingRangeKind.Region:return r.FoldingRangeKind.Region}}function oe(e){return new r.FoldingRange(e.startLine,e.endLine,ie(e.kind))}function ae(e){return new r.SelectionRange(v(e.range),e.parent?ae(e.parent):void 0)}function se(e){return i.InlineValueText.is(e)?new r.InlineValueText(v(e.range),e.text):i.InlineValueVariableLookup.is(e)?new r.InlineValueVariableLookup(v(e.range),e.variableName,e.caseSensitiveLookup):new r.InlineValueEvaluatableExpression(v(e.range),e.expression)}async function le(e,n){const t="string"==typeof e.label?e.label:await a.map(e.label,ce,n),r=new m.default(A(e.position),t);return void 0!==e.kind&&(r.kind=e.kind),void 0!==e.textEdits&&(r.textEdits=await w(e.textEdits,n)),void 0!==e.tooltip&&(r.tooltip=ue(e.tooltip)),void 0!==e.paddingLeft&&(r.paddingLeft=e.paddingLeft),void 0!==e.paddingRight&&(r.paddingRight=e.paddingRight),void 0!==e.data&&(r.data=e.data),r}function ce(e){const n=new r.InlayHintLabelPart(e.value);return void 0!==e.location&&(n.location=F(e.location)),void 0!==e.tooltip&&(n.tooltip=ue(e.tooltip)),void 0!==e.command&&(n.command=V(e.command)),n}function ue(e){return"string"==typeof e?e:b(e)}function de(e){if(null===e)return;const n=new h.default(X(e.kind),e.name,e.detail||"",R(e.uri),v(e.range),v(e.selectionRange),e.data);return void 0!==e.tags&&(n.tags=K(e.tags)),n}async function he(e,n){return new r.CallHierarchyIncomingCall(de(e.from),await I(e.fromRanges,n))}async function pe(e,n){return new r.CallHierarchyOutgoingCall(de(e.to),await I(e.fromRanges,n))}function fe(e){return new r.SemanticTokensEdit(e.start,e.deleteCount,void 0!==e.data?new Uint32Array(e.data):void 0)}function me(e){if(null===e)return;let n=new p.default(X(e.kind),e.name,e.detail||"",R(e.uri),v(e.range),v(e.selectionRange),e.data);return void 0!==e.tags&&(n.tags=K(e.tags)),n}return z.set(i.CodeActionKind.Empty,r.CodeActionKind.Empty),z.set(i.CodeActionKind.QuickFix,r.CodeActionKind.QuickFix),z.set(i.CodeActionKind.Refactor,r.CodeActionKind.Refactor),z.set(i.CodeActionKind.RefactorExtract,r.CodeActionKind.RefactorExtract),z.set(i.CodeActionKind.RefactorInline,r.CodeActionKind.RefactorInline),z.set(i.CodeActionKind.RefactorRewrite,r.CodeActionKind.RefactorRewrite),z.set(i.CodeActionKind.Source,r.CodeActionKind.Source),z.set(i.CodeActionKind.SourceOrganizeImports,r.CodeActionKind.SourceOrganizeImports),{asUri:R,asDocumentSelector:function(e){const n=[];for(const t of e)if("string"==typeof t)n.push(t);else if(g.NotebookCellTextDocumentFilter.is(t))if("string"==typeof t.notebook)n.push({notebookType:t.notebook,language:t.language});else{const e=t.notebook.notebookType??"*";n.push({notebookType:e,scheme:t.notebook.scheme,pattern:t.notebook.pattern,language:t.language})}else g.TextDocumentFilter.is(t)&&n.push({language:t.language,scheme:t.scheme,pattern:t.pattern});return n},asDiagnostics:async function(e,n){return a.map(e,S,n)},asDiagnostic:S,asRange:v,asRanges:I,asPosition:A,asDiagnosticSeverity:C,asDiagnosticTag:y,asHover:function(e){if(e)return new r.Hover(function(e){if(o.string(e))return b(e);if(E.is(e))return b().appendCodeblock(e.value,e.language);if(Array.isArray(e)){let n=[];for(let t of e){let e=b();E.is(t)?e.appendCodeblock(t.value,t.language):e.appendMarkdown(t),n.push(e)}return n}return b(e)}(e.contents),v(e.range))},asCompletionResult:async function(e,n,t){if(!e)return;if(Array.isArray(e))return a.map(e,(e=>D(e,n)),t);const o=e,{defaultRange:s,commitCharacters:l}=function(e,n){const t=e.itemDefaults?.editRange,r=e.itemDefaults?.commitCharacters??n;return i.Range.is(t)?{defaultRange:v(t),commitCharacters:r}:void 0!==t?{defaultRange:{inserting:v(t.insert),replacing:v(t.replace)},commitCharacters:r}:{defaultRange:void 0,commitCharacters:r}}(o,n),c=await a.map(o.items,(e=>D(e,l,s,o.itemDefaults?.insertTextMode,o.itemDefaults?.insertTextFormat,o.itemDefaults?.data)),t);return new r.CompletionList(c,o.isIncomplete)},asCompletionItem:D,asTextEdit:N,asTextEdits:w,asSignatureHelp:async function(e,n){if(!e)return;let t=new r.SignatureHelp;return o.number(e.activeSignature)?t.activeSignature=e.activeSignature:t.activeSignature=0,o.number(e.activeParameter)?t.activeParameter=e.activeParameter:t.activeParameter=0,e.signatures&&(t.signatures=await x(e.signatures,n)),t},asSignatureInformations:x,asSignatureInformation:M,asParameterInformations:k,asParameterInformation:P,asDeclarationResult:async function(e,n){if(e)return U(e,n)},asDefinitionResult:async function(e,n){if(e)return U(e,n)},asLocation:F,asReferences:async function(e,n){if(e)return a.map(e,F,n)},asDocumentHighlights:async function(e,n){if(e)return a.map(e,H,n)},asDocumentHighlight:H,asDocumentHighlightKind:q,asSymbolKind:X,asSymbolTag:j,asSymbolTags:K,asSymbolInformations:async function(e,n){if(e)return a.map(e,B,n)},asSymbolInformation:B,asDocumentSymbols:async function(e,n){if(null!=e)return a.map(e,$,n)},asDocumentSymbol:$,asCommand:V,asCommands:async function(e,n){if(e)return a.map(e,V,n)},asCodeAction:Z,asCodeActionKind:Y,asCodeActionKinds:function(e){if(null!=e)return e.map((e=>Y(e)))},asCodeActionResult:function(e,n){return a.mapAsync(e,(async e=>i.Command.is(e)?V(e):Z(e,n)),n)},asCodeLens:J,asCodeLenses:async function(e,n){if(e)return a.map(e,J,n)},asWorkspaceEdit:Q,asDocumentLink:ee,asDocumentLinks:async function(e,n){if(e)return a.map(e,ee,n)},asFoldingRangeKind:ie,asFoldingRange:oe,asFoldingRanges:async function(e,n){if(e)return a.map(e,oe,n)},asColor:ne,asColorInformation:te,asColorInformations:async function(e,n){if(e)return a.map(e,te,n)},asColorPresentation:re,asColorPresentations:async function(e,n){if(e)return a.map(e,re,n)},asSelectionRange:ae,asSelectionRanges:async function(e,n){return Array.isArray(e)?a.map(e,ae,n):[]},asInlineValue:se,asInlineValues:async function(e,n){return Array.isArray(e)?a.map(e,se,n):[]},asInlayHint:le,asInlayHints:async function(e,n){if(Array.isArray(e))return a.mapAsync(e,le,n)},asSemanticTokensLegend:function(e){return e},asSemanticTokens:async function(e,n){if(null!=e)return new r.SemanticTokens(new Uint32Array(e.data),e.resultId)},asSemanticTokensEdit:fe,asSemanticTokensEdits:async function(e,n){if(null!=e)return new r.SemanticTokensEdits(e.edits.map(fe),e.resultId)},asCallHierarchyItem:de,asCallHierarchyItems:async function(e,n){if(null!==e)return a.map(e,de,n)},asCallHierarchyIncomingCall:he,asCallHierarchyIncomingCalls:async function(e,n){if(null!==e)return a.mapAsync(e,he,n)},asCallHierarchyOutgoingCall:pe,asCallHierarchyOutgoingCalls:async function(e,n){if(null!==e)return a.mapAsync(e,pe,n)},asLinkedEditingRanges:async function(e,n){if(null!=e)return new r.LinkedEditingRanges(await I(e.ranges,n),function(e){if(null!=e)return new RegExp(e)}(e.wordPattern))},asTypeHierarchyItem:me,asTypeHierarchyItems:async function(e,n){if(null!==e)return a.map(e,me,n)},asGlobPattern:function(e){if(o.string(e))return e;if(i.RelativePattern.is(e)){if(i.URI.is(e.baseUri))return new r.RelativePattern(R(e.baseUri),e.pattern);if(i.WorkspaceFolder.is(e.baseUri)){const n=r.workspace.getWorkspaceFolder(R(e.baseUri.uri));return void 0!==n?new r.RelativePattern(n,e.pattern):void 0}}}}}},6640:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.ProtocolDiagnostic=n.DiagnosticCode=void 0;const r=t(9496),i=t(9763);(n.DiagnosticCode||(n.DiagnosticCode={})).is=function(e){const n=e;return null!=n&&(i.number(n.value)||i.string(n.value))&&i.string(n.target)};class o extends r.Diagnostic{constructor(e,n,t,r){super(e,n,t),this.data=r,this.hasDiagnosticCode=!1}}n.ProtocolDiagnostic=o},8705:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(9496);class i extends r.DocumentLink{constructor(e,n){super(e,n)}}n.default=i},1065:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(9496);class i extends r.InlayHint{constructor(e,n,t){super(e,n,t)}}n.default=i},1365:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(9496);class i extends r.TypeHierarchyItem{constructor(e,n,t,r,i,o,a){super(e,n,t,r,i,o),void 0!==a&&(this.data=a)}}n.default=i},3912:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(9496);class i extends r.SymbolInformation{constructor(e,n,t,i,o){const a=!(i instanceof r.Uri);super(e,n,t,a?i:new r.Location(i,new r.Range(0,0,0,0))),this.hasRange=a,void 0!==o&&(this.data=o)}}n.default=i},8480:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.ReferencesFeature=void 0;const r=t(9496),i=t(273),o=t(8909),a=t(1980);class s extends o.TextDocumentLanguageFeature{constructor(e){super(e,i.ReferencesRequest.type)}fillClientCapabilities(e){(0,o.ensure)((0,o.ensure)(e,"textDocument"),"references").dynamicRegistration=!0}initialize(e,n){const t=this.getRegistrationOptions(n,e.referencesProvider);t&&this.register({id:a.generateUuid(),registerOptions:t})}registerLanguageProvider(e){const n=e.documentSelector,t={provideReferences:(e,n,t,r)=>{const o=this._client,a=(e,n,t,r)=>o.sendRequest(i.ReferencesRequest.type,o.code2ProtocolConverter.asReferenceParams(e,n,t),r).then((e=>r.isCancellationRequested?null:o.protocol2CodeConverter.asReferences(e,r)),(e=>o.handleFailedRequest(i.ReferencesRequest.type,r,e,null))),s=o.middleware;return s.provideReferences?s.provideReferences(e,n,t,r,a):a(e,n,t,r)}};return[this.registerProvider(n,t),t]}registerProvider(e,n){return r.languages.registerReferenceProvider(this._client.protocol2CodeConverter.asDocumentSelector(e),n)}}n.ReferencesFeature=s},6458:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.RenameFeature=void 0;const r=t(9496),i=t(273),o=t(1980),a=t(9763),s=t(8909);class l extends s.TextDocumentLanguageFeature{constructor(e){super(e,i.RenameRequest.type)}fillClientCapabilities(e){let n=(0,s.ensure)((0,s.ensure)(e,"textDocument"),"rename");n.dynamicRegistration=!0,n.prepareSupport=!0,n.prepareSupportDefaultBehavior=i.PrepareSupportDefaultBehavior.Identifier,n.honorsChangeAnnotations=!0}initialize(e,n){const t=this.getRegistrationOptions(n,e.renameProvider);t&&(a.boolean(e.renameProvider)&&(t.prepareProvider=!1),this.register({id:o.generateUuid(),registerOptions:t}))}registerLanguageProvider(e){const n=e.documentSelector,t={provideRenameEdits:(e,n,t,r)=>{const o=this._client,a=(e,n,t,r)=>{let a={textDocument:o.code2ProtocolConverter.asTextDocumentIdentifier(e),position:o.code2ProtocolConverter.asPosition(n),newName:t};return o.sendRequest(i.RenameRequest.type,a,r).then((e=>r.isCancellationRequested?null:o.protocol2CodeConverter.asWorkspaceEdit(e,r)),(e=>o.handleFailedRequest(i.RenameRequest.type,r,e,null,!1)))},s=o.middleware;return s.provideRenameEdits?s.provideRenameEdits(e,n,t,r,a):a(e,n,t,r)},prepareRename:e.prepareProvider?(e,n,t)=>{const r=this._client,o=(e,n,t)=>{let o={textDocument:r.code2ProtocolConverter.asTextDocumentIdentifier(e),position:r.code2ProtocolConverter.asPosition(n)};return r.sendRequest(i.PrepareRenameRequest.type,o,t).then((e=>t.isCancellationRequested?null:i.Range.is(e)?r.protocol2CodeConverter.asRange(e):this.isDefaultBehavior(e)?!0===e.defaultBehavior?null:Promise.reject(new Error("The element can't be renamed.")):e&&i.Range.is(e.range)?{range:r.protocol2CodeConverter.asRange(e.range),placeholder:e.placeholder}:Promise.reject(new Error("The element can't be renamed."))),(e=>{throw"string"==typeof e.message?new Error(e.message):new Error("The element can't be renamed.")}))},a=r.middleware;return a.prepareRename?a.prepareRename(e,n,t,o):o(e,n,t)}:void 0};return[this.registerProvider(n,t),t]}registerProvider(e,n){return r.languages.registerRenameProvider(this._client.protocol2CodeConverter.asDocumentSelector(e),n)}isDefaultBehavior(e){const n=e;return n&&a.boolean(n.defaultBehavior)}}n.RenameFeature=l},750:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.SelectionRangeFeature=void 0;const r=t(9496),i=t(273),o=t(8909);class a extends o.TextDocumentLanguageFeature{constructor(e){super(e,i.SelectionRangeRequest.type)}fillClientCapabilities(e){(0,o.ensure)((0,o.ensure)(e,"textDocument"),"selectionRange").dynamicRegistration=!0}initialize(e,n){const[t,r]=this.getRegistration(n,e.selectionRangeProvider);t&&r&&this.register({id:t,registerOptions:r})}registerLanguageProvider(e){const n=e.documentSelector,t={provideSelectionRanges:(e,n,t)=>{const r=this._client,o=async(e,n,t)=>{const o={textDocument:r.code2ProtocolConverter.asTextDocumentIdentifier(e),positions:await r.code2ProtocolConverter.asPositions(n,t)};return r.sendRequest(i.SelectionRangeRequest.type,o,t).then((e=>t.isCancellationRequested?null:r.protocol2CodeConverter.asSelectionRanges(e,t)),(e=>r.handleFailedRequest(i.SelectionRangeRequest.type,t,e,null)))},a=r.middleware;return a.provideSelectionRanges?a.provideSelectionRanges(e,n,t,o):o(e,n,t)}};return[this.registerProvider(n,t),t]}registerProvider(e,n){return r.languages.registerSelectionRangeProvider(this._client.protocol2CodeConverter.asDocumentSelector(e),n)}}n.SelectionRangeFeature=a},9957:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.SemanticTokensFeature=void 0;const r=t(9496),i=t(273),o=t(8909),a=t(9763);class s extends o.TextDocumentLanguageFeature{constructor(e){super(e,i.SemanticTokensRegistrationType.type)}fillClientCapabilities(e){const n=(0,o.ensure)((0,o.ensure)(e,"textDocument"),"semanticTokens");n.dynamicRegistration=!0,n.tokenTypes=[i.SemanticTokenTypes.namespace,i.SemanticTokenTypes.type,i.SemanticTokenTypes.class,i.SemanticTokenTypes.enum,i.SemanticTokenTypes.interface,i.SemanticTokenTypes.struct,i.SemanticTokenTypes.typeParameter,i.SemanticTokenTypes.parameter,i.SemanticTokenTypes.variable,i.SemanticTokenTypes.property,i.SemanticTokenTypes.enumMember,i.SemanticTokenTypes.event,i.SemanticTokenTypes.function,i.SemanticTokenTypes.method,i.SemanticTokenTypes.macro,i.SemanticTokenTypes.keyword,i.SemanticTokenTypes.modifier,i.SemanticTokenTypes.comment,i.SemanticTokenTypes.string,i.SemanticTokenTypes.number,i.SemanticTokenTypes.regexp,i.SemanticTokenTypes.operator,i.SemanticTokenTypes.decorator],n.tokenModifiers=[i.SemanticTokenModifiers.declaration,i.SemanticTokenModifiers.definition,i.SemanticTokenModifiers.readonly,i.SemanticTokenModifiers.static,i.SemanticTokenModifiers.deprecated,i.SemanticTokenModifiers.abstract,i.SemanticTokenModifiers.async,i.SemanticTokenModifiers.modification,i.SemanticTokenModifiers.documentation,i.SemanticTokenModifiers.defaultLibrary],n.formats=[i.TokenFormat.Relative],n.requests={range:!0,full:{delta:!0}},n.multilineTokenSupport=!1,n.overlappingTokenSupport=!1,n.serverCancelSupport=!0,n.augmentsSyntaxTokens=!0,(0,o.ensure)((0,o.ensure)(e,"workspace"),"semanticTokens").refreshSupport=!0}initialize(e,n){this._client.onRequest(i.SemanticTokensRefreshRequest.type,(async()=>{for(const e of this.getAllProviders())e.onDidChangeSemanticTokensEmitter.fire()}));const[t,r]=this.getRegistration(n,e.semanticTokensProvider);t&&r&&this.register({id:t,registerOptions:r})}registerLanguageProvider(e){const n=e.documentSelector,t=a.boolean(e.full)?e.full:void 0!==e.full,o=void 0!==e.full&&"boolean"!=typeof e.full&&!0===e.full.delta,s=new r.EventEmitter,l=t?{onDidChangeSemanticTokens:s.event,provideDocumentSemanticTokens:(e,n)=>{const t=this._client,r=t.middleware,o=(e,n)=>{const r={textDocument:t.code2ProtocolConverter.asTextDocumentIdentifier(e)};return t.sendRequest(i.SemanticTokensRequest.type,r,n).then((e=>n.isCancellationRequested?null:t.protocol2CodeConverter.asSemanticTokens(e,n)),(e=>t.handleFailedRequest(i.SemanticTokensRequest.type,n,e,null)))};return r.provideDocumentSemanticTokens?r.provideDocumentSemanticTokens(e,n,o):o(e,n)},provideDocumentSemanticTokensEdits:o?(e,n,t)=>{const r=this._client,o=r.middleware,a=(e,n,t)=>{const o={textDocument:r.code2ProtocolConverter.asTextDocumentIdentifier(e),previousResultId:n};return r.sendRequest(i.SemanticTokensDeltaRequest.type,o,t).then((async e=>t.isCancellationRequested?null:i.SemanticTokens.is(e)?await r.protocol2CodeConverter.asSemanticTokens(e,t):await r.protocol2CodeConverter.asSemanticTokensEdits(e,t)),(e=>r.handleFailedRequest(i.SemanticTokensDeltaRequest.type,t,e,null)))};return o.provideDocumentSemanticTokensEdits?o.provideDocumentSemanticTokensEdits(e,n,t,a):a(e,n,t)}:void 0}:void 0,c=!0===e.range?{provideDocumentRangeSemanticTokens:(e,n,t)=>{const r=this._client,o=r.middleware,a=(e,n,t)=>{const o={textDocument:r.code2ProtocolConverter.asTextDocumentIdentifier(e),range:r.code2ProtocolConverter.asRange(n)};return r.sendRequest(i.SemanticTokensRangeRequest.type,o,t).then((e=>t.isCancellationRequested?null:r.protocol2CodeConverter.asSemanticTokens(e,t)),(e=>r.handleFailedRequest(i.SemanticTokensRangeRequest.type,t,e,null)))};return o.provideDocumentRangeSemanticTokens?o.provideDocumentRangeSemanticTokens(e,n,t,a):a(e,n,t)}}:void 0,u=[],d=this._client,h=d.protocol2CodeConverter.asSemanticTokensLegend(e.legend),p=d.protocol2CodeConverter.asDocumentSelector(n);return void 0!==l&&u.push(r.languages.registerDocumentSemanticTokensProvider(p,l,h)),void 0!==c&&u.push(r.languages.registerDocumentRangeSemanticTokensProvider(p,c,h)),[new r.Disposable((()=>u.forEach((e=>e.dispose())))),{range:c,full:l,onDidChangeSemanticTokensEmitter:s}]}}n.SemanticTokensFeature=s},2908:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.SignatureHelpFeature=void 0;const r=t(9496),i=t(273),o=t(8909),a=t(1980);class s extends o.TextDocumentLanguageFeature{constructor(e){super(e,i.SignatureHelpRequest.type)}fillClientCapabilities(e){let n=(0,o.ensure)((0,o.ensure)(e,"textDocument"),"signatureHelp");n.dynamicRegistration=!0,n.signatureInformation={documentationFormat:[i.MarkupKind.Markdown,i.MarkupKind.PlainText]},n.signatureInformation.parameterInformation={labelOffsetSupport:!0},n.signatureInformation.activeParameterSupport=!0,n.contextSupport=!0}initialize(e,n){const t=this.getRegistrationOptions(n,e.signatureHelpProvider);t&&this.register({id:a.generateUuid(),registerOptions:t})}registerLanguageProvider(e){const n={provideSignatureHelp:(e,n,t,r)=>{const o=this._client,a=(e,n,t,r)=>o.sendRequest(i.SignatureHelpRequest.type,o.code2ProtocolConverter.asSignatureHelpParams(e,n,t),r).then((e=>r.isCancellationRequested?null:o.protocol2CodeConverter.asSignatureHelp(e,r)),(e=>o.handleFailedRequest(i.SignatureHelpRequest.type,r,e,null))),s=o.middleware;return s.provideSignatureHelp?s.provideSignatureHelp(e,n,r,t,a):a(e,n,r,t)}};return[this.registerProvider(e,n),n]}registerProvider(e,n){const t=this._client.protocol2CodeConverter.asDocumentSelector(e.documentSelector);if(void 0===e.retriggerCharacters){const i=e.triggerCharacters||[];return r.languages.registerSignatureHelpProvider(t,n,...i)}{const i={triggerCharacters:e.triggerCharacters||[],retriggerCharacters:e.retriggerCharacters||[]};return r.languages.registerSignatureHelpProvider(t,n,i)}}}n.SignatureHelpFeature=s},743:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.DidSaveTextDocumentFeature=n.WillSaveWaitUntilFeature=n.WillSaveFeature=n.DidChangeTextDocumentFeature=n.DidCloseTextDocumentFeature=n.DidOpenTextDocumentFeature=void 0;const r=t(9496),i=t(273),o=t(8909),a=t(4904),s=t(1980);class l extends o.TextDocumentEventFeature{constructor(e,n){super(e,r.workspace.onDidOpenTextDocument,i.DidOpenTextDocumentNotification.type,(()=>e.middleware.didOpen),(n=>e.code2ProtocolConverter.asOpenTextDocumentParams(n)),(e=>e),o.TextDocumentEventFeature.textDocumentFilter),this._syncedDocuments=n}get openDocuments(){return this._syncedDocuments.values()}fillClientCapabilities(e){(0,o.ensure)((0,o.ensure)(e,"textDocument"),"synchronization").dynamicRegistration=!0}initialize(e,n){const t=e.resolvedTextDocumentSync;n&&t&&t.openClose&&this.register({id:s.generateUuid(),registerOptions:{documentSelector:n}})}get registrationType(){return i.DidOpenTextDocumentNotification.type}register(e){if(super.register(e),!e.registerOptions.documentSelector)return;const n=this._client.protocol2CodeConverter.asDocumentSelector(e.registerOptions.documentSelector);r.workspace.textDocuments.forEach((e=>{const t=e.uri.toString();if(!this._syncedDocuments.has(t)&&r.languages.match(n,e)>0&&!this._client.hasDedicatedTextSynchronizationFeature(e)){const n=this._client.middleware,r=e=>this._client.sendNotification(this._type,this._createParams(e));(n.didOpen?n.didOpen(e,r):r(e)).catch((e=>{this._client.error(`Sending document notification ${this._type.method} failed`,e)})),this._syncedDocuments.set(t,e)}}))}notificationSent(e,n,t){super.notificationSent(e,n,t),this._syncedDocuments.set(e.uri.toString(),e)}}n.DidOpenTextDocumentFeature=l;class c extends o.TextDocumentEventFeature{constructor(e,n){super(e,r.workspace.onDidCloseTextDocument,i.DidCloseTextDocumentNotification.type,(()=>e.middleware.didClose),(n=>e.code2ProtocolConverter.asCloseTextDocumentParams(n)),(e=>e),o.TextDocumentEventFeature.textDocumentFilter),this._syncedDocuments=n}get registrationType(){return i.DidCloseTextDocumentNotification.type}fillClientCapabilities(e){(0,o.ensure)((0,o.ensure)(e,"textDocument"),"synchronization").dynamicRegistration=!0}initialize(e,n){let t=e.resolvedTextDocumentSync;n&&t&&t.openClose&&this.register({id:s.generateUuid(),registerOptions:{documentSelector:n}})}notificationSent(e,n,t){super.notificationSent(e,n,t),this._syncedDocuments.delete(e.uri.toString())}unregister(e){const n=this._selectors.get(e);super.unregister(e);const t=this._selectors.values();this._syncedDocuments.forEach((e=>{if(r.languages.match(n,e)>0&&!this._selectorFilter(t,e)&&!this._client.hasDedicatedTextSynchronizationFeature(e)){let n=this._client.middleware,t=e=>this._client.sendNotification(this._type,this._createParams(e));this._syncedDocuments.delete(e.uri.toString()),(n.didClose?n.didClose(e,t):t(e)).catch((e=>{this._client.error(`Sending document notification ${this._type.method} failed`,e)}))}}))}}n.DidCloseTextDocumentFeature=c;class u extends o.DynamicDocumentFeature{constructor(e){super(e),this._forcingDelivery=!1,this._changeData=new Map,this._onNotificationSent=new r.EventEmitter}get registrationType(){return i.DidChangeTextDocumentNotification.type}fillClientCapabilities(e){(0,o.ensure)((0,o.ensure)(e,"textDocument"),"synchronization").dynamicRegistration=!0}initialize(e,n){let t=e.resolvedTextDocumentSync;n&&t&&void 0!==t.change&&t.change!==i.TextDocumentSyncKind.None&&this.register({id:s.generateUuid(),registerOptions:Object.assign({},{documentSelector:n},{syncKind:t.change})})}register(e){e.registerOptions.documentSelector&&(this._listener||(this._listener=r.workspace.onDidChangeTextDocument(this.callback,this)),this._changeData.set(e.id,{syncKind:e.registerOptions.syncKind,documentSelector:this._client.protocol2CodeConverter.asDocumentSelector(e.registerOptions.documentSelector)}))}*getDocumentSelectors(){for(const e of this._changeData.values())yield e.documentSelector}async callback(e){if(0===e.contentChanges.length)return;const n=[];for(const t of this._changeData.values())if(r.languages.match(t.documentSelector,e.document)>0&&!this._client.hasDedicatedTextSynchronizationFeature(e.document)){const r=this._client.middleware;if(t.syncKind===i.TextDocumentSyncKind.Incremental){const t=async e=>{const n=this._client.code2ProtocolConverter.asChangeTextDocumentParams(e);await this._client.sendNotification(i.DidChangeTextDocumentNotification.type,n),this.notificationSent(e,i.DidChangeTextDocumentNotification.type,n)};n.push(r.didChange?r.didChange(e,(e=>t(e))):t(e))}else if(t.syncKind===i.TextDocumentSyncKind.Full){const t=async e=>{const n=async e=>{const n=this._client.code2ProtocolConverter.asChangeTextDocumentParams(e.document);await this._client.sendNotification(i.DidChangeTextDocumentNotification.type,n),this.notificationSent(e,i.DidChangeTextDocumentNotification.type,n)};return this._changeDelayer?(this._changeDelayer.uri!==e.document.uri.toString()&&(this.forceDelivery(),this._changeDelayer.uri=e.document.uri.toString()),this._changeDelayer.delayer.trigger((()=>n(e)))):(this._changeDelayer={uri:e.document.uri.toString(),delayer:new a.Delayer(200)},this._changeDelayer.delayer.trigger((()=>n(e)),-1))};n.push(r.didChange?r.didChange(e,(e=>t(e))):t(e))}}return Promise.all(n).then(void 0,(e=>{throw this._client.error(`Sending document notification ${i.DidChangeTextDocumentNotification.type.method} failed`,e),e}))}get onNotificationSent(){return this._onNotificationSent.event}notificationSent(e,n,t){this._onNotificationSent.fire({original:e,type:n,params:t})}unregister(e){this._changeData.delete(e),0===this._changeData.size&&this._listener&&(this._listener.dispose(),this._listener=void 0)}dispose(){void 0!==this._changeDelayer&&this._changeDelayer.delayer.cancel(),this._changeDelayer=void 0,this._forcingDelivery=!1,this._changeData.clear(),this._listener&&(this._listener.dispose(),this._listener=void 0)}forceDelivery(){if(!this._forcingDelivery&&this._changeDelayer)try{this._forcingDelivery=!0,this._changeDelayer.delayer.forceDelivery()}finally{this._forcingDelivery=!1}}getProvider(e){for(const n of this._changeData.values())if(r.languages.match(n.documentSelector,e)>0)return{send:e=>this.callback(e)}}}n.DidChangeTextDocumentFeature=u;class d extends o.TextDocumentEventFeature{constructor(e){super(e,r.workspace.onWillSaveTextDocument,i.WillSaveTextDocumentNotification.type,(()=>e.middleware.willSave),(n=>e.code2ProtocolConverter.asWillSaveTextDocumentParams(n)),(e=>e.document),((e,n)=>o.TextDocumentEventFeature.textDocumentFilter(e,n.document)))}get registrationType(){return i.WillSaveTextDocumentNotification.type}fillClientCapabilities(e){(0,o.ensure)((0,o.ensure)(e,"textDocument"),"synchronization").willSave=!0}initialize(e,n){let t=e.resolvedTextDocumentSync;n&&t&&t.willSave&&this.register({id:s.generateUuid(),registerOptions:{documentSelector:n}})}}n.WillSaveFeature=d;class h extends o.DynamicDocumentFeature{constructor(e){super(e),this._selectors=new Map}getDocumentSelectors(){return this._selectors.values()}get registrationType(){return i.WillSaveTextDocumentWaitUntilRequest.type}fillClientCapabilities(e){(0,o.ensure)((0,o.ensure)(e,"textDocument"),"synchronization").willSaveWaitUntil=!0}initialize(e,n){let t=e.resolvedTextDocumentSync;n&&t&&t.willSaveWaitUntil&&this.register({id:s.generateUuid(),registerOptions:{documentSelector:n}})}register(e){e.registerOptions.documentSelector&&(this._listener||(this._listener=r.workspace.onWillSaveTextDocument(this.callback,this)),this._selectors.set(e.id,this._client.protocol2CodeConverter.asDocumentSelector(e.registerOptions.documentSelector)))}callback(e){if(o.TextDocumentEventFeature.textDocumentFilter(this._selectors.values(),e.document)&&!this._client.hasDedicatedTextSynchronizationFeature(e.document)){let n=this._client.middleware,t=e=>this._client.sendRequest(i.WillSaveTextDocumentWaitUntilRequest.type,this._client.code2ProtocolConverter.asWillSaveTextDocumentParams(e)).then((async e=>{let n=await this._client.protocol2CodeConverter.asTextEdits(e);return void 0===n?[]:n}));e.waitUntil(n.willSaveWaitUntil?n.willSaveWaitUntil(e,t):t(e))}}unregister(e){this._selectors.delete(e),0===this._selectors.size&&this._listener&&(this._listener.dispose(),this._listener=void 0)}dispose(){this._selectors.clear(),this._listener&&(this._listener.dispose(),this._listener=void 0)}}n.WillSaveWaitUntilFeature=h;class p extends o.TextDocumentEventFeature{constructor(e){super(e,r.workspace.onDidSaveTextDocument,i.DidSaveTextDocumentNotification.type,(()=>e.middleware.didSave),(n=>e.code2ProtocolConverter.asSaveTextDocumentParams(n,this._includeText)),(e=>e),o.TextDocumentEventFeature.textDocumentFilter),this._includeText=!1}get registrationType(){return i.DidSaveTextDocumentNotification.type}fillClientCapabilities(e){(0,o.ensure)((0,o.ensure)(e,"textDocument"),"synchronization").didSave=!0}initialize(e,n){const t=e.resolvedTextDocumentSync;if(n&&t&&t.save){const e="boolean"==typeof t.save?{includeText:!1}:{includeText:!!t.save.includeText};this.register({id:s.generateUuid(),registerOptions:Object.assign({},{documentSelector:n},e)})}}register(e){this._includeText=!!e.registerOptions.includeText,super.register(e)}}n.DidSaveTextDocumentFeature=p},328:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.TypeDefinitionFeature=void 0;const r=t(9496),i=t(273),o=t(8909);class a extends o.TextDocumentLanguageFeature{constructor(e){super(e,i.TypeDefinitionRequest.type)}fillClientCapabilities(e){(0,o.ensure)((0,o.ensure)(e,"textDocument"),"typeDefinition").dynamicRegistration=!0;let n=(0,o.ensure)((0,o.ensure)(e,"textDocument"),"typeDefinition");n.dynamicRegistration=!0,n.linkSupport=!0}initialize(e,n){let[t,r]=this.getRegistration(n,e.typeDefinitionProvider);t&&r&&this.register({id:t,registerOptions:r})}registerLanguageProvider(e){const n=e.documentSelector,t={provideTypeDefinition:(e,n,t)=>{const r=this._client,o=(e,n,t)=>r.sendRequest(i.TypeDefinitionRequest.type,r.code2ProtocolConverter.asTextDocumentPositionParams(e,n),t).then((e=>t.isCancellationRequested?null:r.protocol2CodeConverter.asDefinitionResult(e,t)),(e=>r.handleFailedRequest(i.TypeDefinitionRequest.type,t,e,null))),a=r.middleware;return a.provideTypeDefinition?a.provideTypeDefinition(e,n,t,o):o(e,n,t)}};return[this.registerProvider(n,t),t]}registerProvider(e,n){return r.languages.registerTypeDefinitionProvider(this._client.protocol2CodeConverter.asDocumentSelector(e),n)}}n.TypeDefinitionFeature=a},4175:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.TypeHierarchyFeature=void 0;const r=t(9496),i=t(273),o=t(8909);class a{constructor(e){this.client=e,this.middleware=e.middleware}prepareTypeHierarchy(e,n,t){const r=this.client,o=this.middleware,a=(e,n,t)=>{const o=r.code2ProtocolConverter.asTextDocumentPositionParams(e,n);return r.sendRequest(i.TypeHierarchyPrepareRequest.type,o,t).then((e=>t.isCancellationRequested?null:r.protocol2CodeConverter.asTypeHierarchyItems(e,t)),(e=>r.handleFailedRequest(i.TypeHierarchyPrepareRequest.type,t,e,null)))};return o.prepareTypeHierarchy?o.prepareTypeHierarchy(e,n,t,a):a(e,n,t)}provideTypeHierarchySupertypes(e,n){const t=this.client,r=this.middleware,o=(e,n)=>{const r={item:t.code2ProtocolConverter.asTypeHierarchyItem(e)};return t.sendRequest(i.TypeHierarchySupertypesRequest.type,r,n).then((e=>n.isCancellationRequested?null:t.protocol2CodeConverter.asTypeHierarchyItems(e,n)),(e=>t.handleFailedRequest(i.TypeHierarchySupertypesRequest.type,n,e,null)))};return r.provideTypeHierarchySupertypes?r.provideTypeHierarchySupertypes(e,n,o):o(e,n)}provideTypeHierarchySubtypes(e,n){const t=this.client,r=this.middleware,o=(e,n)=>{const r={item:t.code2ProtocolConverter.asTypeHierarchyItem(e)};return t.sendRequest(i.TypeHierarchySubtypesRequest.type,r,n).then((e=>n.isCancellationRequested?null:t.protocol2CodeConverter.asTypeHierarchyItems(e,n)),(e=>t.handleFailedRequest(i.TypeHierarchySubtypesRequest.type,n,e,null)))};return r.provideTypeHierarchySubtypes?r.provideTypeHierarchySubtypes(e,n,o):o(e,n)}}class s extends o.TextDocumentLanguageFeature{constructor(e){super(e,i.TypeHierarchyPrepareRequest.type)}fillClientCapabilities(e){(0,o.ensure)((0,o.ensure)(e,"textDocument"),"typeHierarchy").dynamicRegistration=!0}initialize(e,n){const[t,r]=this.getRegistration(n,e.typeHierarchyProvider);t&&r&&this.register({id:t,registerOptions:r})}registerLanguageProvider(e){const n=this._client,t=new a(n);return[r.languages.registerTypeHierarchyProvider(n.protocol2CodeConverter.asDocumentSelector(e.documentSelector),t),t]}}n.TypeHierarchyFeature=s},4904:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.forEach=n.mapAsync=n.map=n.Semaphore=n.Delayer=void 0;const r=t(273);n.Delayer=class{constructor(e){this.defaultDelay=e,this.timeout=void 0,this.completionPromise=void 0,this.onSuccess=void 0,this.task=void 0}trigger(e,n=this.defaultDelay){return this.task=e,n>=0&&this.cancelTimeout(),this.completionPromise||(this.completionPromise=new Promise((e=>{this.onSuccess=e})).then((()=>{this.completionPromise=void 0,this.onSuccess=void 0;var e=this.task();return this.task=void 0,e}))),(n>=0||void 0===this.timeout)&&(this.timeout=(0,r.RAL)().timer.setTimeout((()=>{this.timeout=void 0,this.onSuccess(void 0)}),n>=0?n:this.defaultDelay)),this.completionPromise}forceDelivery(){if(!this.completionPromise)return;this.cancelTimeout();let e=this.task();return this.completionPromise=void 0,this.onSuccess=void 0,this.task=void 0,e}isTriggered(){return void 0!==this.timeout}cancel(){this.cancelTimeout(),this.completionPromise=void 0}cancelTimeout(){void 0!==this.timeout&&(this.timeout.dispose(),this.timeout=void 0)}},n.Semaphore=class{constructor(e=1){if(e<=0)throw new Error("Capacity must be greater than 0");this._capacity=e,this._active=0,this._waiting=[]}lock(e){return new Promise(((n,t)=>{this._waiting.push({thunk:e,resolve:n,reject:t}),this.runNext()}))}get active(){return this._active}runNext(){0!==this._waiting.length&&this._active!==this._capacity&&(0,r.RAL)().timer.setImmediate((()=>this.doRunNext()))}doRunNext(){if(0===this._waiting.length||this._active===this._capacity)return;const e=this._waiting.shift();if(this._active++,this._active>this._capacity)throw new Error("To many thunks active");try{const n=e.thunk();n instanceof Promise?n.then((n=>{this._active--,e.resolve(n),this.runNext()}),(n=>{this._active--,e.reject(n),this.runNext()})):(this._active--,e.resolve(n),this.runNext())}catch(n){this._active--,e.reject(n),this.runNext()}}};class i{constructor(e=15){this.yieldAfter=Math.max(e,15),this.startTime=Date.now(),this.counter=0,this.total=0,this.counterInterval=1}start(){this.startTime=Date.now()}shouldYield(){if(++this.counter>=this.counterInterval){const e=Date.now()-this.startTime,n=Math.max(0,this.yieldAfter-e);if(this.total+=this.counter,this.counter=0,e>=this.yieldAfter||n<=1)return this.counterInterval=1,this.total=0,!0;switch(e){case 0:case 1:this.counterInterval=2*this.total}}return!1}}n.map=async function(e,n,t,o){if(0===e.length)return[];const a=new Array(e.length),s=new i(o?.yieldAfter);function l(t){s.start();for(let r=t;r<e.length;r++)if(a[r]=n(e[r]),s.shouldYield())return o?.yieldCallback&&o.yieldCallback(),r+1;return-1}let c=l(0);for(;-1!==c&&(void 0===t||!t.isCancellationRequested);)c=await new Promise((e=>{(0,r.RAL)().timer.setImmediate((()=>{e(l(c))}))}));return a},n.mapAsync=async function(e,n,t,o){if(0===e.length)return[];const a=new Array(e.length),s=new i(o?.yieldAfter);async function l(r){s.start();for(let i=r;i<e.length;i++)if(a[i]=await n(e[i],t),s.shouldYield())return o?.yieldCallback&&o.yieldCallback(),i+1;return-1}let c=await l(0);for(;-1!==c&&(void 0===t||!t.isCancellationRequested);)c=await new Promise((e=>{(0,r.RAL)().timer.setImmediate((()=>{e(l(c))}))}));return a},n.forEach=async function(e,n,t,o){if(0===e.length)return;const a=new i(o?.yieldAfter);function s(t){a.start();for(let r=t;r<e.length;r++)if(n(e[r]),a.shouldYield())return o?.yieldCallback&&o.yieldCallback(),r+1;return-1}let l=s(0);for(;-1!==l&&(void 0===t||!t.isCancellationRequested);)l=await new Promise((e=>{(0,r.RAL)().timer.setImmediate((()=>{e(s(l))}))}))}},9763:(e,n)=>{"use strict";function t(e){return"string"==typeof e||e instanceof String}function r(e){return"function"==typeof e}function i(e){return Array.isArray(e)}function o(e){return e&&r(e.then)}Object.defineProperty(n,"__esModule",{value:!0}),n.asPromise=n.thenable=n.typedArray=n.stringArray=n.array=n.func=n.error=n.number=n.string=n.boolean=void 0,n.boolean=function(e){return!0===e||!1===e},n.string=t,n.number=function(e){return"number"==typeof e||e instanceof Number},n.error=function(e){return e instanceof Error},n.func=r,n.array=i,n.stringArray=function(e){return i(e)&&e.every((e=>t(e)))},n.typedArray=function(e,n){return Array.isArray(e)&&e.every(n)},n.thenable=o,n.asPromise=function(e){return e instanceof Promise?e:o(e)?new Promise(((n,t)=>{e.then((e=>n(e)),(e=>t(e)))})):Promise.resolve(e)}},1980:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.generateUuid=n.parse=n.isUUID=n.v4=n.empty=void 0;class t{constructor(e){this._value=e}asHex(){return this._value}equals(e){return this.asHex()===e.asHex()}}class r extends t{constructor(){super([r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),"-",r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),"-","4",r._randomHex(),r._randomHex(),r._randomHex(),"-",r._oneOf(r._timeHighBits),r._randomHex(),r._randomHex(),r._randomHex(),"-",r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex()].join(""))}static _oneOf(e){return e[Math.floor(e.length*Math.random())]}static _randomHex(){return r._oneOf(r._chars)}}function i(){return new r}r._chars=["0","1","2","3","4","5","6","6","7","8","9","a","b","c","d","e","f"],r._timeHighBits=["8","9","a","b"],n.empty=new t("00000000-0000-0000-0000-000000000000"),n.v4=i;const o=/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;function a(e){return o.test(e)}n.isUUID=a,n.parse=function(e){if(!a(e))throw new Error("invalid uuid");return new t(e)},n.generateUuid=function(){return i().asHex()}},5941:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.WorkspaceFoldersFeature=n.arrayDiff=void 0;const r=t(1980),i=t(9496),o=t(273);function a(e,n){if(void 0!==e)return e[n]}function s(e,n){return e.filter((e=>n.indexOf(e)<0))}n.arrayDiff=s,n.WorkspaceFoldersFeature=class{constructor(e){this._client=e,this._listeners=new Map}getState(){return{kind:"workspace",id:this.registrationType.method,registrations:this._listeners.size>0}}get registrationType(){return o.DidChangeWorkspaceFoldersNotification.type}fillInitializeParams(e){const n=i.workspace.workspaceFolders;this.initializeWithFolders(n),e.workspaceFolders=void 0===n?null:n.map((e=>this.asProtocol(e)))}initializeWithFolders(e){this._initialFolders=e}fillClientCapabilities(e){e.workspace=e.workspace||{},e.workspace.workspaceFolders=!0}initialize(e){const n=this._client;n.onRequest(o.WorkspaceFoldersRequest.type,(e=>{const t=()=>{const e=i.workspace.workspaceFolders;return void 0===e?null:e.map((e=>this.asProtocol(e)))},r=n.middleware.workspace;return r&&r.workspaceFolders?r.workspaceFolders(e,t):t()}));const t=a(a(a(e,"workspace"),"workspaceFolders"),"changeNotifications");let s;"string"==typeof t?s=t:!0===t&&(s=r.generateUuid()),s&&this.register({id:s,registerOptions:void 0})}sendInitialEvent(e){let n;if(this._initialFolders&&e){const t=s(this._initialFolders,e),r=s(e,this._initialFolders);(r.length>0||t.length>0)&&(n=this.doSendEvent(r,t))}else this._initialFolders?n=this.doSendEvent([],this._initialFolders):e&&(n=this.doSendEvent(e,[]));void 0!==n&&n.catch((e=>{this._client.error(`Sending notification ${o.DidChangeWorkspaceFoldersNotification.type.method} failed`,e)}))}doSendEvent(e,n){let t={event:{added:e.map((e=>this.asProtocol(e))),removed:n.map((e=>this.asProtocol(e)))}};return this._client.sendNotification(o.DidChangeWorkspaceFoldersNotification.type,t)}register(e){let n=e.id,t=this._client,r=i.workspace.onDidChangeWorkspaceFolders((e=>{let n=e=>this.doSendEvent(e.added,e.removed),r=t.middleware.workspace;(r&&r.didChangeWorkspaceFolders?r.didChangeWorkspaceFolders(e,n):n(e)).catch((e=>{this._client.error(`Sending notification ${o.DidChangeWorkspaceFoldersNotification.type.method} failed`,e)}))}));this._listeners.set(n,r),this.sendInitialEvent(i.workspace.workspaceFolders)}unregister(e){let n=this._listeners.get(e);void 0!==n&&(this._listeners.delete(e),n.dispose())}dispose(){for(let e of this._listeners.values())e.dispose();this._listeners.clear()}asProtocol(e){return void 0===e?null:{uri:this._client.code2ProtocolConverter.asUri(e.uri),name:e.name}}}},3051:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.WorkspaceSymbolFeature=void 0;const r=t(9496),i=t(273),o=t(8909),a=t(2483),s=t(1980);class l extends o.WorkspaceFeature{constructor(e){super(e,i.WorkspaceSymbolRequest.type)}fillClientCapabilities(e){let n=(0,o.ensure)((0,o.ensure)(e,"workspace"),"symbol");n.dynamicRegistration=!0,n.symbolKind={valueSet:a.SupportedSymbolKinds},n.tagSupport={valueSet:a.SupportedSymbolTags},n.resolveSupport={properties:["location.range"]}}initialize(e){e.workspaceSymbolProvider&&this.register({id:s.generateUuid(),registerOptions:!0===e.workspaceSymbolProvider?{workDoneProgress:!1}:e.workspaceSymbolProvider})}registerLanguageProvider(e){const n={provideWorkspaceSymbols:(e,n)=>{const t=this._client,r=(e,n)=>t.sendRequest(i.WorkspaceSymbolRequest.type,{query:e},n).then((e=>n.isCancellationRequested?null:t.protocol2CodeConverter.asSymbolInformations(e,n)),(e=>t.handleFailedRequest(i.WorkspaceSymbolRequest.type,n,e,null))),o=t.middleware;return o.provideWorkspaceSymbols?o.provideWorkspaceSymbols(e,n,r):r(e,n)},resolveWorkspaceSymbol:!0===e.resolveProvider?(e,n)=>{const t=this._client,r=(e,n)=>t.sendRequest(i.WorkspaceSymbolResolveRequest.type,t.code2ProtocolConverter.asWorkspaceSymbol(e),n).then((e=>n.isCancellationRequested?null:t.protocol2CodeConverter.asSymbolInformation(e)),(e=>t.handleFailedRequest(i.WorkspaceSymbolResolveRequest.type,n,e,null))),o=t.middleware;return o.resolveWorkspaceSymbol?o.resolveWorkspaceSymbol(e,n,r):r(e,n)}:void 0};return[r.languages.registerWorkspaceSymbolProvider(n),n]}}n.WorkspaceSymbolFeature=l},2850:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var i=Object.getOwnPropertyDescriptor(n,t);i&&!("get"in i?!n.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,i)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__exportStar||function(e,n){for(var t in e)"default"===t||Object.prototype.hasOwnProperty.call(n,t)||r(n,e,t)};Object.defineProperty(n,"__esModule",{value:!0}),n.SettingMonitor=n.LanguageClient=n.TransportKind=void 0;const o=t(2081),a=t(7147),s=t(1017),l=t(1249),c=t(9496),u=t(9763),d=t(4384),h=t(794),p=t(6560);i(t(6560),n),i(t(5734),n);var f,m,g,E,T,R;!function(e){e[e.stdio=0]="stdio",e[e.ipc=1]="ipc",e[e.pipe=2]="pipe",e[e.socket=3]="socket"}(f=n.TransportKind||(n.TransportKind={})),function(e){e.isSocket=function(e){const n=e;return n&&n.kind===f.socket&&u.number(n.port)}}(m||(m={})),function(e){e.is=function(e){return u.string(e.command)}}(g||(g={})),function(e){e.is=function(e){return u.string(e.module)}}(E||(E={})),function(e){e.is=function(e){let n=e;return n&&void 0!==n.writer&&void 0!==n.reader}}(T||(T={})),function(e){e.is=function(e){let n=e;return n&&void 0!==n.process&&"boolean"==typeof n.detached}}(R||(R={}));class S extends d.BaseLanguageClient{constructor(e,n,t,r,i){let o,a,s,l,c;u.string(n)?(o=e,a=n,s=t,l=r,c=!!i):(o=e.toLowerCase(),a=e,s=n,l=t,c=r),void 0===c&&(c=!1),super(o,a,l),this._serverOptions=s,this._forceDebug=c,this._isInDebugMode=c;try{this.checkVersion()}catch(e){throw u.string(e.message)&&this.outputChannel.appendLine(e.message),e}}checkVersion(){const e=l.parse(c.version);if(!e)throw new Error(`No valid VS Code version detected. Version string is: ${c.version}`);if(e.prerelease&&e.prerelease.length>0&&(e.prerelease=[]),!l.satisfies(e,"^1.67.0"))throw new Error(`The language client requires VS Code version ^1.67.0 but received version ${c.version}`)}get isInDebugMode(){return this._isInDebugMode}async restart(){await this.stop(),this.isInDebugMode?(await new Promise((e=>setTimeout(e,1e3))),await this.start()):await this.start()}stop(e=2e3){return super.stop(e).finally((()=>{if(this._serverProcess){const e=this._serverProcess;this._serverProcess=void 0,void 0!==this._isDetached&&this._isDetached||this.checkProcessDied(e),this._isDetached=void 0}}))}checkProcessDied(e){e&&void 0!==e.pid&&setTimeout((()=>{try{void 0!==e.pid&&(process.kill(e.pid,0),(0,h.terminate)(e))}catch(e){}}),2e3)}handleConnectionClosed(){this._serverProcess=void 0,super.handleConnectionClosed()}fillInitializeParams(e){super.fillInitializeParams(e),null===e.processId&&(e.processId=process.pid)}createMessageTransports(e){function n(e,n){if(!e&&!n)return;const t=Object.create(null);return Object.keys(process.env).forEach((e=>t[e]=process.env[e])),n&&(t.ELECTRON_RUN_AS_NODE="1",t.ELECTRON_NO_ASAR="1"),e&&Object.keys(e).forEach((n=>t[n]=e[n])),t}const t=["--debug=","--debug-brk=","--inspect=","--inspect-brk="],r=["--debug","--debug-brk","--inspect","--inspect-brk"];function i(e){if(null===e.stdin||null===e.stdout||null===e.stderr)throw new Error("Process created without stdio streams")}const a=this._serverOptions;if(u.func(a))return a().then((n=>{if(d.MessageTransports.is(n))return this._isDetached=!!n.detached,n;if(T.is(n))return this._isDetached=!!n.detached,{reader:new p.StreamMessageReader(n.reader),writer:new p.StreamMessageWriter(n.writer)};{let t;return R.is(n)?(t=n.process,this._isDetached=n.detached):(t=n,this._isDetached=!1),t.stderr.on("data",(n=>this.outputChannel.append(u.string(n)?n:n.toString(e)))),{reader:new p.StreamMessageReader(t.stdout),writer:new p.StreamMessageWriter(t.stdin)}}}));let s,l=a;return l.run||l.debug?this._forceDebug||function(){let e=process.execArgv;return!!e&&e.some((e=>t.some((n=>e.startsWith(n)))||r.some((n=>e===n))))}()?(s=l.debug,this._isInDebugMode=!0):(s=l.run,this._isInDebugMode=!1):s=a,this._getServerWorkingDir(s.options).then((t=>{if(E.is(s)&&s.module){let r=s,a=r.transport||f.stdio;if(!r.runtime){let s;return new Promise(((l,c)=>{const d=(r.args&&r.args.slice())??[];a===f.ipc?d.push("--node-ipc"):a===f.stdio?d.push("--stdio"):a===f.pipe?(s=(0,p.generateRandomPipeName)(),d.push(`--pipe=${s}`)):m.isSocket(a)&&d.push(`--socket=${a.port}`),d.push(`--clientProcessId=${process.pid.toString()}`);const h=r.options??Object.create(null);if(h.env=n(h.env,!0),h.execArgv=h.execArgv||[],h.cwd=t,h.silent=!0,a===f.ipc||a===f.stdio){const n=o.fork(r.module,d||[],h);i(n),this._serverProcess=n,n.stderr.on("data",(n=>this.outputChannel.append(u.string(n)?n:n.toString(e)))),a===f.ipc?(n.stdout.on("data",(n=>this.outputChannel.append(u.string(n)?n:n.toString(e)))),l({reader:new p.IPCMessageReader(this._serverProcess),writer:new p.IPCMessageWriter(this._serverProcess)})):l({reader:new p.StreamMessageReader(n.stdout),writer:new p.StreamMessageWriter(n.stdin)})}else a===f.pipe?(0,p.createClientPipeTransport)(s).then((n=>{const t=o.fork(r.module,d||[],h);i(t),this._serverProcess=t,t.stderr.on("data",(n=>this.outputChannel.append(u.string(n)?n:n.toString(e)))),t.stdout.on("data",(n=>this.outputChannel.append(u.string(n)?n:n.toString(e)))),n.onConnected().then((e=>{l({reader:e[0],writer:e[1]})}),c)}),c):m.isSocket(a)&&(0,p.createClientSocketTransport)(a.port).then((n=>{const t=o.fork(r.module,d||[],h);i(t),this._serverProcess=t,t.stderr.on("data",(n=>this.outputChannel.append(u.string(n)?n:n.toString(e)))),t.stdout.on("data",(n=>this.outputChannel.append(u.string(n)?n:n.toString(e)))),n.onConnected().then((e=>{l({reader:e[0],writer:e[1]})}),c)}),c)}))}{const i=[],s=r.options??Object.create(null);s.execArgv&&s.execArgv.forEach((e=>i.push(e))),i.push(r.module),r.args&&r.args.forEach((e=>i.push(e)));const l=Object.create(null);l.cwd=t,l.env=n(s.env,!1);const c=this._getRuntimePath(r.runtime,t);let d;if(a===f.ipc?(l.stdio=[null,null,null,"ipc"],i.push("--node-ipc")):a===f.stdio?i.push("--stdio"):a===f.pipe?(d=(0,p.generateRandomPipeName)(),i.push(`--pipe=${d}`)):m.isSocket(a)&&i.push(`--socket=${a.port}`),i.push(`--clientProcessId=${process.pid.toString()}`),a===f.ipc||a===f.stdio){const n=o.spawn(c,i,l);return n&&n.pid?(this._serverProcess=n,n.stderr.on("data",(n=>this.outputChannel.append(u.string(n)?n:n.toString(e)))),a===f.ipc?(n.stdout.on("data",(n=>this.outputChannel.append(u.string(n)?n:n.toString(e)))),Promise.resolve({reader:new p.IPCMessageReader(n),writer:new p.IPCMessageWriter(n)})):Promise.resolve({reader:new p.StreamMessageReader(n.stdout),writer:new p.StreamMessageWriter(n.stdin)})):y(n,`Launching server using runtime ${c} failed.`)}if(a===f.pipe)return(0,p.createClientPipeTransport)(d).then((n=>{const t=o.spawn(c,i,l);return t&&t.pid?(this._serverProcess=t,t.stderr.on("data",(n=>this.outputChannel.append(u.string(n)?n:n.toString(e)))),t.stdout.on("data",(n=>this.outputChannel.append(u.string(n)?n:n.toString(e)))),n.onConnected().then((e=>({reader:e[0],writer:e[1]})))):y(t,`Launching server using runtime ${c} failed.`)}));if(m.isSocket(a))return(0,p.createClientSocketTransport)(a.port).then((n=>{const t=o.spawn(c,i,l);return t&&t.pid?(this._serverProcess=t,t.stderr.on("data",(n=>this.outputChannel.append(u.string(n)?n:n.toString(e)))),t.stdout.on("data",(n=>this.outputChannel.append(u.string(n)?n:n.toString(e)))),n.onConnected().then((e=>({reader:e[0],writer:e[1]})))):y(t,`Launching server using runtime ${c} failed.`)}))}}else if(g.is(s)&&s.command){const n=s,r=void 0!==s.args?s.args.slice(0):[];let i;const a=s.transport;if(a===f.stdio)r.push("--stdio");else if(a===f.pipe)i=(0,p.generateRandomPipeName)(),r.push(`--pipe=${i}`);else if(m.isSocket(a))r.push(`--socket=${a.port}`);else if(a===f.ipc)throw new Error("Transport kind ipc is not support for command executable");const l=Object.assign({},n.options);if(l.cwd=l.cwd||t,void 0===a||a===f.stdio){const t=o.spawn(n.command,r,l);return t&&t.pid?(t.stderr.on("data",(n=>this.outputChannel.append(u.string(n)?n:n.toString(e)))),this._serverProcess=t,this._isDetached=!!l.detached,Promise.resolve({reader:new p.StreamMessageReader(t.stdout),writer:new p.StreamMessageWriter(t.stdin)})):y(t,`Launching server using command ${n.command} failed.`)}if(a===f.pipe)return(0,p.createClientPipeTransport)(i).then((t=>{const i=o.spawn(n.command,r,l);return i&&i.pid?(this._serverProcess=i,this._isDetached=!!l.detached,i.stderr.on("data",(n=>this.outputChannel.append(u.string(n)?n:n.toString(e)))),i.stdout.on("data",(n=>this.outputChannel.append(u.string(n)?n:n.toString(e)))),t.onConnected().then((e=>({reader:e[0],writer:e[1]})))):y(i,`Launching server using command ${n.command} failed.`)}));if(m.isSocket(a))return(0,p.createClientSocketTransport)(a.port).then((t=>{const i=o.spawn(n.command,r,l);return i&&i.pid?(this._serverProcess=i,this._isDetached=!!l.detached,i.stderr.on("data",(n=>this.outputChannel.append(u.string(n)?n:n.toString(e)))),i.stdout.on("data",(n=>this.outputChannel.append(u.string(n)?n:n.toString(e)))),t.onConnected().then((e=>({reader:e[0],writer:e[1]})))):y(i,`Launching server using command ${n.command} failed.`)}))}return Promise.reject(new Error("Unsupported server configuration "+JSON.stringify(a,null,4)))}))}_getRuntimePath(e,n){if(s.isAbsolute(e))return e;const t=this._mainGetRootPath();if(void 0!==t){const n=s.join(t,e);if(a.existsSync(n))return n}if(void 0!==n){const t=s.join(n,e);if(a.existsSync(t))return t}return e}_mainGetRootPath(){let e=c.workspace.workspaceFolders;if(!e||0===e.length)return;let n=e[0];return"file"===n.uri.scheme?n.uri.fsPath:void 0}_getServerWorkingDir(e){let n=e&&e.cwd;return n||(n=this.clientOptions.workspaceFolder?this.clientOptions.workspaceFolder.uri.fsPath:this._mainGetRootPath()),n?new Promise((e=>{a.lstat(n,((t,r)=>{e(!t&&r.isDirectory()?n:void 0)}))})):Promise.resolve(void 0)}getLocale(){const e=process.env.VSCODE_NLS_CONFIG;if(void 0===e)return"en";let n;try{n=JSON.parse(e)}catch(e){}return void 0===n||"string"!=typeof n.locale?"en":n.locale}}function y(e,n){return null===e?Promise.reject(n):new Promise(((t,r)=>{e.on("error",(e=>{r(`${n} ${e}`)})),setImmediate((()=>r(n)))}))}n.LanguageClient=S,n.SettingMonitor=class{constructor(e,n){this._client=e,this._setting=n,this._listeners=[]}start(){return c.workspace.onDidChangeConfiguration(this.onDidChangeConfiguration,this,this._listeners),this.onDidChangeConfiguration(),new c.Disposable((()=>{this._client.needsStop()&&this._client.stop()}))}onDidChangeConfiguration(){let e=this._setting.indexOf("."),n=e>=0?this._setting.substr(0,e):this._setting,t=e>=0?this._setting.substr(e+1):void 0,r=t?c.workspace.getConfiguration(n).get(t,!1):c.workspace.getConfiguration(n);r&&this._client.needsStart()?this._client.start().catch((e=>this._client.error("Start failed after configuration change",e,"force"))):!r&&this._client.needsStop()&&this._client.stop().catch((e=>this._client.error("Stop failed after configuration change",e,"force")))}}},794:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.terminate=void 0;const r=t(2081),i=t(1017),o="win32"===process.platform,a="darwin"===process.platform,s="linux"===process.platform;n.terminate=function(e,n){if(o)try{let t={stdio:["pipe","pipe","ignore"]};return n&&(t.cwd=n),r.execFileSync("taskkill",["/T","/F","/PID",e.pid.toString()],t),!0}catch(e){return!1}else{if(!s&&!a)return e.kill("SIGKILL"),!0;try{var t=(0,i.join)(__dirname,"terminateProcess.sh");return!r.spawnSync(t,[e.pid.toString()]).error}catch(e){return!1}}}},2847:(e,n,t)=>{"use strict";e.exports=t(2850)},1661:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var i=Object.getOwnPropertyDescriptor(n,t);i&&!("get"in i?!n.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,i)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__exportStar||function(e,n){for(var t in e)"default"===t||Object.prototype.hasOwnProperty.call(n,t)||r(n,e,t)};Object.defineProperty(n,"__esModule",{value:!0}),n.LSPErrorCodes=n.createProtocolConnection=void 0,i(t(4389),n),i(t(1674),n),i(t(6140),n),i(t(542),n);var o,a=t(3767);Object.defineProperty(n,"createProtocolConnection",{enumerable:!0,get:function(){return a.createProtocolConnection}}),(o=n.LSPErrorCodes||(n.LSPErrorCodes={})).lspReservedErrorRangeStart=-32899,o.RequestFailed=-32803,o.ServerCancelled=-32802,o.ContentModified=-32801,o.RequestCancelled=-32800,o.lspReservedErrorRangeEnd=-32800},3767:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.createProtocolConnection=void 0;const r=t(4389);n.createProtocolConnection=function(e,n,t,i){return r.ConnectionStrategy.is(i)&&(i={connectionStrategy:i}),(0,r.createMessageConnection)(e,n,t,i)}},6140:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.ProtocolNotificationType=n.ProtocolNotificationType0=n.ProtocolRequestType=n.ProtocolRequestType0=n.RegistrationType=void 0;const r=t(4389);n.RegistrationType=class{constructor(e){this.method=e}};class i extends r.RequestType0{constructor(e){super(e)}}n.ProtocolRequestType0=i;class o extends r.RequestType{constructor(e){super(e,r.ParameterStructures.byName)}}n.ProtocolRequestType=o;class a extends r.NotificationType0{constructor(e){super(e)}}n.ProtocolNotificationType0=a;class s extends r.NotificationType{constructor(e){super(e,r.ParameterStructures.byName)}}n.ProtocolNotificationType=s},2918:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.CallHierarchyOutgoingCallsRequest=n.CallHierarchyIncomingCallsRequest=n.CallHierarchyPrepareRequest=void 0;const r=t(6140);var i,o,a;(a=n.CallHierarchyPrepareRequest||(n.CallHierarchyPrepareRequest={})).method="textDocument/prepareCallHierarchy",a.type=new r.ProtocolRequestType(a.method),(o=n.CallHierarchyIncomingCallsRequest||(n.CallHierarchyIncomingCallsRequest={})).method="callHierarchy/incomingCalls",o.type=new r.ProtocolRequestType(o.method),(i=n.CallHierarchyOutgoingCallsRequest||(n.CallHierarchyOutgoingCallsRequest={})).method="callHierarchy/outgoingCalls",i.type=new r.ProtocolRequestType(i.method)},9891:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.ColorPresentationRequest=n.DocumentColorRequest=void 0;const r=t(6140);var i;(i=n.DocumentColorRequest||(n.DocumentColorRequest={})).method="textDocument/documentColor",i.type=new r.ProtocolRequestType(i.method),(n.ColorPresentationRequest||(n.ColorPresentationRequest={})).type=new r.ProtocolRequestType("textDocument/colorPresentation")},5934:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.ConfigurationRequest=void 0;const r=t(6140);(n.ConfigurationRequest||(n.ConfigurationRequest={})).type=new r.ProtocolRequestType("workspace/configuration")},764:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.DeclarationRequest=void 0;const r=t(6140);var i;(i=n.DeclarationRequest||(n.DeclarationRequest={})).method="textDocument/declaration",i.type=new r.ProtocolRequestType(i.method)},9824:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.DiagnosticRefreshRequest=n.WorkspaceDiagnosticRequest=n.DocumentDiagnosticRequest=n.DocumentDiagnosticReportKind=n.DiagnosticServerCancellationData=void 0;const r=t(4389),i=t(9533),o=t(6140);var a,s,l,c;(n.DiagnosticServerCancellationData||(n.DiagnosticServerCancellationData={})).is=function(e){const n=e;return n&&i.boolean(n.retriggerRequest)},(c=n.DocumentDiagnosticReportKind||(n.DocumentDiagnosticReportKind={})).Full="full",c.Unchanged="unchanged",(l=n.DocumentDiagnosticRequest||(n.DocumentDiagnosticRequest={})).method="textDocument/diagnostic",l.type=new o.ProtocolRequestType(l.method),l.partialResult=new r.ProgressType,(s=n.WorkspaceDiagnosticRequest||(n.WorkspaceDiagnosticRequest={})).method="workspace/diagnostic",s.type=new o.ProtocolRequestType(s.method),s.partialResult=new r.ProgressType,(a=n.DiagnosticRefreshRequest||(n.DiagnosticRefreshRequest={})).method="workspace/diagnostic/refresh",a.type=new o.ProtocolRequestType0(a.method)},7846:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.WillDeleteFilesRequest=n.DidDeleteFilesNotification=n.DidRenameFilesNotification=n.WillRenameFilesRequest=n.DidCreateFilesNotification=n.WillCreateFilesRequest=n.FileOperationPatternKind=void 0;const r=t(6140);var i,o,a,s,l,c,u;(u=n.FileOperationPatternKind||(n.FileOperationPatternKind={})).file="file",u.folder="folder",(c=n.WillCreateFilesRequest||(n.WillCreateFilesRequest={})).method="workspace/willCreateFiles",c.type=new r.ProtocolRequestType(c.method),(l=n.DidCreateFilesNotification||(n.DidCreateFilesNotification={})).method="workspace/didCreateFiles",l.type=new r.ProtocolNotificationType(l.method),(s=n.WillRenameFilesRequest||(n.WillRenameFilesRequest={})).method="workspace/willRenameFiles",s.type=new r.ProtocolRequestType(s.method),(a=n.DidRenameFilesNotification||(n.DidRenameFilesNotification={})).method="workspace/didRenameFiles",a.type=new r.ProtocolNotificationType(a.method),(o=n.DidDeleteFilesNotification||(n.DidDeleteFilesNotification={})).method="workspace/didDeleteFiles",o.type=new r.ProtocolNotificationType(o.method),(i=n.WillDeleteFilesRequest||(n.WillDeleteFilesRequest={})).method="workspace/willDeleteFiles",i.type=new r.ProtocolRequestType(i.method)},3394:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.FoldingRangeRequest=void 0;const r=t(6140);var i;(i=n.FoldingRangeRequest||(n.FoldingRangeRequest={})).method="textDocument/foldingRange",i.type=new r.ProtocolRequestType(i.method)},2122:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.ImplementationRequest=void 0;const r=t(6140);var i;(i=n.ImplementationRequest||(n.ImplementationRequest={})).method="textDocument/implementation",i.type=new r.ProtocolRequestType(i.method)},9999:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.InlayHintRefreshRequest=n.InlayHintResolveRequest=n.InlayHintRequest=void 0;const r=t(6140);var i,o,a;(a=n.InlayHintRequest||(n.InlayHintRequest={})).method="textDocument/inlayHint",a.type=new r.ProtocolRequestType(a.method),(o=n.InlayHintResolveRequest||(n.InlayHintResolveRequest={})).method="inlayHint/resolve",o.type=new r.ProtocolRequestType(o.method),(i=n.InlayHintRefreshRequest||(n.InlayHintRefreshRequest={})).method="workspace/inlayHint/refresh",i.type=new r.ProtocolRequestType0(i.method)},5246:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.InlineValueRefreshRequest=n.InlineValueRequest=void 0;const r=t(6140);var i,o;(o=n.InlineValueRequest||(n.InlineValueRequest={})).method="textDocument/inlineValue",o.type=new r.ProtocolRequestType(o.method),(i=n.InlineValueRefreshRequest||(n.InlineValueRefreshRequest={})).method="workspace/inlineValue/refresh",i.type=new r.ProtocolRequestType0(i.method)},542:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.WorkspaceSymbolRequest=n.CodeActionResolveRequest=n.CodeActionRequest=n.DocumentSymbolRequest=n.DocumentHighlightRequest=n.ReferencesRequest=n.DefinitionRequest=n.SignatureHelpRequest=n.SignatureHelpTriggerKind=n.HoverRequest=n.CompletionResolveRequest=n.CompletionRequest=n.CompletionTriggerKind=n.PublishDiagnosticsNotification=n.WatchKind=n.RelativePattern=n.FileChangeType=n.DidChangeWatchedFilesNotification=n.WillSaveTextDocumentWaitUntilRequest=n.WillSaveTextDocumentNotification=n.TextDocumentSaveReason=n.DidSaveTextDocumentNotification=n.DidCloseTextDocumentNotification=n.DidChangeTextDocumentNotification=n.TextDocumentContentChangeEvent=n.DidOpenTextDocumentNotification=n.TextDocumentSyncKind=n.TelemetryEventNotification=n.LogMessageNotification=n.ShowMessageRequest=n.ShowMessageNotification=n.MessageType=n.DidChangeConfigurationNotification=n.ExitNotification=n.ShutdownRequest=n.InitializedNotification=n.InitializeErrorCodes=n.InitializeRequest=n.WorkDoneProgressOptions=n.TextDocumentRegistrationOptions=n.StaticRegistrationOptions=n.PositionEncodingKind=n.FailureHandlingKind=n.ResourceOperationKind=n.UnregistrationRequest=n.RegistrationRequest=n.DocumentSelector=n.NotebookCellTextDocumentFilter=n.NotebookDocumentFilter=n.TextDocumentFilter=void 0,n.TypeHierarchySubtypesRequest=n.TypeHierarchyPrepareRequest=n.MonikerRequest=n.MonikerKind=n.UniquenessLevel=n.WillDeleteFilesRequest=n.DidDeleteFilesNotification=n.WillRenameFilesRequest=n.DidRenameFilesNotification=n.WillCreateFilesRequest=n.DidCreateFilesNotification=n.FileOperationPatternKind=n.LinkedEditingRangeRequest=n.ShowDocumentRequest=n.SemanticTokensRegistrationType=n.SemanticTokensRefreshRequest=n.SemanticTokensRangeRequest=n.SemanticTokensDeltaRequest=n.SemanticTokensRequest=n.TokenFormat=n.CallHierarchyPrepareRequest=n.CallHierarchyOutgoingCallsRequest=n.CallHierarchyIncomingCallsRequest=n.WorkDoneProgressCancelNotification=n.WorkDoneProgressCreateRequest=n.WorkDoneProgress=n.SelectionRangeRequest=n.DeclarationRequest=n.FoldingRangeRequest=n.ColorPresentationRequest=n.DocumentColorRequest=n.ConfigurationRequest=n.DidChangeWorkspaceFoldersNotification=n.WorkspaceFoldersRequest=n.TypeDefinitionRequest=n.ImplementationRequest=n.ApplyWorkspaceEditRequest=n.ExecuteCommandRequest=n.PrepareRenameRequest=n.RenameRequest=n.PrepareSupportDefaultBehavior=n.DocumentOnTypeFormattingRequest=n.DocumentRangeFormattingRequest=n.DocumentFormattingRequest=n.DocumentLinkResolveRequest=n.DocumentLinkRequest=n.CodeLensRefreshRequest=n.CodeLensResolveRequest=n.CodeLensRequest=n.WorkspaceSymbolResolveRequest=void 0,n.DidCloseNotebookDocumentNotification=n.DidSaveNotebookDocumentNotification=n.DidChangeNotebookDocumentNotification=n.NotebookCellArrayChange=n.DidOpenNotebookDocumentNotification=n.NotebookDocumentSyncRegistrationType=n.NotebookDocument=n.NotebookCell=n.ExecutionSummary=n.NotebookCellKind=n.DiagnosticRefreshRequest=n.WorkspaceDiagnosticRequest=n.DocumentDiagnosticRequest=n.DocumentDiagnosticReportKind=n.DiagnosticServerCancellationData=n.InlayHintRefreshRequest=n.InlayHintResolveRequest=n.InlayHintRequest=n.InlineValueRefreshRequest=n.InlineValueRequest=n.TypeHierarchySupertypesRequest=void 0;const r=t(6140),i=t(1674),o=t(9533),a=t(2122);Object.defineProperty(n,"ImplementationRequest",{enumerable:!0,get:function(){return a.ImplementationRequest}});const s=t(1589);Object.defineProperty(n,"TypeDefinitionRequest",{enumerable:!0,get:function(){return s.TypeDefinitionRequest}});const l=t(8744);Object.defineProperty(n,"WorkspaceFoldersRequest",{enumerable:!0,get:function(){return l.WorkspaceFoldersRequest}}),Object.defineProperty(n,"DidChangeWorkspaceFoldersNotification",{enumerable:!0,get:function(){return l.DidChangeWorkspaceFoldersNotification}});const c=t(5934);Object.defineProperty(n,"ConfigurationRequest",{enumerable:!0,get:function(){return c.ConfigurationRequest}});const u=t(9891);Object.defineProperty(n,"DocumentColorRequest",{enumerable:!0,get:function(){return u.DocumentColorRequest}}),Object.defineProperty(n,"ColorPresentationRequest",{enumerable:!0,get:function(){return u.ColorPresentationRequest}});const d=t(3394);Object.defineProperty(n,"FoldingRangeRequest",{enumerable:!0,get:function(){return d.FoldingRangeRequest}});const h=t(764);Object.defineProperty(n,"DeclarationRequest",{enumerable:!0,get:function(){return h.DeclarationRequest}});const p=t(5206);Object.defineProperty(n,"SelectionRangeRequest",{enumerable:!0,get:function(){return p.SelectionRangeRequest}});const f=t(1862);Object.defineProperty(n,"WorkDoneProgress",{enumerable:!0,get:function(){return f.WorkDoneProgress}}),Object.defineProperty(n,"WorkDoneProgressCreateRequest",{enumerable:!0,get:function(){return f.WorkDoneProgressCreateRequest}}),Object.defineProperty(n,"WorkDoneProgressCancelNotification",{enumerable:!0,get:function(){return f.WorkDoneProgressCancelNotification}});const m=t(2918);Object.defineProperty(n,"CallHierarchyIncomingCallsRequest",{enumerable:!0,get:function(){return m.CallHierarchyIncomingCallsRequest}}),Object.defineProperty(n,"CallHierarchyOutgoingCallsRequest",{enumerable:!0,get:function(){return m.CallHierarchyOutgoingCallsRequest}}),Object.defineProperty(n,"CallHierarchyPrepareRequest",{enumerable:!0,get:function(){return m.CallHierarchyPrepareRequest}});const g=t(9434);Object.defineProperty(n,"TokenFormat",{enumerable:!0,get:function(){return g.TokenFormat}}),Object.defineProperty(n,"SemanticTokensRequest",{enumerable:!0,get:function(){return g.SemanticTokensRequest}}),Object.defineProperty(n,"SemanticTokensDeltaRequest",{enumerable:!0,get:function(){return g.SemanticTokensDeltaRequest}}),Object.defineProperty(n,"SemanticTokensRangeRequest",{enumerable:!0,get:function(){return g.SemanticTokensRangeRequest}}),Object.defineProperty(n,"SemanticTokensRefreshRequest",{enumerable:!0,get:function(){return g.SemanticTokensRefreshRequest}}),Object.defineProperty(n,"SemanticTokensRegistrationType",{enumerable:!0,get:function(){return g.SemanticTokensRegistrationType}});const E=t(5726);Object.defineProperty(n,"ShowDocumentRequest",{enumerable:!0,get:function(){return E.ShowDocumentRequest}});const T=t(6305);Object.defineProperty(n,"LinkedEditingRangeRequest",{enumerable:!0,get:function(){return T.LinkedEditingRangeRequest}});const R=t(7846);Object.defineProperty(n,"FileOperationPatternKind",{enumerable:!0,get:function(){return R.FileOperationPatternKind}}),Object.defineProperty(n,"DidCreateFilesNotification",{enumerable:!0,get:function(){return R.DidCreateFilesNotification}}),Object.defineProperty(n,"WillCreateFilesRequest",{enumerable:!0,get:function(){return R.WillCreateFilesRequest}}),Object.defineProperty(n,"DidRenameFilesNotification",{enumerable:!0,get:function(){return R.DidRenameFilesNotification}}),Object.defineProperty(n,"WillRenameFilesRequest",{enumerable:!0,get:function(){return R.WillRenameFilesRequest}}),Object.defineProperty(n,"DidDeleteFilesNotification",{enumerable:!0,get:function(){return R.DidDeleteFilesNotification}}),Object.defineProperty(n,"WillDeleteFilesRequest",{enumerable:!0,get:function(){return R.WillDeleteFilesRequest}});const S=t(3443);Object.defineProperty(n,"UniquenessLevel",{enumerable:!0,get:function(){return S.UniquenessLevel}}),Object.defineProperty(n,"MonikerKind",{enumerable:!0,get:function(){return S.MonikerKind}}),Object.defineProperty(n,"MonikerRequest",{enumerable:!0,get:function(){return S.MonikerRequest}});const y=t(3693);Object.defineProperty(n,"TypeHierarchyPrepareRequest",{enumerable:!0,get:function(){return y.TypeHierarchyPrepareRequest}}),Object.defineProperty(n,"TypeHierarchySubtypesRequest",{enumerable:!0,get:function(){return y.TypeHierarchySubtypesRequest}}),Object.defineProperty(n,"TypeHierarchySupertypesRequest",{enumerable:!0,get:function(){return y.TypeHierarchySupertypesRequest}});const A=t(5246);Object.defineProperty(n,"InlineValueRequest",{enumerable:!0,get:function(){return A.InlineValueRequest}}),Object.defineProperty(n,"InlineValueRefreshRequest",{enumerable:!0,get:function(){return A.InlineValueRefreshRequest}});const v=t(9999);Object.defineProperty(n,"InlayHintRequest",{enumerable:!0,get:function(){return v.InlayHintRequest}}),Object.defineProperty(n,"InlayHintResolveRequest",{enumerable:!0,get:function(){return v.InlayHintResolveRequest}}),Object.defineProperty(n,"InlayHintRefreshRequest",{enumerable:!0,get:function(){return v.InlayHintRefreshRequest}});const I=t(9824);Object.defineProperty(n,"DiagnosticServerCancellationData",{enumerable:!0,get:function(){return I.DiagnosticServerCancellationData}}),Object.defineProperty(n,"DocumentDiagnosticReportKind",{enumerable:!0,get:function(){return I.DocumentDiagnosticReportKind}}),Object.defineProperty(n,"DocumentDiagnosticRequest",{enumerable:!0,get:function(){return I.DocumentDiagnosticRequest}}),Object.defineProperty(n,"WorkspaceDiagnosticRequest",{enumerable:!0,get:function(){return I.WorkspaceDiagnosticRequest}}),Object.defineProperty(n,"DiagnosticRefreshRequest",{enumerable:!0,get:function(){return I.DiagnosticRefreshRequest}});const C=t(7169);var _,b,O,D,N,w,L,x,M,k,P,F,G,U,H,q,X,j,K,B,$,W,V,z,Y,Z,J,Q,ee,ne,te,re,ie,oe,ae,se,le,ce,ue,de,he,pe,fe,me;Object.defineProperty(n,"NotebookCellKind",{enumerable:!0,get:function(){return C.NotebookCellKind}}),Object.defineProperty(n,"ExecutionSummary",{enumerable:!0,get:function(){return C.ExecutionSummary}}),Object.defineProperty(n,"NotebookCell",{enumerable:!0,get:function(){return C.NotebookCell}}),Object.defineProperty(n,"NotebookDocument",{enumerable:!0,get:function(){return C.NotebookDocument}}),Object.defineProperty(n,"NotebookDocumentSyncRegistrationType",{enumerable:!0,get:function(){return C.NotebookDocumentSyncRegistrationType}}),Object.defineProperty(n,"DidOpenNotebookDocumentNotification",{enumerable:!0,get:function(){return C.DidOpenNotebookDocumentNotification}}),Object.defineProperty(n,"NotebookCellArrayChange",{enumerable:!0,get:function(){return C.NotebookCellArrayChange}}),Object.defineProperty(n,"DidChangeNotebookDocumentNotification",{enumerable:!0,get:function(){return C.DidChangeNotebookDocumentNotification}}),Object.defineProperty(n,"DidSaveNotebookDocumentNotification",{enumerable:!0,get:function(){return C.DidSaveNotebookDocumentNotification}}),Object.defineProperty(n,"DidCloseNotebookDocumentNotification",{enumerable:!0,get:function(){return C.DidCloseNotebookDocumentNotification}}),function(e){e.is=function(e){const n=e;return o.string(n.language)||o.string(n.scheme)||o.string(n.pattern)}}(_=n.TextDocumentFilter||(n.TextDocumentFilter={})),function(e){e.is=function(e){const n=e;return o.objectLiteral(n)&&(o.string(n.notebookType)||o.string(n.scheme)||o.string(n.pattern))}}(b=n.NotebookDocumentFilter||(n.NotebookDocumentFilter={})),function(e){e.is=function(e){const n=e;return o.objectLiteral(n)&&(o.string(n.notebook)||b.is(n.notebook))&&(void 0===n.language||o.string(n.language))}}(O=n.NotebookCellTextDocumentFilter||(n.NotebookCellTextDocumentFilter={})),function(e){e.is=function(e){if(!Array.isArray(e))return!1;for(let n of e)if(!o.string(n)&&!_.is(n)&&!O.is(n))return!1;return!0}}(D=n.DocumentSelector||(n.DocumentSelector={})),(n.RegistrationRequest||(n.RegistrationRequest={})).type=new r.ProtocolRequestType("client/registerCapability"),(n.UnregistrationRequest||(n.UnregistrationRequest={})).type=new r.ProtocolRequestType("client/unregisterCapability"),(me=n.ResourceOperationKind||(n.ResourceOperationKind={})).Create="create",me.Rename="rename",me.Delete="delete",(fe=n.FailureHandlingKind||(n.FailureHandlingKind={})).Abort="abort",fe.Transactional="transactional",fe.TextOnlyTransactional="textOnlyTransactional",fe.Undo="undo",(pe=n.PositionEncodingKind||(n.PositionEncodingKind={})).UTF8="utf-8",pe.UTF16="utf-16",pe.UTF32="utf-32",(n.StaticRegistrationOptions||(n.StaticRegistrationOptions={})).hasId=function(e){const n=e;return n&&o.string(n.id)&&n.id.length>0},(n.TextDocumentRegistrationOptions||(n.TextDocumentRegistrationOptions={})).is=function(e){const n=e;return n&&(null===n.documentSelector||D.is(n.documentSelector))},(he=n.WorkDoneProgressOptions||(n.WorkDoneProgressOptions={})).is=function(e){const n=e;return o.objectLiteral(n)&&(void 0===n.workDoneProgress||o.boolean(n.workDoneProgress))},he.hasWorkDoneProgress=function(e){const n=e;return n&&o.boolean(n.workDoneProgress)},(n.InitializeRequest||(n.InitializeRequest={})).type=new r.ProtocolRequestType("initialize"),(n.InitializeErrorCodes||(n.InitializeErrorCodes={})).unknownProtocolVersion=1,(n.InitializedNotification||(n.InitializedNotification={})).type=new r.ProtocolNotificationType("initialized"),(n.ShutdownRequest||(n.ShutdownRequest={})).type=new r.ProtocolRequestType0("shutdown"),(n.ExitNotification||(n.ExitNotification={})).type=new r.ProtocolNotificationType0("exit"),(n.DidChangeConfigurationNotification||(n.DidChangeConfigurationNotification={})).type=new r.ProtocolNotificationType("workspace/didChangeConfiguration"),(de=n.MessageType||(n.MessageType={})).Error=1,de.Warning=2,de.Info=3,de.Log=4,(n.ShowMessageNotification||(n.ShowMessageNotification={})).type=new r.ProtocolNotificationType("window/showMessage"),(n.ShowMessageRequest||(n.ShowMessageRequest={})).type=new r.ProtocolRequestType("window/showMessageRequest"),(n.LogMessageNotification||(n.LogMessageNotification={})).type=new r.ProtocolNotificationType("window/logMessage"),(n.TelemetryEventNotification||(n.TelemetryEventNotification={})).type=new r.ProtocolNotificationType("telemetry/event"),(ue=n.TextDocumentSyncKind||(n.TextDocumentSyncKind={})).None=0,ue.Full=1,ue.Incremental=2,(ce=n.DidOpenTextDocumentNotification||(n.DidOpenTextDocumentNotification={})).method="textDocument/didOpen",ce.type=new r.ProtocolNotificationType(ce.method),(le=n.TextDocumentContentChangeEvent||(n.TextDocumentContentChangeEvent={})).isIncremental=function(e){let n=e;return null!=n&&"string"==typeof n.text&&void 0!==n.range&&(void 0===n.rangeLength||"number"==typeof n.rangeLength)},le.isFull=function(e){let n=e;return null!=n&&"string"==typeof n.text&&void 0===n.range&&void 0===n.rangeLength},(se=n.DidChangeTextDocumentNotification||(n.DidChangeTextDocumentNotification={})).method="textDocument/didChange",se.type=new r.ProtocolNotificationType(se.method),(ae=n.DidCloseTextDocumentNotification||(n.DidCloseTextDocumentNotification={})).method="textDocument/didClose",ae.type=new r.ProtocolNotificationType(ae.method),(oe=n.DidSaveTextDocumentNotification||(n.DidSaveTextDocumentNotification={})).method="textDocument/didSave",oe.type=new r.ProtocolNotificationType(oe.method),(ie=n.TextDocumentSaveReason||(n.TextDocumentSaveReason={})).Manual=1,ie.AfterDelay=2,ie.FocusOut=3,(re=n.WillSaveTextDocumentNotification||(n.WillSaveTextDocumentNotification={})).method="textDocument/willSave",re.type=new r.ProtocolNotificationType(re.method),(te=n.WillSaveTextDocumentWaitUntilRequest||(n.WillSaveTextDocumentWaitUntilRequest={})).method="textDocument/willSaveWaitUntil",te.type=new r.ProtocolRequestType(te.method),(n.DidChangeWatchedFilesNotification||(n.DidChangeWatchedFilesNotification={})).type=new r.ProtocolNotificationType("workspace/didChangeWatchedFiles"),(ne=n.FileChangeType||(n.FileChangeType={})).Created=1,ne.Changed=2,ne.Deleted=3,(n.RelativePattern||(n.RelativePattern={})).is=function(e){const n=e;return o.objectLiteral(n)&&(i.URI.is(n.baseUri)||i.WorkspaceFolder.is(n.baseUri))&&o.string(n.pattern)},(ee=n.WatchKind||(n.WatchKind={})).Create=1,ee.Change=2,ee.Delete=4,(n.PublishDiagnosticsNotification||(n.PublishDiagnosticsNotification={})).type=new r.ProtocolNotificationType("textDocument/publishDiagnostics"),(Q=n.CompletionTriggerKind||(n.CompletionTriggerKind={})).Invoked=1,Q.TriggerCharacter=2,Q.TriggerForIncompleteCompletions=3,(J=n.CompletionRequest||(n.CompletionRequest={})).method="textDocument/completion",J.type=new r.ProtocolRequestType(J.method),(Z=n.CompletionResolveRequest||(n.CompletionResolveRequest={})).method="completionItem/resolve",Z.type=new r.ProtocolRequestType(Z.method),(Y=n.HoverRequest||(n.HoverRequest={})).method="textDocument/hover",Y.type=new r.ProtocolRequestType(Y.method),(z=n.SignatureHelpTriggerKind||(n.SignatureHelpTriggerKind={})).Invoked=1,z.TriggerCharacter=2,z.ContentChange=3,(V=n.SignatureHelpRequest||(n.SignatureHelpRequest={})).method="textDocument/signatureHelp",V.type=new r.ProtocolRequestType(V.method),(W=n.DefinitionRequest||(n.DefinitionRequest={})).method="textDocument/definition",W.type=new r.ProtocolRequestType(W.method),($=n.ReferencesRequest||(n.ReferencesRequest={})).method="textDocument/references",$.type=new r.ProtocolRequestType($.method),(B=n.DocumentHighlightRequest||(n.DocumentHighlightRequest={})).method="textDocument/documentHighlight",B.type=new r.ProtocolRequestType(B.method),(K=n.DocumentSymbolRequest||(n.DocumentSymbolRequest={})).method="textDocument/documentSymbol",K.type=new r.ProtocolRequestType(K.method),(j=n.CodeActionRequest||(n.CodeActionRequest={})).method="textDocument/codeAction",j.type=new r.ProtocolRequestType(j.method),(X=n.CodeActionResolveRequest||(n.CodeActionResolveRequest={})).method="codeAction/resolve",X.type=new r.ProtocolRequestType(X.method),(q=n.WorkspaceSymbolRequest||(n.WorkspaceSymbolRequest={})).method="workspace/symbol",q.type=new r.ProtocolRequestType(q.method),(H=n.WorkspaceSymbolResolveRequest||(n.WorkspaceSymbolResolveRequest={})).method="workspaceSymbol/resolve",H.type=new r.ProtocolRequestType(H.method),(U=n.CodeLensRequest||(n.CodeLensRequest={})).method="textDocument/codeLens",U.type=new r.ProtocolRequestType(U.method),(G=n.CodeLensResolveRequest||(n.CodeLensResolveRequest={})).method="codeLens/resolve",G.type=new r.ProtocolRequestType(G.method),(F=n.CodeLensRefreshRequest||(n.CodeLensRefreshRequest={})).method="workspace/codeLens/refresh",F.type=new r.ProtocolRequestType0(F.method),(P=n.DocumentLinkRequest||(n.DocumentLinkRequest={})).method="textDocument/documentLink",P.type=new r.ProtocolRequestType(P.method),(k=n.DocumentLinkResolveRequest||(n.DocumentLinkResolveRequest={})).method="documentLink/resolve",k.type=new r.ProtocolRequestType(k.method),(M=n.DocumentFormattingRequest||(n.DocumentFormattingRequest={})).method="textDocument/formatting",M.type=new r.ProtocolRequestType(M.method),(x=n.DocumentRangeFormattingRequest||(n.DocumentRangeFormattingRequest={})).method="textDocument/rangeFormatting",x.type=new r.ProtocolRequestType(x.method),(L=n.DocumentOnTypeFormattingRequest||(n.DocumentOnTypeFormattingRequest={})).method="textDocument/onTypeFormatting",L.type=new r.ProtocolRequestType(L.method),(n.PrepareSupportDefaultBehavior||(n.PrepareSupportDefaultBehavior={})).Identifier=1,(w=n.RenameRequest||(n.RenameRequest={})).method="textDocument/rename",w.type=new r.ProtocolRequestType(w.method),(N=n.PrepareRenameRequest||(n.PrepareRenameRequest={})).method="textDocument/prepareRename",N.type=new r.ProtocolRequestType(N.method),(n.ExecuteCommandRequest||(n.ExecuteCommandRequest={})).type=new r.ProtocolRequestType("workspace/executeCommand"),(n.ApplyWorkspaceEditRequest||(n.ApplyWorkspaceEditRequest={})).type=new r.ProtocolRequestType("workspace/applyEdit")},6305:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.LinkedEditingRangeRequest=void 0;const r=t(6140);var i;(i=n.LinkedEditingRangeRequest||(n.LinkedEditingRangeRequest={})).method="textDocument/linkedEditingRange",i.type=new r.ProtocolRequestType(i.method)},3443:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.MonikerRequest=n.MonikerKind=n.UniquenessLevel=void 0;const r=t(6140);var i,o,a;(a=n.UniquenessLevel||(n.UniquenessLevel={})).document="document",a.project="project",a.group="group",a.scheme="scheme",a.global="global",(o=n.MonikerKind||(n.MonikerKind={})).$import="import",o.$export="export",o.local="local",(i=n.MonikerRequest||(n.MonikerRequest={})).method="textDocument/moniker",i.type=new r.ProtocolRequestType(i.method)},7169:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.DidCloseNotebookDocumentNotification=n.DidSaveNotebookDocumentNotification=n.DidChangeNotebookDocumentNotification=n.NotebookCellArrayChange=n.DidOpenNotebookDocumentNotification=n.NotebookDocumentSyncRegistrationType=n.NotebookDocument=n.NotebookCell=n.ExecutionSummary=n.NotebookCellKind=void 0;const r=t(1674),i=t(9533),o=t(6140);var a,s,l,c,u,d,h,p,f,m;!function(e){e.Markup=1,e.Code=2,e.is=function(e){return 1===e||2===e}}(a=n.NotebookCellKind||(n.NotebookCellKind={})),function(e){e.create=function(e,n){const t={executionOrder:e};return!0!==n&&!1!==n||(t.success=n),t},e.is=function(e){const n=e;return i.objectLiteral(n)&&r.uinteger.is(n.executionOrder)&&(void 0===n.success||i.boolean(n.success))},e.equals=function(e,n){return e===n||null!=e&&null!=n&&e.executionOrder===n.executionOrder&&e.success===n.success}}(s=n.ExecutionSummary||(n.ExecutionSummary={})),function(e){function n(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(typeof e!=typeof t)return!1;if("object"!=typeof e)return!1;const r=Array.isArray(e),o=Array.isArray(t);if(r!==o)return!1;if(r&&o){if(e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(!n(e[r],t[r]))return!1}if(i.objectLiteral(e)&&i.objectLiteral(t)){const r=Object.keys(e),i=Object.keys(t);if(r.length!==i.length)return!1;if(r.sort(),i.sort(),!n(r,i))return!1;for(let i=0;i<r.length;i++){const o=r[i];if(!n(e[o],t[o]))return!1}}return!0}e.create=function(e,n){return{kind:e,document:n}},e.is=function(e){const n=e;return i.objectLiteral(n)&&a.is(n.kind)&&r.DocumentUri.is(n.document)&&(void 0===n.metadata||i.objectLiteral(n.metadata))},e.diff=function(e,t){const r=new Set;return e.document!==t.document&&r.add("document"),e.kind!==t.kind&&r.add("kind"),e.executionSummary!==t.executionSummary&&r.add("executionSummary"),void 0===e.metadata&&void 0===t.metadata||n(e.metadata,t.metadata)||r.add("metadata"),void 0===e.executionSummary&&void 0===t.executionSummary||s.equals(e.executionSummary,t.executionSummary)||r.add("executionSummary"),r}}(l=n.NotebookCell||(n.NotebookCell={})),(m=n.NotebookDocument||(n.NotebookDocument={})).create=function(e,n,t,r){return{uri:e,notebookType:n,version:t,cells:r}},m.is=function(e){const n=e;return i.objectLiteral(n)&&i.string(n.uri)&&r.integer.is(n.version)&&i.typedArray(n.cells,l.is)},(f=n.NotebookDocumentSyncRegistrationType||(n.NotebookDocumentSyncRegistrationType={})).method="notebookDocument/sync",f.type=new o.RegistrationType(f.method),(p=n.DidOpenNotebookDocumentNotification||(n.DidOpenNotebookDocumentNotification={})).method="notebookDocument/didOpen",p.type=new o.ProtocolNotificationType(p.method),(h=n.NotebookCellArrayChange||(n.NotebookCellArrayChange={})).is=function(e){const n=e;return i.objectLiteral(n)&&r.uinteger.is(n.start)&&r.uinteger.is(n.deleteCount)&&(void 0===n.cells||i.typedArray(n.cells,l.is))},h.create=function(e,n,t){const r={start:e,deleteCount:n};return void 0!==t&&(r.cells=t),r},(d=n.DidChangeNotebookDocumentNotification||(n.DidChangeNotebookDocumentNotification={})).method="notebookDocument/didChange",d.type=new o.ProtocolNotificationType(d.method),(u=n.DidSaveNotebookDocumentNotification||(n.DidSaveNotebookDocumentNotification={})).method="notebookDocument/didSave",u.type=new o.ProtocolNotificationType(u.method),(c=n.DidCloseNotebookDocumentNotification||(n.DidCloseNotebookDocumentNotification={})).method="notebookDocument/didClose",c.type=new o.ProtocolNotificationType(c.method)},1862:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.WorkDoneProgressCancelNotification=n.WorkDoneProgressCreateRequest=n.WorkDoneProgress=void 0;const r=t(4389),i=t(6140);var o,a,s;(s=n.WorkDoneProgress||(n.WorkDoneProgress={})).type=new r.ProgressType,s.is=function(e){return e===s.type},(a=n.WorkDoneProgressCreateRequest||(n.WorkDoneProgressCreateRequest={})).method="window/workDoneProgress/create",a.type=new i.ProtocolRequestType(a.method),(o=n.WorkDoneProgressCancelNotification||(n.WorkDoneProgressCancelNotification={})).method="window/workDoneProgress/cancel",o.type=new i.ProtocolNotificationType(o.method)},5206:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.SelectionRangeRequest=void 0;const r=t(6140);var i;(i=n.SelectionRangeRequest||(n.SelectionRangeRequest={})).method="textDocument/selectionRange",i.type=new r.ProtocolRequestType(i.method)},9434:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.SemanticTokensRefreshRequest=n.SemanticTokensRangeRequest=n.SemanticTokensDeltaRequest=n.SemanticTokensRequest=n.SemanticTokensRegistrationType=n.TokenFormat=void 0;const r=t(6140);var i,o,a,s,l;(n.TokenFormat||(n.TokenFormat={})).Relative="relative",(l=n.SemanticTokensRegistrationType||(n.SemanticTokensRegistrationType={})).method="textDocument/semanticTokens",l.type=new r.RegistrationType(l.method),(s=n.SemanticTokensRequest||(n.SemanticTokensRequest={})).method="textDocument/semanticTokens/full",s.type=new r.ProtocolRequestType(s.method),(a=n.SemanticTokensDeltaRequest||(n.SemanticTokensDeltaRequest={})).method="textDocument/semanticTokens/full/delta",a.type=new r.ProtocolRequestType(a.method),(o=n.SemanticTokensRangeRequest||(n.SemanticTokensRangeRequest={})).method="textDocument/semanticTokens/range",o.type=new r.ProtocolRequestType(o.method),(i=n.SemanticTokensRefreshRequest||(n.SemanticTokensRefreshRequest={})).method="workspace/semanticTokens/refresh",i.type=new r.ProtocolRequestType0(i.method)},5726:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.ShowDocumentRequest=void 0;const r=t(6140);var i;(i=n.ShowDocumentRequest||(n.ShowDocumentRequest={})).method="window/showDocument",i.type=new r.ProtocolRequestType(i.method)},1589:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.TypeDefinitionRequest=void 0;const r=t(6140);var i;(i=n.TypeDefinitionRequest||(n.TypeDefinitionRequest={})).method="textDocument/typeDefinition",i.type=new r.ProtocolRequestType(i.method)},3693:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.TypeHierarchySubtypesRequest=n.TypeHierarchySupertypesRequest=n.TypeHierarchyPrepareRequest=void 0;const r=t(6140);var i,o,a;(a=n.TypeHierarchyPrepareRequest||(n.TypeHierarchyPrepareRequest={})).method="textDocument/prepareTypeHierarchy",a.type=new r.ProtocolRequestType(a.method),(o=n.TypeHierarchySupertypesRequest||(n.TypeHierarchySupertypesRequest={})).method="typeHierarchy/supertypes",o.type=new r.ProtocolRequestType(o.method),(i=n.TypeHierarchySubtypesRequest||(n.TypeHierarchySubtypesRequest={})).method="typeHierarchy/subtypes",i.type=new r.ProtocolRequestType(i.method)},8744:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.DidChangeWorkspaceFoldersNotification=n.WorkspaceFoldersRequest=void 0;const r=t(6140);(n.WorkspaceFoldersRequest||(n.WorkspaceFoldersRequest={})).type=new r.ProtocolRequestType0("workspace/workspaceFolders"),(n.DidChangeWorkspaceFoldersNotification||(n.DidChangeWorkspaceFoldersNotification={})).type=new r.ProtocolNotificationType("workspace/didChangeWorkspaceFolders")},9533:(e,n)=>{"use strict";function t(e){return"string"==typeof e||e instanceof String}function r(e){return Array.isArray(e)}Object.defineProperty(n,"__esModule",{value:!0}),n.objectLiteral=n.typedArray=n.stringArray=n.array=n.func=n.error=n.number=n.string=n.boolean=void 0,n.boolean=function(e){return!0===e||!1===e},n.string=t,n.number=function(e){return"number"==typeof e||e instanceof Number},n.error=function(e){return e instanceof Error},n.func=function(e){return"function"==typeof e},n.array=r,n.stringArray=function(e){return r(e)&&e.every((e=>t(e)))},n.typedArray=function(e,n){return Array.isArray(e)&&e.every(n)},n.objectLiteral=function(e){return null!==e&&"object"==typeof e}},273:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var i=Object.getOwnPropertyDescriptor(n,t);i&&!("get"in i?!n.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,i)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__exportStar||function(e,n){for(var t in e)"default"===t||Object.prototype.hasOwnProperty.call(n,t)||r(n,e,t)};Object.defineProperty(n,"__esModule",{value:!0}),n.createProtocolConnection=void 0;const o=t(5028);i(t(5028),n),i(t(1661),n),n.createProtocolConnection=function(e,n,t,r){return(0,o.createMessageConnection)(e,n,t,r)}},6560:(e,n,t)=>{"use strict";e.exports=t(273)},1674:(e,n,t)=>{"use strict";var r,i,o,a,s,l,c,u,d,h,p,f,m,g,E,T,R,S,y,A,v,I,C,_,b,O,D,N;t.r(n),t.d(n,{AnnotatedTextEdit:()=>C,ChangeAnnotation:()=>v,ChangeAnnotationIdentifier:()=>I,CodeAction:()=>oe,CodeActionContext:()=>ie,CodeActionKind:()=>te,CodeActionTriggerKind:()=>re,CodeDescription:()=>R,CodeLens:()=>ae,Color:()=>d,ColorInformation:()=>h,ColorPresentation:()=>p,Command:()=>y,CompletionItem:()=>j,CompletionItemKind:()=>F,CompletionItemLabelDetails:()=>X,CompletionItemTag:()=>U,CompletionList:()=>K,CreateFile:()=>b,DeleteFile:()=>D,Diagnostic:()=>S,DiagnosticRelatedInformation:()=>g,DiagnosticSeverity:()=>E,DiagnosticTag:()=>T,DocumentHighlight:()=>Y,DocumentHighlightKind:()=>z,DocumentLink:()=>le,DocumentSymbol:()=>ne,DocumentUri:()=>r,EOL:()=>Ce,FoldingRange:()=>m,FoldingRangeKind:()=>f,FormattingOptions:()=>se,Hover:()=>$,InlayHint:()=>Re,InlayHintKind:()=>Ee,InlayHintLabelPart:()=>Te,InlineValueContext:()=>ge,InlineValueEvaluatableExpression:()=>me,InlineValueText:()=>pe,InlineValueVariableLookup:()=>fe,InsertReplaceEdit:()=>H,InsertTextFormat:()=>G,InsertTextMode:()=>q,Location:()=>c,LocationLink:()=>u,MarkedString:()=>B,MarkupContent:()=>P,MarkupKind:()=>k,OptionalVersionedTextDocumentIdentifier:()=>x,ParameterInformation:()=>W,Position:()=>s,Range:()=>l,RenameFile:()=>O,SelectionRange:()=>ce,SemanticTokenModifiers:()=>de,SemanticTokenTypes:()=>ue,SemanticTokens:()=>he,SignatureInformation:()=>V,SymbolInformation:()=>Q,SymbolKind:()=>Z,SymbolTag:()=>J,TextDocument:()=>Ie,TextDocumentEdit:()=>_,TextDocumentIdentifier:()=>w,TextDocumentItem:()=>M,TextEdit:()=>A,URI:()=>i,VersionedTextDocumentIdentifier:()=>L,WorkspaceChange:()=>ve,WorkspaceEdit:()=>N,WorkspaceFolder:()=>Se,WorkspaceSymbol:()=>ee,integer:()=>o,uinteger:()=>a}),function(e){e.is=function(e){return"string"==typeof e}}(r||(r={})),function(e){e.is=function(e){return"string"==typeof e}}(i||(i={})),function(e){e.MIN_VALUE=-2147483648,e.MAX_VALUE=2147483647,e.is=function(n){return"number"==typeof n&&e.MIN_VALUE<=n&&n<=e.MAX_VALUE}}(o||(o={})),function(e){e.MIN_VALUE=0,e.MAX_VALUE=2147483647,e.is=function(n){return"number"==typeof n&&e.MIN_VALUE<=n&&n<=e.MAX_VALUE}}(a||(a={})),function(e){e.create=function(e,n){return e===Number.MAX_VALUE&&(e=a.MAX_VALUE),n===Number.MAX_VALUE&&(n=a.MAX_VALUE),{line:e,character:n}},e.is=function(e){var n=e;return _e.objectLiteral(n)&&_e.uinteger(n.line)&&_e.uinteger(n.character)}}(s||(s={})),function(e){e.create=function(e,n,t,r){if(_e.uinteger(e)&&_e.uinteger(n)&&_e.uinteger(t)&&_e.uinteger(r))return{start:s.create(e,n),end:s.create(t,r)};if(s.is(e)&&s.is(n))return{start:e,end:n};throw new Error("Range#create called with invalid arguments[".concat(e,", ").concat(n,", ").concat(t,", ").concat(r,"]"))},e.is=function(e){var n=e;return _e.objectLiteral(n)&&s.is(n.start)&&s.is(n.end)}}(l||(l={})),function(e){e.create=function(e,n){return{uri:e,range:n}},e.is=function(e){var n=e;return _e.defined(n)&&l.is(n.range)&&(_e.string(n.uri)||_e.undefined(n.uri))}}(c||(c={})),function(e){e.create=function(e,n,t,r){return{targetUri:e,targetRange:n,targetSelectionRange:t,originSelectionRange:r}},e.is=function(e){var n=e;return _e.defined(n)&&l.is(n.targetRange)&&_e.string(n.targetUri)&&l.is(n.targetSelectionRange)&&(l.is(n.originSelectionRange)||_e.undefined(n.originSelectionRange))}}(u||(u={})),function(e){e.create=function(e,n,t,r){return{red:e,green:n,blue:t,alpha:r}},e.is=function(e){var n=e;return _e.objectLiteral(n)&&_e.numberRange(n.red,0,1)&&_e.numberRange(n.green,0,1)&&_e.numberRange(n.blue,0,1)&&_e.numberRange(n.alpha,0,1)}}(d||(d={})),function(e){e.create=function(e,n){return{range:e,color:n}},e.is=function(e){var n=e;return _e.objectLiteral(n)&&l.is(n.range)&&d.is(n.color)}}(h||(h={})),function(e){e.create=function(e,n,t){return{label:e,textEdit:n,additionalTextEdits:t}},e.is=function(e){var n=e;return _e.objectLiteral(n)&&_e.string(n.label)&&(_e.undefined(n.textEdit)||A.is(n))&&(_e.undefined(n.additionalTextEdits)||_e.typedArray(n.additionalTextEdits,A.is))}}(p||(p={})),function(e){e.Comment="comment",e.Imports="imports",e.Region="region"}(f||(f={})),function(e){e.create=function(e,n,t,r,i,o){var a={startLine:e,endLine:n};return _e.defined(t)&&(a.startCharacter=t),_e.defined(r)&&(a.endCharacter=r),_e.defined(i)&&(a.kind=i),_e.defined(o)&&(a.collapsedText=o),a},e.is=function(e){var n=e;return _e.objectLiteral(n)&&_e.uinteger(n.startLine)&&_e.uinteger(n.startLine)&&(_e.undefined(n.startCharacter)||_e.uinteger(n.startCharacter))&&(_e.undefined(n.endCharacter)||_e.uinteger(n.endCharacter))&&(_e.undefined(n.kind)||_e.string(n.kind))}}(m||(m={})),function(e){e.create=function(e,n){return{location:e,message:n}},e.is=function(e){var n=e;return _e.defined(n)&&c.is(n.location)&&_e.string(n.message)}}(g||(g={})),function(e){e.Error=1,e.Warning=2,e.Information=3,e.Hint=4}(E||(E={})),function(e){e.Unnecessary=1,e.Deprecated=2}(T||(T={})),function(e){e.is=function(e){var n=e;return _e.objectLiteral(n)&&_e.string(n.href)}}(R||(R={})),function(e){e.create=function(e,n,t,r,i,o){var a={range:e,message:n};return _e.defined(t)&&(a.severity=t),_e.defined(r)&&(a.code=r),_e.defined(i)&&(a.source=i),_e.defined(o)&&(a.relatedInformation=o),a},e.is=function(e){var n,t=e;return _e.defined(t)&&l.is(t.range)&&_e.string(t.message)&&(_e.number(t.severity)||_e.undefined(t.severity))&&(_e.integer(t.code)||_e.string(t.code)||_e.undefined(t.code))&&(_e.undefined(t.codeDescription)||_e.string(null===(n=t.codeDescription)||void 0===n?void 0:n.href))&&(_e.string(t.source)||_e.undefined(t.source))&&(_e.undefined(t.relatedInformation)||_e.typedArray(t.relatedInformation,g.is))}}(S||(S={})),function(e){e.create=function(e,n){for(var t=[],r=2;r<arguments.length;r++)t[r-2]=arguments[r];var i={title:e,command:n};return _e.defined(t)&&t.length>0&&(i.arguments=t),i},e.is=function(e){var n=e;return _e.defined(n)&&_e.string(n.title)&&_e.string(n.command)}}(y||(y={})),function(e){e.replace=function(e,n){return{range:e,newText:n}},e.insert=function(e,n){return{range:{start:e,end:e},newText:n}},e.del=function(e){return{range:e,newText:""}},e.is=function(e){var n=e;return _e.objectLiteral(n)&&_e.string(n.newText)&&l.is(n.range)}}(A||(A={})),function(e){e.create=function(e,n,t){var r={label:e};return void 0!==n&&(r.needsConfirmation=n),void 0!==t&&(r.description=t),r},e.is=function(e){var n=e;return _e.objectLiteral(n)&&_e.string(n.label)&&(_e.boolean(n.needsConfirmation)||void 0===n.needsConfirmation)&&(_e.string(n.description)||void 0===n.description)}}(v||(v={})),function(e){e.is=function(e){var n=e;return _e.string(n)}}(I||(I={})),function(e){e.replace=function(e,n,t){return{range:e,newText:n,annotationId:t}},e.insert=function(e,n,t){return{range:{start:e,end:e},newText:n,annotationId:t}},e.del=function(e,n){return{range:e,newText:"",annotationId:n}},e.is=function(e){var n=e;return A.is(n)&&(v.is(n.annotationId)||I.is(n.annotationId))}}(C||(C={})),function(e){e.create=function(e,n){return{textDocument:e,edits:n}},e.is=function(e){var n=e;return _e.defined(n)&&x.is(n.textDocument)&&Array.isArray(n.edits)}}(_||(_={})),function(e){e.create=function(e,n,t){var r={kind:"create",uri:e};return void 0===n||void 0===n.overwrite&&void 0===n.ignoreIfExists||(r.options=n),void 0!==t&&(r.annotationId=t),r},e.is=function(e){var n=e;return n&&"create"===n.kind&&_e.string(n.uri)&&(void 0===n.options||(void 0===n.options.overwrite||_e.boolean(n.options.overwrite))&&(void 0===n.options.ignoreIfExists||_e.boolean(n.options.ignoreIfExists)))&&(void 0===n.annotationId||I.is(n.annotationId))}}(b||(b={})),function(e){e.create=function(e,n,t,r){var i={kind:"rename",oldUri:e,newUri:n};return void 0===t||void 0===t.overwrite&&void 0===t.ignoreIfExists||(i.options=t),void 0!==r&&(i.annotationId=r),i},e.is=function(e){var n=e;return n&&"rename"===n.kind&&_e.string(n.oldUri)&&_e.string(n.newUri)&&(void 0===n.options||(void 0===n.options.overwrite||_e.boolean(n.options.overwrite))&&(void 0===n.options.ignoreIfExists||_e.boolean(n.options.ignoreIfExists)))&&(void 0===n.annotationId||I.is(n.annotationId))}}(O||(O={})),function(e){e.create=function(e,n,t){var r={kind:"delete",uri:e};return void 0===n||void 0===n.recursive&&void 0===n.ignoreIfNotExists||(r.options=n),void 0!==t&&(r.annotationId=t),r},e.is=function(e){var n=e;return n&&"delete"===n.kind&&_e.string(n.uri)&&(void 0===n.options||(void 0===n.options.recursive||_e.boolean(n.options.recursive))&&(void 0===n.options.ignoreIfNotExists||_e.boolean(n.options.ignoreIfNotExists)))&&(void 0===n.annotationId||I.is(n.annotationId))}}(D||(D={})),function(e){e.is=function(e){var n=e;return n&&(void 0!==n.changes||void 0!==n.documentChanges)&&(void 0===n.documentChanges||n.documentChanges.every((function(e){return _e.string(e.kind)?b.is(e)||O.is(e)||D.is(e):_.is(e)})))}}(N||(N={}));var w,L,x,M,k,P,F,G,U,H,q,X,j,K,B,$,W,V,z,Y,Z,J,Q,ee,ne,te,re,ie,oe,ae,se,le,ce,ue,de,he,pe,fe,me,ge,Ee,Te,Re,Se,ye=function(){function e(e,n){this.edits=e,this.changeAnnotations=n}return e.prototype.insert=function(e,n,t){var r,i;if(void 0===t?r=A.insert(e,n):I.is(t)?(i=t,r=C.insert(e,n,t)):(this.assertChangeAnnotations(this.changeAnnotations),i=this.changeAnnotations.manage(t),r=C.insert(e,n,i)),this.edits.push(r),void 0!==i)return i},e.prototype.replace=function(e,n,t){var r,i;if(void 0===t?r=A.replace(e,n):I.is(t)?(i=t,r=C.replace(e,n,t)):(this.assertChangeAnnotations(this.changeAnnotations),i=this.changeAnnotations.manage(t),r=C.replace(e,n,i)),this.edits.push(r),void 0!==i)return i},e.prototype.delete=function(e,n){var t,r;if(void 0===n?t=A.del(e):I.is(n)?(r=n,t=C.del(e,n)):(this.assertChangeAnnotations(this.changeAnnotations),r=this.changeAnnotations.manage(n),t=C.del(e,r)),this.edits.push(t),void 0!==r)return r},e.prototype.add=function(e){this.edits.push(e)},e.prototype.all=function(){return this.edits},e.prototype.clear=function(){this.edits.splice(0,this.edits.length)},e.prototype.assertChangeAnnotations=function(e){if(void 0===e)throw new Error("Text edit change is not configured to manage change annotations.")},e}(),Ae=function(){function e(e){this._annotations=void 0===e?Object.create(null):e,this._counter=0,this._size=0}return e.prototype.all=function(){return this._annotations},Object.defineProperty(e.prototype,"size",{get:function(){return this._size},enumerable:!1,configurable:!0}),e.prototype.manage=function(e,n){var t;if(I.is(e)?t=e:(t=this.nextId(),n=e),void 0!==this._annotations[t])throw new Error("Id ".concat(t," is already in use."));if(void 0===n)throw new Error("No annotation provided for id ".concat(t));return this._annotations[t]=n,this._size++,t},e.prototype.nextId=function(){return this._counter++,this._counter.toString()},e}(),ve=function(){function e(e){var n=this;this._textEditChanges=Object.create(null),void 0!==e?(this._workspaceEdit=e,e.documentChanges?(this._changeAnnotations=new Ae(e.changeAnnotations),e.changeAnnotations=this._changeAnnotations.all(),e.documentChanges.forEach((function(e){if(_.is(e)){var t=new ye(e.edits,n._changeAnnotations);n._textEditChanges[e.textDocument.uri]=t}}))):e.changes&&Object.keys(e.changes).forEach((function(t){var r=new ye(e.changes[t]);n._textEditChanges[t]=r}))):this._workspaceEdit={}}return Object.defineProperty(e.prototype,"edit",{get:function(){return this.initDocumentChanges(),void 0!==this._changeAnnotations&&(0===this._changeAnnotations.size?this._workspaceEdit.changeAnnotations=void 0:this._workspaceEdit.changeAnnotations=this._changeAnnotations.all()),this._workspaceEdit},enumerable:!1,configurable:!0}),e.prototype.getTextEditChange=function(e){if(x.is(e)){if(this.initDocumentChanges(),void 0===this._workspaceEdit.documentChanges)throw new Error("Workspace edit is not configured for document changes.");var n={uri:e.uri,version:e.version};if(!(r=this._textEditChanges[n.uri])){var t={textDocument:n,edits:i=[]};this._workspaceEdit.documentChanges.push(t),r=new ye(i,this._changeAnnotations),this._textEditChanges[n.uri]=r}return r}if(this.initChanges(),void 0===this._workspaceEdit.changes)throw new Error("Workspace edit is not configured for normal text edit changes.");var r;if(!(r=this._textEditChanges[e])){var i=[];this._workspaceEdit.changes[e]=i,r=new ye(i),this._textEditChanges[e]=r}return r},e.prototype.initDocumentChanges=function(){void 0===this._workspaceEdit.documentChanges&&void 0===this._workspaceEdit.changes&&(this._changeAnnotations=new Ae,this._workspaceEdit.documentChanges=[],this._workspaceEdit.changeAnnotations=this._changeAnnotations.all())},e.prototype.initChanges=function(){void 0===this._workspaceEdit.documentChanges&&void 0===this._workspaceEdit.changes&&(this._workspaceEdit.changes=Object.create(null))},e.prototype.createFile=function(e,n,t){if(this.initDocumentChanges(),void 0===this._workspaceEdit.documentChanges)throw new Error("Workspace edit is not configured for document changes.");var r,i,o;if(v.is(n)||I.is(n)?r=n:t=n,void 0===r?i=b.create(e,t):(o=I.is(r)?r:this._changeAnnotations.manage(r),i=b.create(e,t,o)),this._workspaceEdit.documentChanges.push(i),void 0!==o)return o},e.prototype.renameFile=function(e,n,t,r){if(this.initDocumentChanges(),void 0===this._workspaceEdit.documentChanges)throw new Error("Workspace edit is not configured for document changes.");var i,o,a;if(v.is(t)||I.is(t)?i=t:r=t,void 0===i?o=O.create(e,n,r):(a=I.is(i)?i:this._changeAnnotations.manage(i),o=O.create(e,n,r,a)),this._workspaceEdit.documentChanges.push(o),void 0!==a)return a},e.prototype.deleteFile=function(e,n,t){if(this.initDocumentChanges(),void 0===this._workspaceEdit.documentChanges)throw new Error("Workspace edit is not configured for document changes.");var r,i,o;if(v.is(n)||I.is(n)?r=n:t=n,void 0===r?i=D.create(e,t):(o=I.is(r)?r:this._changeAnnotations.manage(r),i=D.create(e,t,o)),this._workspaceEdit.documentChanges.push(i),void 0!==o)return o},e}();!function(e){e.create=function(e){return{uri:e}},e.is=function(e){var n=e;return _e.defined(n)&&_e.string(n.uri)}}(w||(w={})),function(e){e.create=function(e,n){return{uri:e,version:n}},e.is=function(e){var n=e;return _e.defined(n)&&_e.string(n.uri)&&_e.integer(n.version)}}(L||(L={})),function(e){e.create=function(e,n){return{uri:e,version:n}},e.is=function(e){var n=e;return _e.defined(n)&&_e.string(n.uri)&&(null===n.version||_e.integer(n.version))}}(x||(x={})),function(e){e.create=function(e,n,t,r){return{uri:e,languageId:n,version:t,text:r}},e.is=function(e){var n=e;return _e.defined(n)&&_e.string(n.uri)&&_e.string(n.languageId)&&_e.integer(n.version)&&_e.string(n.text)}}(M||(M={})),function(e){e.PlainText="plaintext",e.Markdown="markdown",e.is=function(n){var t=n;return t===e.PlainText||t===e.Markdown}}(k||(k={})),function(e){e.is=function(e){var n=e;return _e.objectLiteral(e)&&k.is(n.kind)&&_e.string(n.value)}}(P||(P={})),function(e){e.Text=1,e.Method=2,e.Function=3,e.Constructor=4,e.Field=5,e.Variable=6,e.Class=7,e.Interface=8,e.Module=9,e.Property=10,e.Unit=11,e.Value=12,e.Enum=13,e.Keyword=14,e.Snippet=15,e.Color=16,e.File=17,e.Reference=18,e.Folder=19,e.EnumMember=20,e.Constant=21,e.Struct=22,e.Event=23,e.Operator=24,e.TypeParameter=25}(F||(F={})),function(e){e.PlainText=1,e.Snippet=2}(G||(G={})),function(e){e.Deprecated=1}(U||(U={})),function(e){e.create=function(e,n,t){return{newText:e,insert:n,replace:t}},e.is=function(e){var n=e;return n&&_e.string(n.newText)&&l.is(n.insert)&&l.is(n.replace)}}(H||(H={})),function(e){e.asIs=1,e.adjustIndentation=2}(q||(q={})),function(e){e.is=function(e){var n=e;return n&&(_e.string(n.detail)||void 0===n.detail)&&(_e.string(n.description)||void 0===n.description)}}(X||(X={})),function(e){e.create=function(e){return{label:e}}}(j||(j={})),function(e){e.create=function(e,n){return{items:e||[],isIncomplete:!!n}}}(K||(K={})),function(e){e.fromPlainText=function(e){return e.replace(/[\\`*_{}[\]()#+\-.!]/g,"\\$&")},e.is=function(e){var n=e;return _e.string(n)||_e.objectLiteral(n)&&_e.string(n.language)&&_e.string(n.value)}}(B||(B={})),function(e){e.is=function(e){var n=e;return!!n&&_e.objectLiteral(n)&&(P.is(n.contents)||B.is(n.contents)||_e.typedArray(n.contents,B.is))&&(void 0===e.range||l.is(e.range))}}($||($={})),function(e){e.create=function(e,n){return n?{label:e,documentation:n}:{label:e}}}(W||(W={})),function(e){e.create=function(e,n){for(var t=[],r=2;r<arguments.length;r++)t[r-2]=arguments[r];var i={label:e};return _e.defined(n)&&(i.documentation=n),_e.defined(t)?i.parameters=t:i.parameters=[],i}}(V||(V={})),function(e){e.Text=1,e.Read=2,e.Write=3}(z||(z={})),function(e){e.create=function(e,n){var t={range:e};return _e.number(n)&&(t.kind=n),t}}(Y||(Y={})),function(e){e.File=1,e.Module=2,e.Namespace=3,e.Package=4,e.Class=5,e.Method=6,e.Property=7,e.Field=8,e.Constructor=9,e.Enum=10,e.Interface=11,e.Function=12,e.Variable=13,e.Constant=14,e.String=15,e.Number=16,e.Boolean=17,e.Array=18,e.Object=19,e.Key=20,e.Null=21,e.EnumMember=22,e.Struct=23,e.Event=24,e.Operator=25,e.TypeParameter=26}(Z||(Z={})),function(e){e.Deprecated=1}(J||(J={})),function(e){e.create=function(e,n,t,r,i){var o={name:e,kind:n,location:{uri:r,range:t}};return i&&(o.containerName=i),o}}(Q||(Q={})),function(e){e.create=function(e,n,t,r){return void 0!==r?{name:e,kind:n,location:{uri:t,range:r}}:{name:e,kind:n,location:{uri:t}}}}(ee||(ee={})),function(e){e.create=function(e,n,t,r,i,o){var a={name:e,detail:n,kind:t,range:r,selectionRange:i};return void 0!==o&&(a.children=o),a},e.is=function(e){var n=e;return n&&_e.string(n.name)&&_e.number(n.kind)&&l.is(n.range)&&l.is(n.selectionRange)&&(void 0===n.detail||_e.string(n.detail))&&(void 0===n.deprecated||_e.boolean(n.deprecated))&&(void 0===n.children||Array.isArray(n.children))&&(void 0===n.tags||Array.isArray(n.tags))}}(ne||(ne={})),function(e){e.Empty="",e.QuickFix="quickfix",e.Refactor="refactor",e.RefactorExtract="refactor.extract",e.RefactorInline="refactor.inline",e.RefactorRewrite="refactor.rewrite",e.Source="source",e.SourceOrganizeImports="source.organizeImports",e.SourceFixAll="source.fixAll"}(te||(te={})),function(e){e.Invoked=1,e.Automatic=2}(re||(re={})),function(e){e.create=function(e,n,t){var r={diagnostics:e};return null!=n&&(r.only=n),null!=t&&(r.triggerKind=t),r},e.is=function(e){var n=e;return _e.defined(n)&&_e.typedArray(n.diagnostics,S.is)&&(void 0===n.only||_e.typedArray(n.only,_e.string))&&(void 0===n.triggerKind||n.triggerKind===re.Invoked||n.triggerKind===re.Automatic)}}(ie||(ie={})),function(e){e.create=function(e,n,t){var r={title:e},i=!0;return"string"==typeof n?(i=!1,r.kind=n):y.is(n)?r.command=n:r.edit=n,i&&void 0!==t&&(r.kind=t),r},e.is=function(e){var n=e;return n&&_e.string(n.title)&&(void 0===n.diagnostics||_e.typedArray(n.diagnostics,S.is))&&(void 0===n.kind||_e.string(n.kind))&&(void 0!==n.edit||void 0!==n.command)&&(void 0===n.command||y.is(n.command))&&(void 0===n.isPreferred||_e.boolean(n.isPreferred))&&(void 0===n.edit||N.is(n.edit))}}(oe||(oe={})),function(e){e.create=function(e,n){var t={range:e};return _e.defined(n)&&(t.data=n),t},e.is=function(e){var n=e;return _e.defined(n)&&l.is(n.range)&&(_e.undefined(n.command)||y.is(n.command))}}(ae||(ae={})),function(e){e.create=function(e,n){return{tabSize:e,insertSpaces:n}},e.is=function(e){var n=e;return _e.defined(n)&&_e.uinteger(n.tabSize)&&_e.boolean(n.insertSpaces)}}(se||(se={})),function(e){e.create=function(e,n,t){return{range:e,target:n,data:t}},e.is=function(e){var n=e;return _e.defined(n)&&l.is(n.range)&&(_e.undefined(n.target)||_e.string(n.target))}}(le||(le={})),function(e){e.create=function(e,n){return{range:e,parent:n}},e.is=function(n){var t=n;return _e.objectLiteral(t)&&l.is(t.range)&&(void 0===t.parent||e.is(t.parent))}}(ce||(ce={})),function(e){e.namespace="namespace",e.type="type",e.class="class",e.enum="enum",e.interface="interface",e.struct="struct",e.typeParameter="typeParameter",e.parameter="parameter",e.variable="variable",e.property="property",e.enumMember="enumMember",e.event="event",e.function="function",e.method="method",e.macro="macro",e.keyword="keyword",e.modifier="modifier",e.comment="comment",e.string="string",e.number="number",e.regexp="regexp",e.operator="operator",e.decorator="decorator"}(ue||(ue={})),function(e){e.declaration="declaration",e.definition="definition",e.readonly="readonly",e.static="static",e.deprecated="deprecated",e.abstract="abstract",e.async="async",e.modification="modification",e.documentation="documentation",e.defaultLibrary="defaultLibrary"}(de||(de={})),function(e){e.is=function(e){var n=e;return _e.objectLiteral(n)&&(void 0===n.resultId||"string"==typeof n.resultId)&&Array.isArray(n.data)&&(0===n.data.length||"number"==typeof n.data[0])}}(he||(he={})),function(e){e.create=function(e,n){return{range:e,text:n}},e.is=function(e){var n=e;return null!=n&&l.is(n.range)&&_e.string(n.text)}}(pe||(pe={})),function(e){e.create=function(e,n,t){return{range:e,variableName:n,caseSensitiveLookup:t}},e.is=function(e){var n=e;return null!=n&&l.is(n.range)&&_e.boolean(n.caseSensitiveLookup)&&(_e.string(n.variableName)||void 0===n.variableName)}}(fe||(fe={})),function(e){e.create=function(e,n){return{range:e,expression:n}},e.is=function(e){var n=e;return null!=n&&l.is(n.range)&&(_e.string(n.expression)||void 0===n.expression)}}(me||(me={})),function(e){e.create=function(e,n){return{frameId:e,stoppedLocation:n}},e.is=function(e){var n=e;return _e.defined(n)&&l.is(e.stoppedLocation)}}(ge||(ge={})),function(e){e.Type=1,e.Parameter=2,e.is=function(e){return 1===e||2===e}}(Ee||(Ee={})),function(e){e.create=function(e){return{value:e}},e.is=function(e){var n=e;return _e.objectLiteral(n)&&(void 0===n.tooltip||_e.string(n.tooltip)||P.is(n.tooltip))&&(void 0===n.location||c.is(n.location))&&(void 0===n.command||y.is(n.command))}}(Te||(Te={})),function(e){e.create=function(e,n,t){var r={position:e,label:n};return void 0!==t&&(r.kind=t),r},e.is=function(e){var n=e;return _e.objectLiteral(n)&&s.is(n.position)&&(_e.string(n.label)||_e.typedArray(n.label,Te.is))&&(void 0===n.kind||Ee.is(n.kind))&&void 0===n.textEdits||_e.typedArray(n.textEdits,A.is)&&(void 0===n.tooltip||_e.string(n.tooltip)||P.is(n.tooltip))&&(void 0===n.paddingLeft||_e.boolean(n.paddingLeft))&&(void 0===n.paddingRight||_e.boolean(n.paddingRight))}}(Re||(Re={})),function(e){e.is=function(e){var n=e;return _e.objectLiteral(n)&&i.is(n.uri)&&_e.string(n.name)}}(Se||(Se={}));var Ie,Ce=["\n","\r\n","\r"];!function(e){function n(e,t){if(e.length<=1)return e;var r=e.length/2|0,i=e.slice(0,r),o=e.slice(r);n(i,t),n(o,t);for(var a=0,s=0,l=0;a<i.length&&s<o.length;){var c=t(i[a],o[s]);e[l++]=c<=0?i[a++]:o[s++]}for(;a<i.length;)e[l++]=i[a++];for(;s<o.length;)e[l++]=o[s++];return e}e.create=function(e,n,t,r){return new be(e,n,t,r)},e.is=function(e){var n=e;return!!(_e.defined(n)&&_e.string(n.uri)&&(_e.undefined(n.languageId)||_e.string(n.languageId))&&_e.uinteger(n.lineCount)&&_e.func(n.getText)&&_e.func(n.positionAt)&&_e.func(n.offsetAt))},e.applyEdits=function(e,t){for(var r=e.getText(),i=n(t,(function(e,n){var t=e.range.start.line-n.range.start.line;return 0===t?e.range.start.character-n.range.start.character:t})),o=r.length,a=i.length-1;a>=0;a--){var s=i[a],l=e.offsetAt(s.range.start),c=e.offsetAt(s.range.end);if(!(c<=o))throw new Error("Overlapping edit");r=r.substring(0,l)+s.newText+r.substring(c,r.length),o=l}return r}}(Ie||(Ie={}));var _e,be=function(){function e(e,n,t,r){this._uri=e,this._languageId=n,this._version=t,this._content=r,this._lineOffsets=void 0}return Object.defineProperty(e.prototype,"uri",{get:function(){return this._uri},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"languageId",{get:function(){return this._languageId},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"version",{get:function(){return this._version},enumerable:!1,configurable:!0}),e.prototype.getText=function(e){if(e){var n=this.offsetAt(e.start),t=this.offsetAt(e.end);return this._content.substring(n,t)}return this._content},e.prototype.update=function(e,n){this._content=e.text,this._version=n,this._lineOffsets=void 0},e.prototype.getLineOffsets=function(){if(void 0===this._lineOffsets){for(var e=[],n=this._content,t=!0,r=0;r<n.length;r++){t&&(e.push(r),t=!1);var i=n.charAt(r);t="\r"===i||"\n"===i,"\r"===i&&r+1<n.length&&"\n"===n.charAt(r+1)&&r++}t&&n.length>0&&e.push(n.length),this._lineOffsets=e}return this._lineOffsets},e.prototype.positionAt=function(e){e=Math.max(Math.min(e,this._content.length),0);var n=this.getLineOffsets(),t=0,r=n.length;if(0===r)return s.create(0,e);for(;t<r;){var i=Math.floor((t+r)/2);n[i]>e?r=i:t=i+1}var o=t-1;return s.create(o,e-n[o])},e.prototype.offsetAt=function(e){var n=this.getLineOffsets();if(e.line>=n.length)return this._content.length;if(e.line<0)return 0;var t=n[e.line],r=e.line+1<n.length?n[e.line+1]:this._content.length;return Math.max(Math.min(t+e.character,r),t)},Object.defineProperty(e.prototype,"lineCount",{get:function(){return this.getLineOffsets().length},enumerable:!1,configurable:!0}),e}();!function(e){var n=Object.prototype.toString;e.defined=function(e){return void 0!==e},e.undefined=function(e){return void 0===e},e.boolean=function(e){return!0===e||!1===e},e.string=function(e){return"[object String]"===n.call(e)},e.number=function(e){return"[object Number]"===n.call(e)},e.numberRange=function(e,t,r){return"[object Number]"===n.call(e)&&t<=e&&e<=r},e.integer=function(e){return"[object Number]"===n.call(e)&&-2147483648<=e&&e<=2147483647},e.uinteger=function(e){return"[object Number]"===n.call(e)&&0<=e&&e<=2147483647},e.func=function(e){return"[object Function]"===n.call(e)},e.objectLiteral=function(e){return null!==e&&"object"==typeof e},e.typedArray=function(e,n){return Array.isArray(e)&&e.every(n)}}(_e||(_e={}))},2806:(e,n,t)=>{const r="win32"===process.platform||"cygwin"===process.env.OSTYPE||"msys"===process.env.OSTYPE,i=t(1017),o=r?";":":",a=t(1959),s=e=>Object.assign(new Error(`not found: ${e}`),{code:"ENOENT"}),l=(e,n)=>{const t=n.colon||o,i=e.match(/\//)||r&&e.match(/\\/)?[""]:[...r?[process.cwd()]:[],...(n.path||process.env.PATH||"").split(t)],a=r?n.pathExt||process.env.PATHEXT||".EXE;.CMD;.BAT;.COM":"",s=r?a.split(t):[""];return r&&-1!==e.indexOf(".")&&""!==s[0]&&s.unshift(""),{pathEnv:i,pathExt:s,pathExtExe:a}},c=(e,n,t)=>{"function"==typeof n&&(t=n,n={}),n||(n={});const{pathEnv:r,pathExt:o,pathExtExe:c}=l(e,n),u=[],d=t=>new Promise(((o,a)=>{if(t===r.length)return n.all&&u.length?o(u):a(s(e));const l=r[t],c=/^".*"$/.test(l)?l.slice(1,-1):l,d=i.join(c,e),p=!c&&/^\.[\\\/]/.test(e)?e.slice(0,2)+d:d;o(h(p,t,0))})),h=(e,t,r)=>new Promise(((i,s)=>{if(r===o.length)return i(d(t+1));const l=o[r];a(e+l,{pathExt:c},((o,a)=>{if(!o&&a){if(!n.all)return i(e+l);u.push(e+l)}return i(h(e,t,r+1))}))}));return t?d(0).then((e=>t(null,e)),t):d(0)};e.exports=c,c.sync=(e,n)=>{n=n||{};const{pathEnv:t,pathExt:r,pathExtExe:o}=l(e,n),c=[];for(let s=0;s<t.length;s++){const l=t[s],u=/^".*"$/.test(l)?l.slice(1,-1):l,d=i.join(u,e),h=!u&&/^\.[\\\/]/.test(e)?e.slice(0,2)+d:d;for(let e=0;e<r.length;e++){const t=h+r[e];try{if(a.sync(t,{pathExt:o})){if(!n.all)return t;c.push(t)}}catch(e){}}}if(n.all&&c.length)return c;if(n.nothrow)return null;throw s(e)}},2479:e=>{e.exports=function e(n,t){if(n&&t)return e(n)(t);if("function"!=typeof n)throw new TypeError("need wrapper function");return Object.keys(n).forEach((function(e){r[e]=n[e]})),r;function r(){for(var e=new Array(arguments.length),t=0;t<e.length;t++)e[t]=arguments[t];var r=n.apply(this,e),i=e[e.length-1];return"function"==typeof r&&r!==i&&Object.keys(i).forEach((function(e){r[e]=i[e]})),r}}},9602:e=>{"use strict";e.exports=function(e){e.prototype[Symbol.iterator]=function*(){for(let e=this.head;e;e=e.next)yield e.value}}},4411:(e,n,t)=>{"use strict";function r(e){var n=this;if(n instanceof r||(n=new r),n.tail=null,n.head=null,n.length=0,e&&"function"==typeof e.forEach)e.forEach((function(e){n.push(e)}));else if(arguments.length>0)for(var t=0,i=arguments.length;t<i;t++)n.push(arguments[t]);return n}function i(e,n){e.tail=new a(n,e.tail,null,e),e.head||(e.head=e.tail),e.length++}function o(e,n){e.head=new a(n,null,e.head,e),e.tail||(e.tail=e.head),e.length++}function a(e,n,t,r){if(!(this instanceof a))return new a(e,n,t,r);this.list=r,this.value=e,n?(n.next=this,this.prev=n):this.prev=null,t?(t.prev=this,this.next=t):this.next=null}e.exports=r,r.Node=a,r.create=r,r.prototype.removeNode=function(e){if(e.list!==this)throw new Error("removing node which does not belong to this list");var n=e.next,t=e.prev;return n&&(n.prev=t),t&&(t.next=n),e===this.head&&(this.head=n),e===this.tail&&(this.tail=t),e.list.length--,e.next=null,e.prev=null,e.list=null,n},r.prototype.unshiftNode=function(e){if(e!==this.head){e.list&&e.list.removeNode(e);var n=this.head;e.list=this,e.next=n,n&&(n.prev=e),this.head=e,this.tail||(this.tail=e),this.length++}},r.prototype.pushNode=function(e){if(e!==this.tail){e.list&&e.list.removeNode(e);var n=this.tail;e.list=this,e.prev=n,n&&(n.next=e),this.tail=e,this.head||(this.head=e),this.length++}},r.prototype.push=function(){for(var e=0,n=arguments.length;e<n;e++)i(this,arguments[e]);return this.length},r.prototype.unshift=function(){for(var e=0,n=arguments.length;e<n;e++)o(this,arguments[e]);return this.length},r.prototype.pop=function(){if(this.tail){var e=this.tail.value;return this.tail=this.tail.prev,this.tail?this.tail.next=null:this.head=null,this.length--,e}},r.prototype.shift=function(){if(this.head){var e=this.head.value;return this.head=this.head.next,this.head?this.head.prev=null:this.tail=null,this.length--,e}},r.prototype.forEach=function(e,n){n=n||this;for(var t=this.head,r=0;null!==t;r++)e.call(n,t.value,r,this),t=t.next},r.prototype.forEachReverse=function(e,n){n=n||this;for(var t=this.tail,r=this.length-1;null!==t;r--)e.call(n,t.value,r,this),t=t.prev},r.prototype.get=function(e){for(var n=0,t=this.head;null!==t&&n<e;n++)t=t.next;if(n===e&&null!==t)return t.value},r.prototype.getReverse=function(e){for(var n=0,t=this.tail;null!==t&&n<e;n++)t=t.prev;if(n===e&&null!==t)return t.value},r.prototype.map=function(e,n){n=n||this;for(var t=new r,i=this.head;null!==i;)t.push(e.call(n,i.value,this)),i=i.next;return t},r.prototype.mapReverse=function(e,n){n=n||this;for(var t=new r,i=this.tail;null!==i;)t.push(e.call(n,i.value,this)),i=i.prev;return t},r.prototype.reduce=function(e,n){var t,r=this.head;if(arguments.length>1)t=n;else{if(!this.head)throw new TypeError("Reduce of empty list with no initial value");r=this.head.next,t=this.head.value}for(var i=0;null!==r;i++)t=e(t,r.value,i),r=r.next;return t},r.prototype.reduceReverse=function(e,n){var t,r=this.tail;if(arguments.length>1)t=n;else{if(!this.tail)throw new TypeError("Reduce of empty list with no initial value");r=this.tail.prev,t=this.tail.value}for(var i=this.length-1;null!==r;i--)t=e(t,r.value,i),r=r.prev;return t},r.prototype.toArray=function(){for(var e=new Array(this.length),n=0,t=this.head;null!==t;n++)e[n]=t.value,t=t.next;return e},r.prototype.toArrayReverse=function(){for(var e=new Array(this.length),n=0,t=this.tail;null!==t;n++)e[n]=t.value,t=t.prev;return e},r.prototype.slice=function(e,n){(n=n||this.length)<0&&(n+=this.length),(e=e||0)<0&&(e+=this.length);var t=new r;if(n<e||n<0)return t;e<0&&(e=0),n>this.length&&(n=this.length);for(var i=0,o=this.head;null!==o&&i<e;i++)o=o.next;for(;null!==o&&i<n;i++,o=o.next)t.push(o.value);return t},r.prototype.sliceReverse=function(e,n){(n=n||this.length)<0&&(n+=this.length),(e=e||0)<0&&(e+=this.length);var t=new r;if(n<e||n<0)return t;e<0&&(e=0),n>this.length&&(n=this.length);for(var i=this.length,o=this.tail;null!==o&&i>n;i--)o=o.prev;for(;null!==o&&i>e;i--,o=o.prev)t.push(o.value);return t},r.prototype.splice=function(e,n,...t){e>this.length&&(e=this.length-1),e<0&&(e=this.length+e);for(var r=0,i=this.head;null!==i&&r<e;r++)i=i.next;var o,s,l,c,u=[];for(r=0;i&&r<n;r++)u.push(i.value),i=this.removeNode(i);for(null===i&&(i=this.tail),i!==this.head&&i!==this.tail&&(i=i.prev),r=0;r<t.length;r++)o=this,s=i,l=t[r],c=void 0,null===(c=s===o.head?new a(l,null,s,o):new a(l,s,s.next,o)).next&&(o.tail=c),null===c.prev&&(o.head=c),o.length++,i=c;return u},r.prototype.reverse=function(){for(var e=this.head,n=this.tail,t=e;null!==t;t=t.prev){var r=t.prev;t.prev=t.next,t.next=r}return this.head=n,this.tail=e,this};try{t(9602)(r)}catch(e){}},9496:e=>{"use strict";e.exports=require("vscode")},9491:e=>{"use strict";e.exports=require("assert")},2081:e=>{"use strict";e.exports=require("child_process")},6113:e=>{"use strict";e.exports=require("crypto")},2361:e=>{"use strict";e.exports=require("events")},7147:e=>{"use strict";e.exports=require("fs")},1808:e=>{"use strict";e.exports=require("net")},2037:e=>{"use strict";e.exports=require("os")},1017:e=>{"use strict";e.exports=require("path")},2781:e=>{"use strict";e.exports=require("stream")},3837:e=>{"use strict";e.exports=require("util")},4147:e=>{"use strict";e.exports=JSON.parse('{"name":"linter-gfortran","displayName":"Modern Fortran","description":"Fortran language support, syntax highlighting, Language Server support, Debugging, Diagnostics and much more.","version":"3.2.0","publisher":"fortran-lang","license":"MIT","author":{"name":"The Fortran Programming Language","url":"https://fortran-lang.org"},"maintainers":[{"email":"krvajal.miguelangel@gmail.com","name":"Miguel Carvajal"},{"email":"giannis.nikiteas@gmail.com","name":"Giannis Nikiteas"}],"engines":{"vscode":"^1.63.0"},"icon":"assets/png/icon.png","homepage":"https://github.com/fortran-lang/vscode-fortran-support#readme","qna":"https://github.com/fortran-lang/vscode-fortran-support/issues","repository":{"type":"git","url":"https://github.com/fortran-lang/vscode-fortran-support.git"},"keywords":["Fortran","Free Form fortran","Fixed Form fortran","Modern Fortran","IntelliSense","fortls","fpm","IDE"],"categories":["Programming Languages","Snippets","Linters","Debuggers","Formatters"],"galleryBanner":{"color":"#6853ad","theme":"dark"},"activationEvents":["onLanguage:FortranFreeForm","onLanguage:FortranFixedForm"],"main":"./dist/extension.js","extensionDependencies":["ms-vscode.cpptools"],"contributes":{"languages":[{"id":"FortranFreeForm","aliases":["Fortran","Fortran90"],"extensions":[".f90",".F90",".f95",".F95",".f03",".F03",".f08",".F08",".f18",".F18",".fpp",".FPP",".pf",".PF"],"configuration":"./language-configuration.json"},{"id":"FortranFixedForm","aliases":["Fortran77"],"extensions":[".f",".F",".f77",".F77",".for",".FOR"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"FortranFreeForm","scopeName":"source.fortran.free","path":"./syntaxes/fortran_free-form.tmLanguage.json"},{"scopeName":"source.openmp","path":"./syntaxes/openmp_lang.json","injectTo":["source.fortran.free"]},{"scopeName":"source.openacc","path":"./syntaxes/openacc_lang.json","injectTo":["source.fortran.free"]},{"language":"FortranFixedForm","scopeName":"source.fortran.fixed","path":"./syntaxes/fortran_fixed-form.tmLanguage.json"}],"snippets":[{"language":"FortranFreeForm","path":"./snippets/fortran90.json"}],"configuration":[{"id":"general","title":"General","order":10,"properties":{"fortran.provide.autocomplete":{"type":"string","default":"fortls","enum":["fortls","Built-in","Disabled"],"markdownDescription":"Enables code autocompletion, by default it uses `fortls`.","order":10},"fortran.provide.hover":{"type":"string","default":"fortls","enum":["fortls","Built-in","Both","Disabled"],"markdownDescription":"Enables hover support, by default it uses `fortls`.","order":20},"fortran.provide.symbols":{"type":"string","default":"fortls","enum":["fortls","Both"],"markdownDescription":"Outline of modules, functions, subroutines, etc. in the document, by default it uses `fortls`, `Both` will use `fortls` and the `Built-in` functionality (not recommended).","order":30},"fortran.preferredCase":{"type":"string","default":"lowercase","enum":["lowercase","uppercase"],"markdownDescription":"Specify the word case to use when suggesting autocomplete options.","order":60}}},{"id":"linting","title":"Linting","order":20,"properties":{"fortran.linter.compiler":{"type":"string","default":"gfortran","enum":["gfortran","ifort","ifx","nagfor","Disabled"],"markdownDescription":"Compiler used for linting support."},"fortran.linter.includePaths":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"Specifies folder paths to be used as include paths during linting. Can resolve glob patterns e.g. `/usr/local/include/**` and internal variables with `~`, `${workspaceFolder}`, `${env}`, `${config}`, `${file}`, `${fileDirname}`, `${fileBasenameNoExtension}`"},"fortran.linter.compilerPath":{"type":"string","default":"","markdownDescription":"Specifies the path to the linter executable."},"fortran.linter.extraArgs":{"type":"array","items":{"type":"string"},"markdownDescription":"Pass additional options to the linter compiler.  Can resolve internal variables with `~`, `${workspaceFolder}`, `${env}`, `${config}`, `${file}`, `${fileDirname}`, `${fileBasenameNoExtension}`"},"fortran.linter.modOutput":{"type":"string","default":"","markdownDescription":"Global output directory for .mod files generated due to linting `-J<linter.modOutput>`. Can resolve internal variables with `~`, `${workspaceFolder}`, `${env}`, `${config}`, `${file}`, `${fileDirname}`, `${fileBasenameNoExtension}`"}}},{"id":"formatting","title":"Formatting","order":30,"properties":{"fortran.formatting.formatter":{"type":"string","default":"findent","enum":["findent","fprettify","Disabled"],"markdownDescription":"Fortran formatter, currently supports `findent` and `fprettify`","order":10},"fortran.formatting.findentArgs":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"Additional arguments for the `findent` formatter","order":20},"fortran.formatting.fprettifyArgs":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"Additional arguments for the `fprettify` formatter","order":30},"fortran.formatting.path":{"type":"string","default":"","markdownDescription":"If the formatter is not in the `$PATH` specify the full path to its location.","order":40}}},{"id":"lsp","title":"Language Server","order":40,"properties":{"fortran.fortls.path":{"type":"string","default":"fortls","markdownDescription":"Path to the Fortran language server (`fortls`).","order":10},"fortran.fortls.configure":{"type":"string","default":"","markdownDescription":"Filename holding additional configuration options. For more see: https://gnikit.github.io/fortls/options.html#configuration-using-a-file.","order":20},"fortran.fortls.notifyInit":{"type":"boolean","default":false,"markdownDescription":"Notify when workspace initialization is complete.","order":30},"fortran.fortls.incrementalSync":{"type":"boolean","default":true,"markdownDescription":"Use incremental synchronization for file changes.","order":40},"fortran.fortls.nthreads":{"type":"integer","default":4,"markdownDescription":"Number of threads to use during workspace initialization (default: 4).","order":45},"fortran.fortls.sortKeywords":{"type":"boolean","default":false,"markdownDescription":"Display variable keywords information when hovering in a sorted, consistent order.","order":50},"fortran.fortls.symbolTypes":{"type":"boolean","default":true,"markdownDescription":"Include derived types in the symbols outline. If false it adds the  `--symbol_skip_mem` argument to fortls.","order":60},"fortran.fortls.suffixes":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"Parse additional file extensions to the default (**default**: `F,F77,F90,F95,F03,F08,FOR,FPP` (lower & upper casing)) (**fortls arg: `incl_suffixes`**). For more read the [documentation](https://gnikit.github.io/fortls/options.html#incl-suffixes).","order":61},"fortran.fortls.directories":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"Folders containing source files (**default: `[\'./**\']`**), (**fortls arg: `source_dirs`**). For more read the [documentation](https://gnikit.github.io/fortls/options.html#source-dirs).","order":62},"fortran.fortls.excludeSuffixes":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"Source file extensions to be excluded (**fortls arg: `excl_suffixes`**). For more read the [documentation](https://gnikit.github.io/fortls/options.html#excl-suffixes).","order":63},"fortran.fortls.excludeDirectories":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"Folders to exclude from parsing (**fortls arg: `excl_paths`**). For more read the [documentation](https://gnikit.github.io/fortls/options.html#excl-paths).","order":64},"fortran.fortls.preprocessor.suffixes":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"File extensions to be parsed **ONLY** for preprocessor commands (**default**: all uppercase source file suffixes) (**fortls arg: `pp_suffixes`**). By default preprocessor definitions are parsed for all Fortran source files with uppercase extensions e.g. `.F90`, `.F`, `.F08`, etc.. However, the default behaviour can be overridden by defining `pp_defs`. For more read the [documentation](https://gnikit.github.io/fortls/options.html#pp-suffixes).","order":65},"fortran.fortls.preprocessor.directories":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"Folders containing preprocessor files with extensions `pp_suffixes` (**fortls arg: `include_dirs`**). Understands Python glob patterns. By default `fortls` will scan the project’s directories for files with extensions `pp_suffixes` to parse for **preprocessor definitions**. However, if the preprocessor files are external to the project, their locations can be specified via `include_dirs`. For more read the [documentation](https://gnikit.github.io/fortls/options.html#include-dirs).","order":66},"fortran.fortls.preprocessor.definitions":{"type":"object","additionalProperties":{"type":"string"},"markdownDescription":"A dictionary of preprocessor definitions. (**fortls arg: `pp_defs`**). Preprocessor definitions are normally included via `include_dirs`. For more read the [documentation](https://gnikit.github.io/fortls/options.html#pp-defs).","order":67},"fortran.fortls.disableDiagnostics":{"type":"boolean","default":false,"markdownDescription":"Disable additional diagnostics from `fortls` e.g. multiple variable definitions, unknown modules in use statement.","order":70},"fortran.fortls.maxLineLength":{"type":"number","default":-1,"markdownDescription":"Maximum line length. For `gfortran` this also sets the linting compiler flag `-ffree-line-length-<n>` and `-ffixed-line-length-<n>`. Default value is `none`.","order":90},"fortran.fortls.maxCommentLineLength":{"type":"number","default":-1,"markdownDescription":"Maximum comment line length.","order":100},"fortran.fortls.extraArgs":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"Additional arguments for the `fortls`. For more see: https://gnikit.github.io/fortls/options.html#configuration-using-the-command-line","order":110},"fortran.fortls.disableAutoupdate":{"type":"boolean","default":false,"markdownDescription":"fortls will automatically attempt to update itself from PyPi. Set this option if you want to fix your version of fortls. Autoudpate will not occur for Anaconda environments.","order":120},"fortran.fortls.disabled":{"type":"boolean","default":false,"markdownDescription":"Disable the Language Server. If true, it will limit the extension\'s functionality substantially. **Should be avoided!**","order":1300}}},{"id":"deprecated","title":"Deprecated Options","order":999,"properties":{"fortran.includePaths":{"deprecationMessage":"fortran.includePaths has been renamed to fortran.linter.includePaths."},"fortran.gfortranExecutable":{"deprecationMessage":"fortran.gfortranExecutable has been renamed to fortran.linter.compilerPath"},"fortran.linterEnabled":{"deprecationMessage":"fortran.linterEnabled has been renamed to fortran.linter.compiler set to Disable to turn off."},"fortran.linterExtraArgs":{"deprecationMessage":"fortran.linterExtraArgs has been renamed to fortran.linter.extraArgs"},"fortran.linterModOutput":{"deprecationMessage":"fortran.linterModOutput has been renamed to fortran.linter.modOutput."},"fortran.provideSymbols":{"deprecationMessage":"fortran.provideSymbols has been renamed to fortran.provide.symbols. By default the fortls symbols are used, to enable the built-in symbols turn on the Built-in option."},"fortran.symbols":{"deprecationMessage":"fortran.symbols has been removed in favour of the fortran language server returning all symbols."},"fortran.provideHover":{"deprecationMessage":"fortran.provideHover has been renamed to fortran.provide.hover. By default the fortls hover is used, to enable the built-in hover turn on the Built-in option."},"fortran.provideCompletion":{"deprecationMessage":"fortran.provideCompletion has been renamed to fortran.provide.autocomplete. By default the fortls autocompletion is used, to enable the built-in autocompletion turn on the Built-in option."},"fortran.fortls.preserveKeywordOrder":{"deprecationMessage":"This option is now the default, use fortran.fortls.sortKeywords to sort keywords."}}}],"breakpoints":[{"language":"FortranFreeForm"},{"language":"FortranFixedForm"}],"commands":[{"category":"Fortran","command":"fortran.analysis.restartLanguageServer","title":"Restart the Fortran Language Server"},{"category":"Fortran","command":"fortran.analysis.rescanLinter","title":"Rescan Linter paths"},{"category":"Fortran","command":"fortran.analysis.showWhatsNew","title":"What\'s New"}],"menus":{"commandPalette":[{"category":"Fortran","command":"fortran.analysis.restartLanguageServer","title":"Restart the Fortran Language Server","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Fortran","command":"fortran.analysis.rescanLinter","title":"Rescan Linter paths","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Fortran","command":"fortran.analysis.showWhatsNew","title":"What\'s New","when":"!virtualWorkspace && shellExecutionSupported"}]}},"scripts":{"vscode:prepublish":"npm run compile","clean":"npx rimraf dist out .vscode-test","compile":"webpack --mode production","compile-dev":"webpack --mode development","watch":"webpack --mode production --watch --progress","watch-dev":"webpack --mode development --watch --progress","webpack":"webpack --mode production","pretest":"npm run compile-dev && tsc -p tsconfig.test.json","test":"node ./out/test/runTest.js","test:grammar-free":"vscode-tmgrammar-snap -s source.fortran.free -g ./syntaxes/fortran_free-form.tmLanguage.json \\"./test/fortran/syntax/**/*{.f90,F90}\\"","test:grammar-fixed":"vscode-tmgrammar-snap -s source.fortran.fixed -g ./syntaxes/fortran_fixed-form.tmLanguage.json \\"./test/fortran/syntax/**/*{.f,F}\\"","test:grammar":"npm run test:grammar-free && npm run test:grammar-fixed","test:grammar-update":"npm run test:grammar-free -- -u && npm run test:grammar-fixed -- -u","lint":"eslint . --ext .ts,.tsx","lint-fix":"npm run lint -- --fix","format":"prettier --write \'src/**/*.{ts,json}\' \'test/**/*.ts\' \'syntaxes/**/*.json\' \'snippets/**/*.json\' \'./**/*.{md,json,yaml,yml}\'","prepare":"husky install","pre-commit":"lint-staged"},"devDependencies":{"@types/glob":"^7.2.0","@types/mocha":"^9.1.0","@types/node":"^16.11.39","@types/vscode":"^1.63.0","@types/which":"^2.0.1","@typescript-eslint/eslint-plugin":"^5.30.5","@typescript-eslint/parser":"^5.30.5","@vscode/test-electron":"^2.1.5","eslint":"^8.19.0","eslint-plugin-import":"^2.25.4","eslint-plugin-jsdoc":"^39.3.3","eslint-plugin-prettier":"^4.2.1","husky":"^8.0.1","lint-staged":"^13.0.3","mocha":"^10.0.0","prettier":"^2.7.1","ts-loader":"^9.3.1","typescript":"^4.7.4","vscode-tmgrammar-test":"^0.1.1","webpack":"^5.73.0","webpack-cli":"^4.10.0"},"lint-staged":{"*.ts":["npm run format","npm run lint-fix","npm run lint -- --max-warnings=0"]},"dependencies":{"fast-glob":"^3.2.11","glob":"^8.0.3","vscode-languageclient":"^8.0.1","which":"^2.0.2"}}')},1082:e=>{"use strict";e.exports=JSON.parse('{"SIGNAL":{"doc":"`SIGNAL` — Signal handling subroutine (or function)\\n\\n### Description\\n`SIGNAL(NUMBER, HANDLER [, STATUS])` causes external subroutine\\n`HANDLER` to be executed with a single integer argument when signal\\n`NUMBER` occurs.  If `HANDLER` is an integer, it can be used to\\nturn off handling of signal `NUMBER` or revert to its default\\naction.  See `signal(2)`.\\n\\n     \\nIf `SIGNAL` is called as a subroutine and the `STATUS` argument\\nis supplied, it is set to the value returned by `signal(2)`.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `STATUS = SIGNAL(NUMBER, HANDLER)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n\\n\\n | `HANDLER` | Signal handler (`INTEGER FUNCTION` or\\n`SUBROUTINE`) or dummy/global `INTEGER` scalar. \\n`INTEGER`. It is `INTENT(IN)`. \\n\\n | `STATUS`  | (Optional) `STATUS` shall be a scalar\\ninteger. It has `INTENT(OUT)`.\\n\\n\\n\x3c!-- TODO: What should the interface of the handler be?  Does it take arguments? --\x3e\\n\\n\\n\\n\\n### Return value\\nThe `SIGNAL` function returns the value returned by `signal(2)`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_signal\\n\\n  intrinsic signal\\n\\n  external handler_print\\n\\n\\n  call signal (12, handler_print)\\n\\n  call signal (10, 1)\\n\\n\\n  call sleep (30)\\n\\nend program test_signal\\n\\n```\\n\\n     \\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n"},"BGT":{"doc":"`BGT` — Bitwise greater than\\n\\n### Description\\nDetermines whether an integral is a bitwise greater than another.\\n\\n\\n\\n### Syntax\\n`RESULT = BGT(I, J)`\\n\\n\\n### Arguments\\n\\n     \\n type. \\n\\n | `J`  | Shall be of `INTEGER` type, and of the same kind\\nas `I`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `LOGICAL` and of the default kind.\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"BGE.html#BGE\\">BGE</a>, <a href=\\"BLE.html#BLE\\">BLE</a>, <a href=\\"BLT.html#BLT\\">BLT</a>\\n"},"ATANH":{"doc":"`ATANH` — Inverse hyperbolic tangent function\\n\\n### Description\\n`ATANH(X)` computes the inverse hyperbolic tangent of `X`.\\n\\n\\n\\n### Syntax\\n`RESULT = ATANH(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value has same type and kind as `X`. If `X` is\\ncomplex, the imaginary part of the result is in radians and lies between\\n-\\\\pi/2 \\\\leq \\\\Im \\\\atanh(x) \\\\leq \\\\pi/2.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_atanh\\n\\n  REAL, DIMENSION(3) :: x = (/ -1.0, 0.0, 1.0 /)\\n\\n  WRITE (*,*) ATANH(x)\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name              | Argument           | Return type        | Standard\\n\\n | `DATANH(X)`  | `REAL(8) X`   | `REAL(8)`     | GNU extension\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\nInverse function: <a href=\\"TANH.html#TANH\\">TANH</a>\\n"},"DSHIFTL":{"doc":"`DSHIFTL` — Combined left shift\\n\\n### Description\\n`DSHIFTL(I, J, SHIFT)` combines bits of `I` and `J`. The\\nrightmost `SHIFT` bits of the result are the leftmost `SHIFT`\\nbits of `J`, and the remaining bits are the rightmost bits of\\n`I`.\\n\\n\\n\\n### Syntax\\n`RESULT = DSHIFTL(I, J, SHIFT)`\\n\\n\\n### Arguments\\n\\n     \\n or a BOZ constant. \\n\\n | `J`  | Shall be of type `INTEGER` or a BOZ constant. \\nIf both `I` and `J` have integer type, then they shall have\\nthe same kind type parameter. `I` and `J` shall not both be\\nBOZ constants. \\n\\n | `SHIFT`  | Shall be of type `INTEGER`. It shall\\nbe nonnegative.  If `I` is not a BOZ constant, then `SHIFT`\\nshall be less than or equal to `BIT_SIZE(I)`; otherwise,\\n`SHIFT` shall be less than or equal to `BIT_SIZE(J)`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nIf either `I` or `J` is a BOZ constant, it is first converted\\nas if by the intrinsic function `INT` to an integer type with the\\nkind type parameter of the other.\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"DSHIFTR.html#DSHIFTR\\">DSHIFTR</a>\\n"},"DREAL":{"doc":"`DREAL` — Double real part function\\n\\n### Description\\n`DREAL(Z)` returns the real part of complex variable `Z`.\\n\\n\\n\\n### Syntax\\n`RESULT = DREAL(A)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `REAL(8)`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_dreal\\n\\n    complex(8) :: z = (1.3_8,7.2_8)\\n\\n    print *, dreal(z)\\n\\nend program test_dreal\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"AIMAG.html#AIMAG\\">AIMAG</a>\\n\\n   "},"MOD":{"doc":"`MOD` — Remainder function\\n\\n### Description\\n`MOD(A,P)` computes the remainder of the division of A by P.\\n\\n\\n\\n### Syntax\\n`RESULT = MOD(A, P)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `P`  | Shall be a scalar of the same type and kind as `A`\\nand not equal to zero.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is the result of `A - (INT(A/P) * P)`. The type\\nand kind of the return value is the same as that of the arguments. The\\nreturned value has the same sign as A and a magnitude less than the\\nmagnitude of P.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_mod\\n\\n  print *, mod(17,3)\\n\\n  print *, mod(17.5,5.5)\\n\\n  print *, mod(17.5d0,5.5)\\n\\n  print *, mod(17.5,5.5d0)\\n\\n\\n  print *, mod(-17,3)\\n\\n  print *, mod(-17.5,5.5)\\n\\n  print *, mod(-17.5d0,5.5)\\n\\n  print *, mod(-17.5,5.5d0)\\n\\n\\n  print *, mod(17,-3)\\n\\n  print *, mod(17.5,-5.5)\\n\\n  print *, mod(17.5d0,-5.5)\\n\\n  print *, mod(17.5,-5.5d0)\\n\\nend program test_mod\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name              | Arguments           | Return type     | Standard\\n\\n | `MOD(A,P)`   | `INTEGER A,P`  | `INTEGER`  | Fortran 95 and later\\n\\n | `AMOD(A,P)`  | `REAL(4) A,P`  | `REAL(4)`  | Fortran 95 and later\\n\\n | `DMOD(A,P)`  | `REAL(8) A,P`  | `REAL(8)`  | Fortran 95 and later\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"MODULO.html#MODULO\\">MODULO</a>\\n\\n   "},"NOT":{"doc":"`NOT` — Logical negation\\n\\n### Description\\n`NOT` returns the bitwise Boolean inverse of `I`.\\n\\n\\n\\n### Syntax\\n`RESULT = NOT(I)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return type is `INTEGER`, of the same kind as the\\nargument.\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"IAND.html#IAND\\">IAND</a>, <a href=\\"IEOR.html#IEOR\\">IEOR</a>, <a href=\\"IOR.html#IOR\\">IOR</a>, <a href=\\"IBITS.html#IBITS\\">IBITS</a>, <a href=\\"IBSET.html#IBSET\\">IBSET</a>, <a href=\\"IBCLR.html#IBCLR\\">IBCLR</a>\\n\\n   "},"SPREAD":{"doc":"`SPREAD` — Add a dimension to an array\\n\\n### Description\\nReplicates a `SOURCE` array `NCOPIES` times along a specified\\ndimension `DIM`.\\n\\n\\n\\n### Syntax\\n`RESULT = SPREAD(SOURCE, DIM, NCOPIES)`\\n\\n\\n### Arguments\\n\\n     \\n | `SOURCE`   | Shall be a scalar or an array of any type and\\na rank less than seven. \\n\\n | `DIM`      | Shall be a scalar of type `INTEGER` with a\\nvalue in the range from 1 to n+1, where n equals the rank of `SOURCE`. \\n\\n | `NCOPIES`  | Shall be a scalar of type `INTEGER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe result is an array of the same type as `SOURCE` and has rank n+1\\nwhere n equals the rank of `SOURCE`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_spread\\n\\n  INTEGER :: a = 1, b(2) = (/ 1, 2 /)\\n\\n  WRITE(*,*) SPREAD(A, 1, 2)            ! \\"1 1\\"\\n\\n  WRITE(*,*) SPREAD(B, 1, 2)            ! \\"1 1 2 2\\"\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n\\n### See also\\n<a href=\\"UNPACK.html#UNPACK\\">UNPACK</a>\\n"},"MVBITS":{"doc":"`MVBITS` — Move bits from one integer to another\\n\\n### Description\\nMoves `LEN` bits from positions `FROMPOS` through\\n`FROMPOS+LEN-1` of `FROM` to positions `TOPOS` through\\n`TOPOS+LEN-1` of `TO`. The portion of argument `TO` not\\naffected by the movement of bits is unchanged. The values of\\n`FROMPOS+LEN-1` and `TOPOS+LEN-1` must be less than\\n`BIT_SIZE(FROM)`.\\n\\n\\n\\n### Syntax\\n`CALL MVBITS(FROM, FROMPOS, LEN, TO, TOPOS)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `FROMPOS`  | The type shall be `INTEGER`. \\n\\n | `LEN`      | The type shall be `INTEGER`. \\n\\n | `TO`       | The type shall be `INTEGER`, of the\\nsame kind as `FROM`. \\n\\n | `TOPOS`    | The type shall be `INTEGER`.\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental subroutine\\n\\n\\n\\n### See also\\n<a href=\\"IBCLR.html#IBCLR\\">IBCLR</a>, <a href=\\"IBSET.html#IBSET\\">IBSET</a>, <a href=\\"IBITS.html#IBITS\\">IBITS</a>, <a href=\\"IAND.html#IAND\\">IAND</a>, <a href=\\"IOR.html#IOR\\">IOR</a>, <a href=\\"IEOR.html#IEOR\\">IEOR</a>\\n"},"ATAND":{"doc":"`ATAND` — Arctangent function, degrees\\n\\n### Description\\nATAND(X) computes the arctangent of X in degrees (inverse of TAND).\\nThis function is for compatibility only and should be avoided in favor of standard constructs wherever possible.\\n### Standard\\nGNU Extension, enabled with -fdec-math\\n### Class\\nElemental function\\n### Syntax\\nRESULT = ATAND(X)\\nRESULT = ATAND(Y, X)\\n### Arguments\\n- X: The type shall be REAL or COMPLEX; if Y is present, X shall be REAL.- Y: Shall be of the same type and kind as X.\\n### Return value\\nThe return value is of the same type and kind as X. If Y is present, the result is identical to ATAND2(Y,X). Otherwise, it is the arcus tangent of X, where the real part of the result is in degrees and lies in the range -90 \\\\leq \\\\Re \\\\atand(x) \\\\leq 90."},"C_FUNLOC":{"doc":"`C_FUNLOC` — Obtain the C address of a procedure\\n\\n### Description\\n`C_FUNLOC(x)` determines the C address of the argument.\\n\\n\\n\\n### Syntax\\n`RESULT = C_FUNLOC(x)`\\n\\n\\n### Arguments\\n\\n     \\n | `x`  | Interoperable function or pointer to such function.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `C_FUNPTR` and contains the C address\\nof the argument.\\n\\n\\n\\n### Example\\n```\\n\\n\\nmodule x\\n\\n  use iso_c_binding\\n\\n  implicit none\\n\\ncontains\\n\\n  subroutine sub(a) bind(c)\\n\\n    real(c_float) :: a\\n\\n    a = sqrt(a)+5.0\\n\\n  end subroutine sub\\n\\nend module x\\n\\nprogram main\\n\\n  use iso_c_binding\\n\\n  use x\\n\\n  implicit none\\n\\n  interface\\n\\n    subroutine my_routine(p) bind(c,name=\'myC_func\')\\n\\n      import :: c_funptr\\n\\n      type(c_funptr), intent(in) :: p\\n\\n    end subroutine\\n\\n  end interface\\n\\n  call my_routine(c_funloc(sub))\\n\\nend program main\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 2003 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n\\n### See also\\n<a href=\\"C_005fASSOCIATED.html#C_005fASSOCIATED\\">C_ASSOCIATED</a>, <a href=\\"C_005fLOC.html#C_005fLOC\\">C_LOC</a>, <a href=\\"C_005fF_005fPOINTER.html#C_005fF_005fPOINTER\\">C_F_POINTER</a>, <a href=\\"C_005fF_005fPROCPOINTER.html#C_005fF_005fPROCPOINTER\\">C_F_PROCPOINTER</a>\\n"},"KIND":{"doc":"`KIND` — Kind of an entity\\n\\n### Description\\n`KIND(X)` returns the kind value of the entity `X`.\\n\\n\\n\\n### Syntax\\n`K = KIND(X)`\\n\\n\\n### Arguments\\n\\n     \\n,\\n`REAL`, `COMPLEX` or `CHARACTER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is a scalar of type `INTEGER` and of the default\\ninteger kind.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_kind\\n\\n  integer,parameter :: kc = kind(\' \')\\n\\n  integer,parameter :: kl = kind(.true.)\\n\\n\\n  print *, \\"The default character kind is \\", kc\\n\\n  print *, \\"The default logical kind is \\", kl\\n\\nend program test_kind\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n"},"SECNDS":{"doc":"`SECNDS` — Time function\\n\\n### Description\\n`SECNDS(X)` gets the time in seconds from the real-time system clock. \\n`X` is a reference time, also in seconds. If this is zero, the time in\\nseconds from midnight is returned. This function is non-standard and its\\nuse is discouraged.\\n\\n\\n\\n### Syntax\\n`RESULT = SECNDS (X)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `X`      | Shall be of type `REAL(4)`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nNone\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_secnds\\n\\n    integer :: i\\n\\n    real(4) :: t1, t2\\n\\n    print *, secnds (0.0)   ! seconds since midnight\\n\\n    t1 = secnds (0.0)       ! reference time\\n\\n    do i = 1, 10000000      ! do something\\n\\n    end do\\n\\n    t2 = secnds (t1)        ! elapsed time\\n\\n    print *, \\"Something took \\", t2, \\" seconds.\\"\\n\\nend program test_secnds\\n\\n```\\n\\n     \\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nFunction\\n\\n\\n"},"BLT":{"doc":"`BLT` — Bitwise less than\\n\\n### Description\\nDetermines whether an integral is a bitwise less than another.\\n\\n\\n\\n### Syntax\\n`RESULT = BLT(I, J)`\\n\\n\\n### Arguments\\n\\n     \\n type. \\n\\n | `J`  | Shall be of `INTEGER` type, and of the same kind\\nas `I`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `LOGICAL` and of the default kind.\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"BGE.html#BGE\\">BGE</a>, <a href=\\"BGT.html#BGT\\">BGT</a>, <a href=\\"BLE.html#BLE\\">BLE</a>\\n"},"IDATE":{"doc":"`IDATE` — Get current local time subroutine (day/month/year)\\n\\n### Description\\n`IDATE(VALUES)` Fills `VALUES` with the numerical values at the\\ncurrent local time. The day (in the range 1-31), month (in the range 1-12),\\nand year appear in elements 1, 2, and 3 of `VALUES`, respectively. \\nThe year has four significant digits.\\n\\n\\n\\n### Syntax\\n`CALL IDATE(VALUES)`\\n\\n\\n### Arguments\\n\\n     \\n and\\nthe kind shall be the default integer kind.\\n\\n\\n\\n\\n\\n\\n### Return value\\nDoes not return anything.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_idate\\n\\n  integer, dimension(3) :: tarray\\n\\n  call idate(tarray)\\n\\n  print *, tarray(1)\\n\\n  print *, tarray(2)\\n\\n  print *, tarray(3)\\n\\nend program test_idate\\n\\n```\\n\\n     \\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n"},"SYMLNK":{"doc":"`SYMLNK` — Create a symbolic link\\n\\n### Description\\nMakes a symbolic link from file `PATH1` to `PATH2`. A null\\ncharacter (`CHAR(0)`) can be used to mark the end of the names in\\n`PATH1` and `PATH2`; otherwise, trailing blanks in the file\\nnames are ignored.  If the `STATUS` argument is supplied, it\\ncontains 0 on success or a nonzero error code upon return; see\\n`symlink(2)`.  If the system does not supply `symlink(2)`,\\n`ENOSYS` is returned.\\n\\n     \\nThis intrinsic is provided in both subroutine and function forms;\\nhowever, only one form can be used in any given program unit.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `STATUS = SYMLNK(PATH1, PATH2)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n type. \\n\\n | `PATH2`  | Shall be of default `CHARACTER` type. \\n\\n | `STATUS`  | (Optional) Shall be of default `INTEGER` type.\\n\\n\\n\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n\\n### See also\\n<a href=\\"LINK.html#LINK\\">LINK</a>, <a href=\\"UNLINK.html#UNLINK\\">UNLINK</a>\\n\\n   "},"KILL":{"doc":"`KILL` — Send a signal to a process\\n\\n### Description\\nSends the signal specified by `SIGNAL` to the process `PID`. \\nSee `kill(2)`.\\n\\n     \\nThis intrinsic is provided in both subroutine and function forms; however,\\nonly one form can be used in any given program unit.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `STATUS = KILL(C, VALUE)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n, with\\n`INTENT(IN)`<br>\\n | `VALUE`  | Shall be a scalar `INTEGER`, with\\n`INTENT(IN)`<br>\\n | `STATUS`  | (Optional) status flag of type `INTEGER(4)` or\\n`INTEGER(8)`. Returns 0 on success, or a system-specific error code\\notherwise.\\n\\n\\n\\n\\n\\n\\n### Standard\\nSends the signal specified by `SIGNAL` to the process `PID`. \\nSee `kill(2)`.\\n\\n     \\nThis intrinsic is provided in both subroutine and function forms; however,\\nonly one form can be used in any given program unit.\\n\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n\\n### See also\\n<a href=\\"ABORT.html#ABORT\\">ABORT</a>, <a href=\\"EXIT.html#EXIT\\">EXIT</a>\\n"},"LLE":{"doc":"`LLE` — Lexical less than or equal\\n\\n### Description\\nDetermines whether one string is lexically less than or equal to another\\nstring, where the two strings are interpreted as containing ASCII\\ncharacter codes.  If the String A and String B are not the same length,\\nthe shorter is compared as if spaces were appended to it to form a value\\nthat has the same length as the longer.\\n\\n     \\nIn general, the lexical comparison intrinsics `LGE`, `LGT`,\\n`LLE`, and `LLT` differ from the corresponding intrinsic\\noperators `.GE.`, `.GT.`, `.LE.`, and `.LT.`, in\\nthat the latter use the processor\'s character ordering (which is not\\nASCII on some targets), whereas the former always use the ASCII\\nordering.\\n\\n\\n\\n\\n### Syntax\\n`RESULT = LLE(STRING_A, STRING_B)`\\n\\n\\n### Arguments\\n\\n     \\n type. \\n\\n | `STRING_B`  | Shall be of default `CHARACTER` type.\\n\\n\\n\\n\\n\\n\\n### Return value\\nReturns `.TRUE.` if `STRING_A <= STRING_B`, and `.FALSE.`otherwise, based on the ASCII ordering.\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name                            | Argument           | Return type        | Standard\\n\\n | `LLE(STRING_A, STRING_B)`  | `CHARACTER`   | `LOGICAL`     | Fortran 77 and later\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"LGE.html#LGE\\">LGE</a>, <a href=\\"LGT.html#LGT\\">LGT</a>, <a href=\\"LLT.html#LLT\\">LLT</a>\\n"},"SET_EXPONENT":{"doc":"`SET_EXPONENT` — Set the exponent of the model\\n\\n### Description\\n`SET_EXPONENT(X, I)` returns the real number whose fractional part\\nis that that of `X` and whose exponent part is `I`.\\n\\n\\n\\n### Syntax\\n`RESULT = SET_EXPONENT(X, I)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `I`  | Shall be of type `INTEGER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of the same type and kind as `X`. \\nThe real number whose fractional part\\nis that that of `X` and whose exponent part if `I` is returned;\\nit is `FRACTION(X) * RADIX(X)**I`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_setexp\\n\\n  REAL :: x = 178.1387e-4\\n\\n  INTEGER :: i = 17\\n\\n  PRINT *, SET_EXPONENT(x, i), FRACTION(x) * RADIX(x)**i\\n\\nEND PROGRAM\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"FDATE":{"doc":"`FDATE` — Get the current time as a string\\n\\n### Description\\n`FDATE(DATE)` returns the current date (using the same format as\\n`CTIME`) in `DATE`. It is equivalent to <code>CALL CTIME(DATE,\\nTIME())</code>.\\n\\n     \\nThis intrinsic is provided in both subroutine and function forms; however,\\nonly one form can be used in any given program unit.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n. \\n\\n | `DATE = FDATE()`.\\n\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n of the\\ndefault kind. It is an `INTENT(OUT)` argument.  If the length of\\nthis variable is too short for the date and time string to fit\\ncompletely, it will be blank on procedure return.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe current date and time as a string.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_fdate\\n\\n    integer(8) :: i, j\\n\\n    character(len=30) :: date\\n\\n    call fdate(date)\\n\\n    print *, \'Program started on \', date\\n\\n    do i = 1, 100000000 ! Just a delay\\n\\n        j = i * i - i\\n\\n    end do\\n\\n    call fdate(date)\\n\\n    print *, \'Program ended on \', date\\n\\nend program test_fdate\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n\\n### See also\\n<a href=\\"DATE_005fAND_005fTIME.html#DATE_005fAND_005fTIME\\">DATE_AND_TIME</a>, <a href=\\"CTIME.html#CTIME\\">CTIME</a>\\n"},"SHIFTL":{"doc":"`SHIFTL` — Left shift\\n\\n### Description\\n`SHIFTL` returns a value corresponding to `I` with all of the\\nbits shifted left by `SHIFT` places.  If the absolute value of\\n`SHIFT` is greater than `BIT_SIZE(I)`, the value is undefined. \\nBits shifted out from the left end are lost, and bits shifted in from\\nthe right end are set to 0.\\n\\n\\n\\n### Syntax\\n`RESULT = SHIFTL(I, SHIFT)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `SHIFT`  | The type shall be `INTEGER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of the same kind as\\n`I`.\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"SHIFTA.html#SHIFTA\\">SHIFTA</a>, <a href=\\"SHIFTR.html#SHIFTR\\">SHIFTR</a>\\n"},"DBLE":{"doc":"`DBLE` — Double conversion function\\n\\n### Description\\n`DBLE(A)` Converts `A` to double precision real type.\\n\\n\\n\\n### Syntax\\n`RESULT = DBLE(A)`\\n\\n\\n### Arguments\\n\\n     \\n,\\nor `COMPLEX`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type double precision real.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_dble\\n\\n    real    :: x = 2.18\\n\\n    integer :: i = 5\\n\\n    complex :: z = (2.3,1.14)\\n\\n    print *, dble(x), dble(i), dble(z)\\n\\nend program test_dble\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 77 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"REAL.html#REAL\\">REAL</a>\\n"},"ATOMIC_XOR":{"doc":"`ATOMIC_XOR` — Atomic bitwise OR operation\\n\\n### Description\\n`ATOMIC_AND(ATOM, VALUE)` atomically defines `ATOM` with the bitwise\\nXOR between the values of `ATOM` and `VALUE`. When `STAT` is present\\nand the invokation was successful, it is assigned the value 0. If it is present\\nand the invokation has failed, it is assigned a positive value; in particular,\\nfor a coindexed `ATOM`, if the remote image has stopped, it is assigned the\\nvalue of `ISO_FORTRAN_ENV`\'s `STAT_STOPPED_IMAGE` and if the remote\\nimage has failed, the value `STAT_FAILED_IMAGE`.\\n\\n\\n\\n### Syntax\\n`CALL ATOMIC_XOR (ATOM, VALUE [, STAT])`\\n\\n\\n### Arguments\\n\\n     \\n | `ATOM`    | Scalar coarray or coindexed variable of integer\\ntype with `ATOMIC_INT_KIND` kind. \\n\\n | `VALUE`   | Scalar of the same type as `ATOM`. If the kind\\nis different, the value is converted to the kind of `ATOM`. \\n\\n | `STAT`    | (optional) Scalar default-kind integer variable.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram atomic\\n\\n  use iso_fortran_env\\n\\n  integer(atomic_int_kind) :: atom[*]\\n\\n  call atomic_xor (atom[1], int(b\'10100011101\'))\\n\\nend program atomic\\n\\n```\\n\\n\\n\\n### Standard\\nTS 18508 or later\\n\\n\\n\\n### Class\\nAtomic subroutine\\n\\n\\n\\n### See also\\n<a href=\\"ATOMIC_005fDEFINE.html#ATOMIC_005fDEFINE\\">ATOMIC_DEFINE</a>, <a href=\\"ATOMIC_005fFETCH_005fXOR.html#ATOMIC_005fFETCH_005fXOR\\">ATOMIC_FETCH_XOR</a>, <a href=\\"ISO_005fFORTRAN_005fENV.html#ISO_005fFORTRAN_005fENV\\">ISO_FORTRAN_ENV</a>,\\n<a href=\\"ATOMIC_005fADD.html#ATOMIC_005fADD\\">ATOMIC_ADD</a>, <a href=\\"ATOMIC_005fOR.html#ATOMIC_005fOR\\">ATOMIC_OR</a>, <a href=\\"ATOMIC_005fXOR.html#ATOMIC_005fXOR\\">ATOMIC_XOR</a>\\n"},"DPROD":{"doc":"`DPROD` — Double product function\\n\\n### Description\\n`DPROD(X,Y)` returns the product `X*Y`.\\n\\n\\n\\n### Syntax\\n`RESULT = DPROD(X, Y)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `Y`  | The type shall be `REAL`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `REAL(8)`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_dprod\\n\\n    real :: x = 5.2\\n\\n    real :: y = 2.3\\n\\n    real(8) :: d\\n\\n    d = dprod(x,y)\\n\\n    print *, d\\n\\nend program test_dprod\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name               | Argument                | Return type        | Standard\\n\\n | `DPROD(X,Y)`  | `REAL(4) X, Y`     | `REAL(8)`     | Fortran 77 and later\\n\\n\\n\\n   \\n\\n\\n### Standard\\nFortran 77 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"HYPOT":{"doc":"`HYPOT` — Euclidean distance function\\n\\n### Description\\n`HYPOT(X,Y)` is the Euclidean distance function. It is equal to\\n\\\\sqrtX^2 + Y^2, without undue underflow or overflow.\\n\\n\\n\\n### Syntax\\n`RESULT = HYPOT(X, Y)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `Y`  | The type and kind type parameter shall be the same as\\n`X`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value has the same type and kind type parameter as `X`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_hypot\\n\\n  real(4) :: x = 1.e0_4, y = 0.5e0_4\\n\\n  x = hypot(x,y)\\n\\nend program test_hypot\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"BESSEL_J0":{"doc":"`BESSEL_J0` — Bessel function of the first kind of order 0\\n\\n### Description\\n`BESSEL_J0(X)` computes the Bessel function of the first kind of\\norder 0 of `X`. This function is available under the name\\n`BESJ0` as a GNU extension.\\n\\n\\n\\n### Syntax\\n`RESULT = BESSEL_J0(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `REAL` and lies in the\\nrange  - 0.4027... \\\\leq Bessel (0,x) \\\\leq 1. It has the same\\nkind as `X`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_besj0\\n\\n  real(8) :: x = 0.0_8\\n\\n  x = bessel_j0(x)\\n\\nend program test_besj0\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name             | Argument           | Return type        | Standard\\n\\n | `DBESJ0(X)`  | `REAL(8) X`   | `REAL(8)`    | GNU extension\\n\\n\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"IRAND":{"doc":"`IRAND` — Integer pseudo-random number\\n\\n### Description\\n`IRAND(FLAG)` returns a pseudo-random number from a uniform\\ndistribution between 0 and a system-dependent limit (which is in most\\ncases 2147483647). If `FLAG` is 0, the next number\\nin the current sequence is returned; if `FLAG` is 1, the generator\\nis restarted by `CALL SRAND(0)`; if `FLAG` has any other value,\\nit is used as a new seed with `SRAND`.\\n\\n     \\nThis intrinsic routine is provided for backwards compatibility with\\nGNU Fortran 77. It implements a simple modulo generator as provided\\nby *g77*. For new code, one should consider the use of\\n<a href=\\"RANDOM_005fNUMBER.html#RANDOM_005fNUMBER\\">RANDOM_NUMBER</a> as it implements a superior algorithm.\\n\\n\\n\\n\\n### Syntax\\n`RESULT = IRAND(I)`\\n\\n\\n### Arguments\\n\\n     \\n of kind 4.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of `INTEGER(kind=4)` type.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_irand\\n\\n  integer,parameter :: seed = 86456\\n\\n\\n  call srand(seed)\\n\\n  print *, irand(), irand(), irand(), irand()\\n\\n  print *, irand(seed), irand(), irand(), irand()\\n\\nend program test_irand\\n\\n```\\n\\n     \\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nFunction\\n\\n\\n"},"ADJUSTL":{"doc":"`ADJUSTL` — Left adjust a string\\n\\n### Description\\n`ADJUSTL(STRING)` will left adjust a string by removing leading spaces. \\nSpaces are inserted at the end of the string as needed.\\n\\n\\n\\n### Syntax\\n`RESULT = ADJUSTL(STRING)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `CHARACTER` and of the same kind as\\n`STRING` where leading spaces are removed and the same number of\\nspaces are inserted on the end of `STRING`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_adjustl\\n\\n  character(len=20) :: str = \'   gfortran\'\\n\\n  str = adjustl(str)\\n\\n  print *, str\\n\\nend program test_adjustl\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 90 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"ADJUSTR.html#ADJUSTR\\">ADJUSTR</a>, <a href=\\"TRIM.html#TRIM\\">TRIM</a>\\n"},"PARITY":{"doc":"`PARITY` — Reduction with exclusive OR\\n\\n### Description\\nCalculates the parity, i.e. the reduction using `.XOR.`,\\nof `MASK` along dimension `DIM`.\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n\\n\\n | `DIM`    | (Optional) shall be a scalar of type\\n`INTEGER` with a value in the range from 1 to n, where n\\nequals the rank of `MASK`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe result is of the same type as `MASK`.\\n\\n     \\nIf `DIM` is absent, a scalar with the parity of all elements in\\n`MASK` is returned, i.e. true if an odd number of elements is\\n`.true.` and false otherwise.  If `DIM` is present, an array\\nof rank n-1, where n equals the rank of `ARRAY`,\\nand a shape similar to that of `MASK` with dimension `DIM`\\ndropped is returned.\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_sum\\n\\n  LOGICAL :: x(2) = [ .true., .false. ]\\n\\n  print *, PARITY(x) ! prints \\"T\\" (true).\\n\\nEND PROGRAM\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n"},"ATOMIC_FETCH_OR":{"doc":"`ATOMIC_FETCH_OR` — Atomic bitwise OR operation with prior fetch\\n\\n### Description\\n`ATOMIC_OR(ATOM, VALUE)` atomically stores the value of `ATOM` in\\n`OLD` and defines `ATOM` with the bitwise OR between the values of\\n`ATOM` and `VALUE`. When `STAT` is present and the invokation was\\nsuccessful, it is assigned the value 0. If it is present and the invokation has\\nfailed, it is assigned a positive value; in particular, for a coindexed\\n`ATOM`, if the remote image has stopped, it is assigned the value of\\n`ISO_FORTRAN_ENV`\'s `STAT_STOPPED_IMAGE` and if the remote image has\\nfailed, the value `STAT_FAILED_IMAGE`.\\n\\n\\n\\n### Syntax\\n`CALL ATOMIC_FETCH_OR (ATOM, VALUE, OLD [, STAT])`\\n\\n\\n### Arguments\\n\\n     \\n | `ATOM`    | Scalar coarray or coindexed variable of integer\\ntype with `ATOMIC_INT_KIND` kind. \\n\\n | `VALUE`   | Scalar of the same type as `ATOM`. If the kind\\nis different, the value is converted to the kind of `ATOM`. \\n\\n | `OLD`     | Scalar of the same type and kind as `ATOM`. \\n\\n | `STAT`    | (optional) Scalar default-kind integer variable.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram atomic\\n\\n  use iso_fortran_env\\n\\n  integer(atomic_int_kind) :: atom[*], old\\n\\n  call atomic_fetch_or (atom[1], int(b\'10100011101\'), old)\\n\\nend program atomic\\n\\n```\\n\\n\\n\\n### Standard\\nTS 18508 or later\\n\\n\\n\\n### Class\\nAtomic subroutine\\n\\n\\n\\n### See also\\n<a href=\\"ATOMIC_005fDEFINE.html#ATOMIC_005fDEFINE\\">ATOMIC_DEFINE</a>, <a href=\\"ATOMIC_005fOR.html#ATOMIC_005fOR\\">ATOMIC_OR</a>, <a href=\\"ISO_005fFORTRAN_005fENV.html#ISO_005fFORTRAN_005fENV\\">ISO_FORTRAN_ENV</a>,\\n<a href=\\"ATOMIC_005fFETCH_005fADD.html#ATOMIC_005fFETCH_005fADD\\">ATOMIC_FETCH_ADD</a>, <a href=\\"ATOMIC_005fFETCH_005fAND.html#ATOMIC_005fFETCH_005fAND\\">ATOMIC_FETCH_AND</a>, <a href=\\"ATOMIC_005fFETCH_005fXOR.html#ATOMIC_005fFETCH_005fXOR\\">ATOMIC_FETCH_XOR</a>\\n"},"GETARG":{"doc":"`GETARG` — Get command line arguments\\n\\n### Description\\nRetrieve the `POS`-th argument that was passed on the\\ncommand line when the containing program was invoked.\\n\\n     \\nThis intrinsic routine is provided for backwards compatibility with\\nGNU Fortran 77.  In new code, programmers should consider the use of\\nthe <a href=\\"GET_005fCOMMAND_005fARGUMENT.html#GET_005fCOMMAND_005fARGUMENT\\">GET_COMMAND_ARGUMENT</a> intrinsic defined by the Fortran 2003\\nstandard.\\n\\n\\n\\n\\n### Syntax\\n`CALL GETARG(POS, VALUE)`\\n\\n\\n### Arguments\\n\\n     \\n and not wider than\\nthe default integer kind; `POS` \\\\geq 0\\n\\n | `VALUE`  | Shall be of type `CHARACTER` and of default\\nkind. \\n\\n | `VALUE`  | Shall be of type `CHARACTER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nAfter `GETARG` returns, the `VALUE` argument holds the\\n`POS`th command line argument. If `VALUE` can not hold the\\nargument, it is truncated to fit the length of `VALUE`. If there are\\nless than `POS` arguments specified at the command line, `VALUE`\\nwill be filled with blanks. If `POS` = 0, `VALUE` is set\\nto the name of the program (on systems that support this feature).\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_getarg\\n\\n  INTEGER :: i\\n\\n  CHARACTER(len=32) :: arg\\n\\n\\n  DO i = 1, iargc()\\n\\n    CALL getarg(i, arg)\\n\\n    WRITE (*,*) arg\\n\\n  END DO\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\nGNU Fortran 77 compatibility function: <a href=\\"IARGC.html#IARGC\\">IARGC</a>\\n\\n     \\nFortran 2003 functions and subroutines: <a href=\\"GET_005fCOMMAND.html#GET_005fCOMMAND\\">GET_COMMAND</a>,\\n<a href=\\"GET_005fCOMMAND_005fARGUMENT.html#GET_005fCOMMAND_005fARGUMENT\\">GET_COMMAND_ARGUMENT</a>, <a href=\\"COMMAND_005fARGUMENT_005fCOUNT.html#COMMAND_005fARGUMENT_005fCOUNT\\">COMMAND_ARGUMENT_COUNT</a>\\n\\n"},"TTYNAM":{"doc":"`TTYNAM` — Get the name of a terminal device.\\n\\n### Description\\nGet the name of a terminal device. For more information,\\nsee `ttyname(3)`.\\n\\n     \\nThis intrinsic is provided in both subroutine and function forms;\\nhowever, only one form can be used in any given program unit.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `NAME = TTYNAM(UNIT)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `NAME`  | Shall be of type `CHARACTER`.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_ttynam\\n\\n  INTEGER :: unit\\n\\n  DO unit = 1, 10\\n\\n    IF (isatty(unit=unit)) write(*,*) ttynam(unit)\\n\\n  END DO\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n\\n### See also\\n<a href=\\"ISATTY.html#ISATTY\\">ISATTY</a>\\n"},"GET_COMMAND_ARGUMENT":{"doc":"`GET_COMMAND_ARGUMENT` — Get command line arguments\\n\\n### Description\\nRetrieve the `NUMBER`-th argument that was passed on the\\ncommand line when the containing program was invoked.\\n\\n\\n\\n### Syntax\\n`CALL GET_COMMAND_ARGUMENT(NUMBER [, VALUE, LENGTH, STATUS])`\\n\\n\\n### Arguments\\n\\n     \\n and of\\ndefault kind, `NUMBER` \\\\geq 0\\n\\n | `VALUE`   | (Optional) Shall be a scalar of type `CHARACTER`and of default kind. \\n\\n | `LENGTH`  | (Optional) Shall be a scalar of type `INTEGER`and of default kind. \\n\\n | `STATUS`  | (Optional) Shall be a scalar of type `INTEGER`and of default kind.\\n\\n\\n\\n\\n\\n\\n### Return value\\nAfter `GET_COMMAND_ARGUMENT` returns, the `VALUE` argument holds the\\n`NUMBER`-th command line argument. If `VALUE` can not hold the argument, it is\\ntruncated to fit the length of `VALUE`. If there are less than `NUMBER`\\narguments specified at the command line, `VALUE` will be filled with blanks. \\nIf `NUMBER` = 0, `VALUE` is set to the name of the program (on\\nsystems that support this feature). The `LENGTH` argument contains the\\nlength of the `NUMBER`-th command line argument. If the argument retrieval\\nfails, `STATUS` is a positive number; if `VALUE` contains a truncated\\ncommand line argument, `STATUS` is -1; and otherwise the `STATUS` is\\nzero.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_get_command_argument\\n\\n  INTEGER :: i\\n\\n  CHARACTER(len=32) :: arg\\n\\n\\n  i = 0\\n\\n  DO\\n\\n    CALL get_command_argument(i, arg)\\n\\n    IF (LEN_TRIM(arg) == 0) EXIT\\n\\n\\n    WRITE (*,*) TRIM(arg)\\n\\n    i = i+1\\n\\n  END DO\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 2003 and later\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\n<a href=\\"GET_005fCOMMAND.html#GET_005fCOMMAND\\">GET_COMMAND</a>, <a href=\\"COMMAND_005fARGUMENT_005fCOUNT.html#COMMAND_005fARGUMENT_005fCOUNT\\">COMMAND_ARGUMENT_COUNT</a>\\n"},"ETIME":{"doc":"`ETIME` — Execution time subroutine (or function)\\n\\n### Description\\n`ETIME(VALUES, TIME)` returns the number of seconds of runtime\\nsince the start of the process\'s execution in `TIME`.  `VALUES`\\nreturns the user and system components of this time in `VALUES(1)` and\\n`VALUES(2)` respectively. `TIME` is equal to `VALUES(1) + VALUES(2)`.\\n\\n     \\nOn some systems, the underlying timings are represented using types with\\nsufficiently small limits that overflows (wrap around) are possible, such as\\n32-bit types. Therefore, the values returned by this intrinsic might be, or\\nbecome, negative, or numerically less than previous values, during a single\\nrun of the compiled program.\\n\\n     \\n\\nThis intrinsic is provided in both subroutine and function forms; however,\\nonly one form can be used in any given program unit.\\n\\n     \\n\\n`VALUES` and `TIME` are `INTENT(OUT)` and provide the following:\\n\\n     \\n\\n:  | User time in seconds. \\n\\n | </td><td valign=\\"top\\" width=\\"30%\\">`VALUES(2)`:  | System time in seconds. \\n\\n | </td><td valign=\\"top\\" width=\\"30%\\">`TIME`:  | Run time since start in seconds.\\n\\n\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n. \\n\\n | `TIME = ETIME(VALUES)`, (not recommended).\\n\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `TIME` | The type shall be `REAL(4)`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nElapsed time in seconds since the start of program execution.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_etime\\n\\n    integer(8) :: i, j\\n\\n    real, dimension(2) :: tarray\\n\\n    real :: result\\n\\n    call ETIME(tarray, result)\\n\\n    print *, result\\n\\n    print *, tarray(1)\\n\\n    print *, tarray(2)\\n\\n    do i=1,100000000    ! Just a delay\\n\\n        j = i * i - i\\n\\n    end do\\n\\n    call ETIME(tarray, result)\\n\\n    print *, result\\n\\n    print *, tarray(1)\\n\\n    print *, tarray(2)\\n\\nend program test_etime\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n\\n### See also\\n<a href=\\"CPU_005fTIME.html#CPU_005fTIME\\">CPU_TIME</a>\\n\\n   "},"CO_MIN":{"doc":"`CO_MIN` — Minimal value on the current set of images\\n\\n### Description\\n`CO_MIN` determines element-wise the minimal value of `A` on all\\nimages of the current team.  If `RESULT_IMAGE` is present, the minimal\\nvalues are returned in `A` on the specified image only and the value\\nof `A` on the other images become undefined.  If `RESULT_IMAGE` is\\nnot present, the value is returned on all images.  If the execution was\\nsuccessful and `STAT` is present, it is assigned the value zero.  If the\\nexecution failed, `STAT` gets assigned a nonzero value and, if present,\\n`ERRMSG` gets assigned a value describing the occurred error.\\n\\n\\n\\n### Syntax\\n`CALL CO_MIN(A [, RESULT_IMAGE, STAT, ERRMSG])`\\n\\n\\n### Arguments\\n\\n     \\n | `A`             | shall be an integer, real or character variable,\\nwhich has the same type and type parameters on all images of the team. \\n\\n | `RESULT_IMAGE`  | (optional) a scalar integer expression; if\\npresent, it shall have the same the same value on all images and refer to an\\nimage of the current team. \\n\\n | `STAT`          | (optional) a scalar integer variable\\n\\n | `ERRMSG`        | (optional) a scalar character variable\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test\\n\\n  integer :: val\\n\\n  val = this_image ()\\n\\n  call co_min (val, result_image=1)\\n\\n  if (this_image() == 1) then\\n\\n    write(*,*) \\"Minimal value\\", val  ! prints 1\\n\\n  end if\\n\\nend program test\\n\\n```\\n\\n\\n\\n### Standard\\nTechnical Specification (TS) 18508 or later\\n\\n\\n\\n### Class\\nCollective subroutine\\n\\n\\n\\n### See also\\n<a href=\\"CO_005fMAX.html#CO_005fMAX\\">CO_MAX</a>, <a href=\\"CO_005fSUM.html#CO_005fSUM\\">CO_SUM</a>, <a href=\\"CO_005fREDUCE.html#CO_005fREDUCE\\">CO_REDUCE</a>, <a href=\\"CO_005fBROADCAST.html#CO_005fBROADCAST\\">CO_BROADCAST</a>\\n"},"EXTENDS_TYPE_OF":{"doc":"`EXTENDS_TYPE_OF` —  Query dynamic type for extension\\n\\n### Description\\nQuery dynamic type for extension.\\n\\n\\n\\n### Syntax\\n`RESULT = EXTENDS_TYPE_OF(A, MOLD)`\\n\\n\\n### Arguments\\n\\n     \\n | `A`  | Shall be an object of extensible declared type or\\nunlimited polymorphic. \\n\\n | `MOLD`  | Shall be an object of extensible declared type or\\nunlimited polymorphic.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is a scalar of type default logical. It is true if and only if\\nthe dynamic type of A is an extension type of the dynamic type of MOLD.\\n\\n\\n\\n### Standard\\nFortran 2003 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n\\n### See also\\n<a href=\\"SAME_005fTYPE_005fAS.html#SAME_005fTYPE_005fAS\\">SAME_TYPE_AS</a>\\n"},"RANDOM_NUMBER":{"doc":"`RANDOM_NUMBER` — Pseudo-random number\\n\\n### Description\\nReturns a single pseudorandom number or an array of pseudorandom numbers\\nfrom the uniform distribution over the range  0 \\\\leq x < 1.\\n\\n     \\nThe runtime-library implements George Marsaglia\'s KISS (Keep It Simple\\nStupid) random number generator (RNG). This RNG combines:\\n          \\n<ol start=\\"1\\" type=\\"1\\">\\n<li>The congruential generator x(n) = 69069 \\\\cdot x(n-1) + 1327217885\\nwith a period of 2^32,\\n</li><li>A 3-shift shift-register generator with a period of 2^32 - 1,\\n</li><li>Two 16-bit multiply-with-carry generators with a period of\\n597273182964842497 > 2^59.\\n          </li></ol>\\nThe overall period exceeds 2^123.\\n\\n     \\nPlease note, this RNG is thread safe if used within OpenMP directives,\\ni.e., its state will be consistent while called from multiple threads. \\nHowever, the KISS generator does not create random numbers in parallel\\nfrom multiple sources, but in sequence from a single source. If an\\nOpenMP-enabled application heavily relies on random numbers, one should\\nconsider employing a dedicated parallel random number generator instead.\\n\\n\\n\\n\\n### Syntax\\n`RANDOM_NUMBER(HARVEST)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_random_number\\n\\n  REAL :: r(5,5)\\n\\n  CALL init_random_seed()         ! see example of RANDOM_SEED\\n\\n  CALL RANDOM_NUMBER(r)\\n\\nend program\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\n<a href=\\"RANDOM_005fSEED.html#RANDOM_005fSEED\\">RANDOM_SEED</a>\\n"},"THIS_IMAGE":{"doc":"`THIS_IMAGE` — Function that returns the cosubscript index of this image\\n\\n### Description\\nReturns the cosubscript for this image.\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `RESULT = THIS_IMAGE(DISTANCE)`<br>\\n | `RESULT = THIS_IMAGE(COARRAY [, DIM])`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n | `DISTANCE`  | (optional, intent(in)) Nonnegative scalar integer\\n(not permitted together with `COARRAY`). \\n\\n | `COARRAY`  | Coarray of any type  (optional; if `DIM`\\npresent, required). \\n\\n | `DIM`      | default integer scalar (optional). If present,\\n`DIM` shall be between one and the corank of `COARRAY`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nDefault integer. If `COARRAY` is not present, it is scalar; if\\n`DISTANCE` is not present or has value 0, its value is the image index on\\nthe invoking image for the current team, for values smaller or equal\\ndistance to the initial team, it returns the image index on the ancestor team\\nwhich has a distance of `DISTANCE` from the invoking team. If\\n`DISTANCE` is larger than the distance to the initial team, the image\\nindex of the initial team is returned. Otherwise when the `COARRAY` is\\npresent, if `DIM` is not present, a rank-1 array with corank elements is\\nreturned, containing the cosubscripts for `COARRAY` specifying the invoking\\nimage. If `DIM` is present, a scalar is returned, with the value of\\nthe `DIM` element of `THIS_IMAGE(COARRAY)`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nINTEGER :: value[*]\\n\\nINTEGER :: i\\n\\nvalue = THIS_IMAGE()\\n\\nSYNC ALL\\n\\nIF (THIS_IMAGE() == 1) THEN\\n\\n  DO i = 1, NUM_IMAGES()\\n\\n    WRITE(*,\'(2(a,i0))\') \'value[\', i, \'] is \', value[i]\\n\\n  END DO\\n\\nEND IF\\n\\n\\n! Check whether the current image is the initial image\\n\\nIF (THIS_IMAGE(HUGE(1)) /= THIS_IMAGE())\\n\\n  error stop \\"something is rotten here\\"\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 2008 and later. With `DISTANCE` argument,\\nTechnical Specification (TS) 18508 or later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n\\n### See also\\n<a href=\\"NUM_005fIMAGES.html#NUM_005fIMAGES\\">NUM_IMAGES</a>, <a href=\\"IMAGE_005fINDEX.html#IMAGE_005fINDEX\\">IMAGE_INDEX</a>\\n"},"MCLOCK8":{"doc":"`MCLOCK8` — Time function (64-bit)\\n\\n### Description\\nReturns the number of clock ticks since the start of the process, based\\non the function `clock(3)` in the C standard library.\\n\\n     \\n<em>Warning:</em> this intrinsic does not increase the range of the timing\\nvalues over that returned by `clock(3)`. On a system with a 32-bit\\n`clock(3)`, `MCLOCK8` will return a 32-bit value, even though\\nit is converted to a 64-bit `INTEGER(8)` value. That means\\noverflows of the 32-bit value can still occur. Therefore, the values\\nreturned by this intrinsic might be or become negative or numerically\\nless than previous values during a single run of the compiled program.\\n\\n\\n\\n\\n### Syntax\\n`RESULT = MCLOCK8()`\\n\\n\\n### Return value\\nThe return value is a scalar of type `INTEGER(8)`, equal to the\\nnumber of clock ticks since the start of the process, or `-1` if\\nthe system does not support `clock(3)`.\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nFunction\\n\\n\\n\\n### See also\\n<a href=\\"CTIME.html#CTIME\\">CTIME</a>, <a href=\\"GMTIME.html#GMTIME\\">GMTIME</a>, <a href=\\"LTIME.html#LTIME\\">LTIME</a>, <a href=\\"MCLOCK.html#MCLOCK\\">MCLOCK</a>, <a href=\\"TIME8.html#TIME8\\">TIME8</a>\\n\\n   "},"COMPLEX":{"doc":"`COMPLEX` — Complex conversion function\\n\\n### Description\\n`COMPLEX(X, Y)` returns a complex number where `X` is converted\\nto the real component and `Y` is converted to the imaginary\\ncomponent.\\n\\n\\n\\n### Syntax\\n`RESULT = COMPLEX(X, Y)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `Y`  | The type may be `INTEGER` or `REAL`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nIf `X` and `Y` are both of `INTEGER` type, then the return\\nvalue is of default `COMPLEX` type.\\n\\n     \\nIf `X` and `Y` are of `REAL` type, or one is of `REAL`type and one is of `INTEGER` type, then the return value is of\\n`COMPLEX` type with a kind equal to that of the `REAL`argument with the highest precision.\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_complex\\n\\n    integer :: i = 42\\n\\n    real :: x = 3.14\\n\\n    print *, complex(i, x)\\n\\nend program test_complex\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"CMPLX.html#CMPLX\\">CMPLX</a>\\n"},"OR":{"doc":"`OR` — Bitwise logical OR\\n\\n### Description\\nBitwise logical `OR`.\\n\\n     \\nThis intrinsic routine is provided for backwards compatibility with\\nGNU Fortran 77.  For integer arguments, programmers should consider\\nthe use of the <a href=\\"IOR.html#IOR\\">IOR</a> intrinsic defined by the Fortran standard.\\n\\n\\n\\n\\n### Syntax\\n`RESULT = OR(I, J)`\\n\\n\\n### Arguments\\n\\n     \\n\\ntype or a scalar `LOGICAL` type. \\n\\n | `J`  | The type shall be the same as the type of `J`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return type is either a scalar `INTEGER` or a scalar\\n`LOGICAL`.  If the kind type parameters differ, then the\\nsmaller kind type is implicitly converted to larger kind, and the\\nreturn has the larger kind.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_or\\n\\n  LOGICAL :: T = .TRUE., F = .FALSE.\\n\\n  INTEGER :: a, b\\n\\n  DATA a / Z\'F\' /, b / Z\'3\' /\\n\\n\\n  WRITE (*,*) OR(T, T), OR(T, F), OR(F, T), OR(F, F)\\n\\n  WRITE (*,*) OR(a, b)\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nFunction\\n\\n\\n\\n### See also\\nFortran 95 elemental function: <a href=\\"IOR.html#IOR\\">IOR</a>\\n"},"IEOR":{"doc":"`IEOR` — Bitwise logical exclusive or\\n\\n### Description\\n`IEOR` returns the bitwise Boolean exclusive-OR of `I` and\\n`J`.\\n\\n\\n\\n### Syntax\\n`RESULT = IEOR(I, J)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `J`  | The type shall be `INTEGER`, of the same\\nkind as `I`.  (As a GNU extension, different kinds are also\\npermitted.)\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return type is `INTEGER`, of the same kind as the\\narguments.  (If the argument kinds differ, it is of the same kind as\\nthe larger argument.)\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"IOR.html#IOR\\">IOR</a>, <a href=\\"IAND.html#IAND\\">IAND</a>, <a href=\\"IBITS.html#IBITS\\">IBITS</a>, <a href=\\"IBSET.html#IBSET\\">IBSET</a>, <a href=\\"IBCLR.html#IBCLR\\">IBCLR</a>, <a href=\\"NOT.html#NOT\\">NOT</a>\\n"},"RSHIFT":{"doc":"`RSHIFT` — Right shift bits\\n\\n### Description\\n`RSHIFT` returns a value corresponding to `I` with all of the\\nbits shifted right by `SHIFT` places.  If the absolute value of\\n`SHIFT` is greater than `BIT_SIZE(I)`, the value is undefined. \\nBits shifted out from the right end are lost. The fill is arithmetic: the\\nbits shifted in from the left end are equal to the leftmost bit, which in\\ntwo\'s complement representation is the sign bit.\\n\\n     \\nThis function has been superseded by the `SHIFTA` intrinsic, which\\nis standard in Fortran 2008 and later.\\n\\n\\n\\n\\n### Syntax\\n`RESULT = RSHIFT(I, SHIFT)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `SHIFT`  | The type shall be `INTEGER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of the same kind as\\n`I`.\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"ISHFT.html#ISHFT\\">ISHFT</a>, <a href=\\"ISHFTC.html#ISHFTC\\">ISHFTC</a>, <a href=\\"LSHIFT.html#LSHIFT\\">LSHIFT</a>, <a href=\\"SHIFTA.html#SHIFTA\\">SHIFTA</a>, <a href=\\"SHIFTR.html#SHIFTR\\">SHIFTR</a>,\\n<a href=\\"SHIFTL.html#SHIFTL\\">SHIFTL</a>\\n\\n   "},"RANGE":{"doc":"`RANGE` — Decimal exponent range\\n\\n### Description\\n`RANGE(X)` returns the decimal exponent range in the model of the\\ntype of `X`.\\n\\n\\n\\n### Syntax\\n`RESULT = RANGE(X)`\\n\\n\\n### Arguments\\n\\n     \\n\\nor `COMPLEX`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of the default integer\\nkind.\\n\\n\\n\\n### Example\\nSee `PRECISION` for an example. \\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n\\n### See also\\n<a href=\\"SELECTED_005fREAL_005fKIND.html#SELECTED_005fREAL_005fKIND\\">SELECTED_REAL_KIND</a>, <a href=\\"PRECISION.html#PRECISION\\">PRECISION</a>\\n\\n\\n"},"INDEX":{"doc":"`INDEX` — Position of a substring within a string\\n\\n### Description\\nReturns the position of the start of the first occurrence of string\\n`SUBSTRING` as a substring in `STRING`, counting from one.  If\\n`SUBSTRING` is not present in `STRING`, zero is returned.  If\\nthe `BACK` argument is present and true, the return value is the\\nstart of the last occurrence rather than the first.\\n\\n\\n\\n### Syntax\\n`RESULT = INDEX(STRING, SUBSTRING [, BACK [, KIND]])`\\n\\n\\n### Arguments\\n\\n     \\n, with\\n`INTENT(IN)`<br>\\n | `SUBSTRING`  | Shall be a scalar `CHARACTER`, with\\n`INTENT(IN)`<br>\\n | `BACK`  | (Optional) Shall be a scalar `LOGICAL`, with\\n`INTENT(IN)`<br>\\n | `KIND`  | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of kind `KIND`. If\\n`KIND` is absent, the return value is of default integer kind.\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name                             | Argument            | Return type        | Standard\\n\\n | `INDEX(STRING, SUBSTRING)`  | `CHARACTER`    | `INTEGER(4)`  | Fortran 77 and later\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later, with `KIND` argument Fortran 2003 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"SCAN.html#SCAN\\">SCAN</a>, <a href=\\"VERIFY.html#VERIFY\\">VERIFY</a>\\n"},"FLOOR":{"doc":"`FLOOR` — Integer floor function\\n\\n### Description\\n`FLOOR(A)` returns the greatest integer less than or equal to `X`.\\n\\n\\n\\n### Syntax\\n`RESULT = FLOOR(A [, KIND])`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `KIND`  | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER(KIND)` if `KIND` is present\\nand of default-kind `INTEGER` otherwise.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_floor\\n\\n    real :: x = 63.29\\n\\n    real :: y = -63.59\\n\\n    print *, floor(x) ! returns 63\\n\\n    print *, floor(y) ! returns -64\\n\\nend program test_floor\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"CEILING.html#CEILING\\">CEILING</a>, <a href=\\"NINT.html#NINT\\">NINT</a>\\n\\n   "},"BESSEL_J1":{"doc":"`BESSEL_J1` — Bessel function of the first kind of order 1\\n\\n### Description\\n`BESSEL_J1(X)` computes the Bessel function of the first kind of\\norder 1 of `X`. This function is available under the name\\n`BESJ1` as a GNU extension.\\n\\n\\n\\n### Syntax\\n`RESULT = BESSEL_J1(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `REAL` and lies in the\\nrange  - 0.5818... \\\\leq Bessel (0,x) \\\\leq 0.5818 . It has the same\\nkind as `X`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_besj1\\n\\n  real(8) :: x = 1.0_8\\n\\n  x = bessel_j1(x)\\n\\nend program test_besj1\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name              | Argument           | Return type        | Standard\\n\\n | `DBESJ1(X)`  | `REAL(8) X`   | `REAL(8)`     | GNU extension\\n\\n\\n\\n\\n\\n### Standard\\nFortran 2008\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"CHAR":{"doc":"`CHAR` — Character conversion function\\n\\n### Description\\n`CHAR(I [, KIND])` returns the character represented by the integer `I`.\\n\\n\\n\\n### Syntax\\n`RESULT = CHAR(I [, KIND])`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `KIND`  | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `CHARACTER(1)`\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_char\\n\\n    integer :: i = 74\\n\\n    character(1) :: c\\n\\n    c = char(i)\\n\\n    print *, i, c ! returns \'J\'\\n\\nend program test_char\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name            | Argument          | Return type              | Standard\\n\\n | `CHAR(I)`  | `INTEGER I`  | `CHARACTER(LEN=1)`  | F77 and later\\n\\n\\n\\n\\n\\n\\n### Notes\\nSee <a href=\\"ICHAR.html#ICHAR\\">ICHAR</a> for a discussion of converting between numerical values\\nand formatted string representations.\\n\\n\\n\\n### Standard\\nFortran 77 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"ACHAR.html#ACHAR\\">ACHAR</a>, <a href=\\"IACHAR.html#IACHAR\\">IACHAR</a>, <a href=\\"ICHAR.html#ICHAR\\">ICHAR</a>\\n\\n   "},"MASKR":{"doc":"`MASKR` — Right justified mask\\n\\n### Description\\n`MASKL(I[, KIND])` has its rightmost `I` bits set to 1, and the\\nremaining bits set to 0.\\n\\n\\n\\n### Syntax\\n`RESULT = MASKR(I[, KIND])`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `KIND`  | Shall be a scalar constant expression of type\\n`INTEGER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER`. If `KIND` is present, it\\nspecifies the kind value of the return type; otherwise, it is of the\\ndefault integer kind.\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"MASKL.html#MASKL\\">MASKL</a>\\n"},"ABORT":{"doc":"`ABORT` — Abort the program\\n\\n### Description\\n`ABORT` causes immediate termination of the program.  On operating\\nsystems that support a core dump, `ABORT` will produce a core dump. \\nIt will also print a backtrace, unless `-fno-backtrace` is given.\\n\\n\\n\\n### Syntax\\n`CALL ABORT`\\n\\n\\n### Return value\\nDoes not return.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_abort\\n\\n  integer :: i = 1, j = 2\\n\\n  if (i /= j) call abort\\n\\nend program test_abort\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\n<a href=\\"EXIT.html#EXIT\\">EXIT</a>, <a href=\\"KILL.html#KILL\\">KILL</a>, <a href=\\"BACKTRACE.html#BACKTRACE\\">BACKTRACE</a>\\n\\n   "},"RRSPACING":{"doc":"`RRSPACING` — Reciprocal of the relative spacing\\n\\n### Description\\n`RRSPACING(X)` returns the  reciprocal of the relative spacing of\\nmodel numbers near `X`.\\n\\n\\n\\n### Syntax\\n`RESULT = RRSPACING(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of the same type and kind as `X`. \\nThe value returned is equal to\\n`ABS(FRACTION(X)) * FLOAT(RADIX(X))**DIGITS(X)`.\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"SPACING.html#SPACING\\">SPACING</a>\\n"},"LOG_GAMMA":{"doc":"`LOG_GAMMA` — Logarithm of the Gamma function\\n\\n### Description\\n`LOG_GAMMA(X)` computes the natural logarithm of the absolute value\\nof the Gamma (\\\\Gamma) function.\\n\\n\\n\\n### Syntax\\n`X = LOG_GAMMA(X)`\\n\\n\\n### Arguments\\n\\n     \\n and neither zero\\nnor a negative integer.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `REAL` of the same kind as `X`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_log_gamma\\n\\n  real :: x = 1.0\\n\\n  x = lgamma(x) ! returns 0.0\\n\\nend program test_log_gamma\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name              | Argument          | Return type        | Standard\\n\\n | `LGAMMA(X)`  | `REAL(4) X`  | `REAL(4)`     | GNU Extension\\n\\n | `ALGAMA(X)`  | `REAL(4) X`  | `REAL(4)`     | GNU Extension\\n\\n | `DLGAMA(X)`  | `REAL(8) X`  | `REAL(8)`     | GNU Extension\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\nGamma function: <a href=\\"GAMMA.html#GAMMA\\">GAMMA</a>\\n\\n   "},"SIZEOF":{"doc":"`SIZEOF` — Size in bytes of an expression\\n\\n### Description\\n`SIZEOF(X)` calculates the number of bytes of storage the\\nexpression `X` occupies.\\n\\n\\n\\n### Syntax\\n`N = SIZEOF(X)`\\n\\n\\n### Arguments\\n\\n     \\n | `X`  | The argument shall be of any type, rank or shape.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type integer and of the system-dependent kind\\n`C_SIZE_T` (from the `ISO_C_BINDING` module). Its value is the\\nnumber of bytes occupied by the argument.  If the argument has the\\n`POINTER` attribute, the number of bytes of the storage area pointed\\nto is returned.  If the argument is of a derived type with `POINTER`or `ALLOCATABLE` components, the return value does not account for\\nthe sizes of the data pointed to by these components. If the argument is\\npolymorphic, the size according to the dynamic type is returned. The argument\\nmay not be a procedure or procedure pointer. Note that the code assumes for\\narrays that those are contiguous; for contiguous arrays, it returns the\\nstorage or an array element multiplied by the size of the array.\\n\\n\\n\\n### Example\\n```\\n\\n\\ninteger :: i\\n\\nreal :: r, s(5)\\n\\nprint *, (sizeof(s)/sizeof(r) == 5)\\n\\nend\\n\\n```\\n\\n     \\nThe example will print `.TRUE.` unless you are using a platform\\nwhere default `REAL` variables are unusually padded.\\n\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n\\n### See also\\n<a href=\\"C_005fSIZEOF.html#C_005fSIZEOF\\">C_SIZEOF</a>, <a href=\\"STORAGE_005fSIZE.html#STORAGE_005fSIZE\\">STORAGE_SIZE</a>\\n"},"REAL":{"doc":"`REAL` — Convert to real type\\n\\n### Description\\n`REAL(A [, KIND])` converts its argument `A` to a real type.  The\\n`REALPART` function is provided for compatibility with *g77*,\\nand its use is strongly discouraged.\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `RESULT = REALPART(Z)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n, or\\n`COMPLEX`. \\n\\n | `KIND`  | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThese functions return a `REAL` variable or array under\\nthe following rules:\\n\\n          <dl>\\n**(A)** `REAL(A)` is converted to a default real type if `A` is an\\ninteger or real variable. \\n\\n**(B)** `REAL(A)` is converted to a real type with the kind type parameter\\nof `A` if `A` is a complex variable. \\n\\n**(C)** `REAL(A, KIND)` is converted to a real type with kind type\\nparameter `KIND` if `A` is a complex, integer, or real\\nvariable. \\n\\n</dl>\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_real\\n\\n  complex :: x = (1.0, 2.0)\\n\\n  print *, real(x), real(x,8), realpart(x)\\n\\nend program test_real\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name              | Argument            | Return type      | Standard\\n\\n | `FLOAT(A)`   | `INTEGER(4)`   | `REAL(4)`   | Fortran 77 and later\\n\\n | `DFLOAT(A)`  | `INTEGER(4)`   | `REAL(8)`   | GNU extension\\n\\n | `SNGL(A)`    | `INTEGER(8)`   | `REAL(4)`   | Fortran 77 and later\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"DBLE.html#DBLE\\">DBLE</a>\\n\\n   "},"LOG10":{"doc":"`LOG10` — Base 10 logarithm function\\n\\n### Description\\n`LOG10(X)` computes the base 10 logarithm of `X`.\\n\\n\\n\\n### Syntax\\n`RESULT = LOG10(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `REAL` or `COMPLEX`. \\nThe kind type parameter is the same as `X`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_log10\\n\\n  real(8) :: x = 10.0_8\\n\\n  x = log10(x)\\n\\nend program test_log10\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name             | Argument           | Return type        | Standard\\n\\n | `ALOG10(X)`   | `REAL(4) X`   | `REAL(4)`     | Fortran 95 and later\\n\\n | `DLOG10(X)`   | `REAL(8) X`   | `REAL(8)`     | Fortran 95 and later\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"SUM":{"doc":"`SUM` — Sum of array elements\\n\\n### Description\\nAdds the elements of `ARRAY` along dimension `DIM` if\\nthe corresponding element in `MASK` is `TRUE`.\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `RESULT = SUM(ARRAY, DIM[, MASK])`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n,\\n`REAL` or `COMPLEX`. \\n\\n | `DIM`    | (Optional) shall be a scalar of type\\n`INTEGER` with a value in the range from 1 to n, where n\\nequals the rank of `ARRAY`. \\n\\n | `MASK`   | (Optional) shall be of type `LOGICAL`and either be a scalar or an array of the same shape as `ARRAY`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe result is of the same type as `ARRAY`.\\n\\n     \\nIf `DIM` is absent, a scalar with the sum of all elements in `ARRAY`\\nis returned. Otherwise, an array of rank n-1, where n equals the rank of\\n`ARRAY`, and a shape similar to that of `ARRAY` with dimension `DIM`\\ndropped is returned.\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_sum\\n\\n  INTEGER :: x(5) = (/ 1, 2, 3, 4 ,5 /)\\n\\n  print *, SUM(x)                        ! all elements, sum = 15\\n\\n  print *, SUM(x, MASK=MOD(x, 2)==1)     ! odd elements, sum = 9\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n\\n### See also\\n<a href=\\"PRODUCT.html#PRODUCT\\">PRODUCT</a>\\n"},"FNUM":{"doc":"`FNUM` — File number function\\n\\n### Description\\n`FNUM(UNIT)` returns the POSIX file descriptor number corresponding to the\\nopen Fortran I/O unit `UNIT`.\\n\\n\\n\\n### Syntax\\n`RESULT = FNUM(UNIT)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER`\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_fnum\\n\\n  integer :: i\\n\\n  open (unit=10, status = \\"scratch\\")\\n\\n  i = fnum(10)\\n\\n  print *, i\\n\\n  close (10)\\n\\nend program test_fnum\\n\\n```\\n\\n     \\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nFunction\\n\\n\\n"},"GET_ENVIRONMENT_VARIABLE":{"doc":"`GET_ENVIRONMENT_VARIABLE` — Get an environmental variable\\n\\n### Description\\nGet the `VALUE` of the environmental variable `NAME`.\\n\\n     \\nNote that `GET_ENVIRONMENT_VARIABLE` need not be thread-safe. It\\nis the responsibility of the user to ensure that the environment is\\nnot being updated concurrently with a call to the\\n`GET_ENVIRONMENT_VARIABLE` intrinsic.\\n\\n\\n\\n\\n### Syntax\\n`CALL GET_ENVIRONMENT_VARIABLE(NAME[, VALUE, LENGTH, STATUS, TRIM_NAME)`\\n\\n\\n### Arguments\\n\\n     \\n\\nand of default kind. \\n\\n | `VALUE`      | (Optional) Shall be a scalar of type `CHARACTER`and of default kind. \\n\\n | `LENGTH`     | (Optional) Shall be a scalar of type `INTEGER`and of default kind. \\n\\n | `STATUS`     | (Optional) Shall be a scalar of type `INTEGER`and of default kind. \\n\\n | `TRIM_NAME`  | (Optional) Shall be a scalar of type `LOGICAL`and of default kind.\\n\\n\\n\\n\\n\\n\\n### Return value\\nStores the value of `NAME` in `VALUE`. If `VALUE` is\\nnot large enough to hold the data, it is truncated. If `NAME`\\nis not set, `VALUE` will be filled with blanks. Argument `LENGTH`\\ncontains the length needed for storing the environment variable `NAME`\\nor zero if it is not present. `STATUS` is -1 if `VALUE` is present\\nbut too short for the environment variable; it is 1 if the environment\\nvariable does not exist and 2 if the processor does not support environment\\nvariables; in all other cases `STATUS` is zero. If `TRIM_NAME` is\\npresent with the value `.FALSE.`, the trailing blanks in `NAME`\\nare significant; otherwise they are not part of the environment variable\\nname.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_getenv\\n\\n  CHARACTER(len=255) :: homedir\\n\\n  CALL get_environment_variable(\\"HOME\\", homedir)\\n\\n  WRITE (*,*) TRIM(homedir)\\n\\nEND PROGRAM\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 2003 and later\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n"},"LSTAT":{"doc":"`LSTAT` — Get file status\\n\\n### Description\\n`LSTAT` is identical to <a href=\\"STAT.html#STAT\\">STAT</a>, except that if path is a\\nsymbolic link, then the link itself is statted, not the file that it\\nrefers to.\\n\\n     \\nThe elements in `VALUES` are the same as described by <a href=\\"STAT.html#STAT\\">STAT</a>.\\n\\n     \\n\\nThis intrinsic is provided in both subroutine and function forms;\\nhowever, only one form can be used in any given program unit.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `STATUS = LSTAT(NAME, VALUES)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n of the default\\nkind, a valid path within the file system. \\n\\n | `VALUES`  | The type shall be `INTEGER(4), DIMENSION(13)`. \\n\\n | `STATUS`  | (Optional) status flag of type `INTEGER(4)`. \\nReturns 0 on success and a system specific error code otherwise.\\n\\n\\n\\n\\n\\n\\n### Example\\nSee <a href=\\"STAT.html#STAT\\">STAT</a> for an example.\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n\\n### See also\\nTo stat an open file: <a href=\\"FSTAT.html#FSTAT\\">FSTAT</a>, to stat a file: <a href=\\"STAT.html#STAT\\">STAT</a>\\n"},"EOSHIFT":{"doc":"`EOSHIFT` — End-off shift elements of an array\\n\\n### Description\\n`EOSHIFT(ARRAY, SHIFT[, BOUNDARY, DIM])` performs an end-off shift on\\nelements of `ARRAY` along the dimension of `DIM`.  If `DIM` is\\nomitted it is taken to be `1`.  `DIM` is a scalar of type\\n`INTEGER` in the range of 1 \\\\leq DIM \\\\leq n) where n is the\\nrank of `ARRAY`.  If the rank of `ARRAY` is one, then all elements of\\n`ARRAY` are shifted by `SHIFT` places.  If rank is greater than one,\\nthen all complete rank one sections of `ARRAY` along the given dimension are\\nshifted.  Elements shifted out one end of each rank one section are dropped.  If\\n`BOUNDARY` is present then the corresponding value of from `BOUNDARY`\\nis copied back in the other end.  If `BOUNDARY` is not present then the\\nfollowing are copied in depending on the type of `ARRAY`.\\n\\n     \\n\\n\\n | Numeric   | 0 of the type and kind of `ARRAY`. \\n\\n | Logical   | `.FALSE.`. \\n\\n | Character(`len`)  | `len` blanks.\\n\\n\\n\\n\\n\\n\\n### Syntax\\n`RESULT = EOSHIFT(ARRAY, SHIFT [, BOUNDARY, DIM])`\\n\\n\\n### Arguments\\n\\n     \\n | `ARRAY`   | May be any type, not scalar. \\n\\n | `SHIFT`   | The type shall be `INTEGER`. \\n\\n | `BOUNDARY`  | Same type as `ARRAY`. \\n\\n | `DIM`     | The type shall be `INTEGER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nReturns an array of same type and rank as the `ARRAY` argument.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_eoshift\\n\\n    integer, dimension(3,3) :: a\\n\\n    a = reshape( (/ 1, 2, 3, 4, 5, 6, 7, 8, 9 /), (/ 3, 3 /))\\n\\n    print \'(3i3)\', a(1,:)\\n\\n    print \'(3i3)\', a(2,:)\\n\\n    print \'(3i3)\', a(3,:)\\n\\n    a = EOSHIFT(a, SHIFT=(/1, 2, 1/), BOUNDARY=-5, DIM=2)\\n\\n    print *\\n\\n    print \'(3i3)\', a(1,:)\\n\\n    print \'(3i3)\', a(2,:)\\n\\n    print \'(3i3)\', a(3,:)\\n\\nend program test_eoshift\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n"},"POPCNT":{"doc":"`POPCNT` — Number of bits set\\n\\n### Description\\n`POPCNT(I)` returns the number of bits set (\'1\' bits) in the binary\\nrepresentation of `I`.\\n\\n\\n\\n### Syntax\\n`RESULT = POPCNT(I)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of the default integer\\nkind.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_population\\n\\n  print *, popcnt(127),       poppar(127)\\n\\n  print *, popcnt(huge(0_4)), poppar(huge(0_4))\\n\\n  print *, popcnt(huge(0_8)), poppar(huge(0_8))\\n\\nend program test_population\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"POPPAR.html#POPPAR\\">POPPAR</a>, <a href=\\"LEADZ.html#LEADZ\\">LEADZ</a>, <a href=\\"TRAILZ.html#TRAILZ\\">TRAILZ</a>\\n\\n\\n"},"COSD":{"doc":"`COSD` — Cosine function, degrees\\n\\n### Description\\nCOSD(X) computes the cosine of X in degrees.\\nThis function is for compatibility only and should be avoided in favor of standard constructs wherever possible.\\n### Standard\\nGNU Extension, enabled with -fdec-math\\n### Class\\nElemental function\\n### Syntax\\nRESULT = COSD(X)\\n### Arguments\\n- X: The type shall be REAL or COMPLEX.\\n### Return value\\nThe return value is of the same type and kind as X. The real part of the result is in degrees. If X is of the type REAL, the return value lies in the range -1 \\\\leq \\\\cosd (x) \\\\leq 1.\\n"},"ATOMIC_FETCH_ADD":{"doc":"`ATOMIC_FETCH_ADD` — Atomic ADD operation with prior fetch\\n\\n### Description\\n`ATOMIC_FETCH_ADD(ATOM, VALUE, OLD)` atomically stores the value of\\n`ATOM` in `OLD` and adds the value of `VAR` to the\\nvariable `ATOM`. When `STAT` is present and the invokation was\\nsuccessful, it is assigned the value 0. If it is present and the invokation\\nhas failed, it is assigned a positive value; in particular, for a coindexed\\n`ATOM`, if the remote image has stopped, it is assigned the value of\\n`ISO_FORTRAN_ENV`\'s `STAT_STOPPED_IMAGE` and if the remote image has\\nfailed, the value `STAT_FAILED_IMAGE`.\\n\\n\\n\\n### Syntax\\n`CALL ATOMIC_FETCH_ADD (ATOM, VALUE, old [, STAT])`\\n\\n\\n### Arguments\\n\\n     \\n | `ATOM`    | Scalar coarray or coindexed variable of integer\\ntype with `ATOMIC_INT_KIND` kind. \\n`ATOMIC_LOGICAL_KIND` kind.\\n\\n     \\n\\n\\n | `VALUE`   | Scalar of the same type as `ATOM`. If the kind\\nis different, the value is converted to the kind of `ATOM`. \\n\\n | `OLD`     | Scalar of the same type and kind as `ATOM`. \\n\\n | `STAT`    | (optional) Scalar default-kind integer variable.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram atomic\\n\\n  use iso_fortran_env\\n\\n  integer(atomic_int_kind) :: atom[*], old\\n\\n  call atomic_add (atom[1], this_image(), old)\\n\\nend program atomic\\n\\n```\\n\\n\\n\\n### Standard\\nTS 18508 or later\\n\\n\\n\\n### Class\\nAtomic subroutine\\n\\n\\n\\n### See also\\n<a href=\\"ATOMIC_005fDEFINE.html#ATOMIC_005fDEFINE\\">ATOMIC_DEFINE</a>, <a href=\\"ATOMIC_005fADD.html#ATOMIC_005fADD\\">ATOMIC_ADD</a>, <a href=\\"ISO_005fFORTRAN_005fENV.html#ISO_005fFORTRAN_005fENV\\">ISO_FORTRAN_ENV</a>,\\n<a href=\\"ATOMIC_005fFETCH_005fAND.html#ATOMIC_005fFETCH_005fAND\\">ATOMIC_FETCH_AND</a>, <a href=\\"ATOMIC_005fFETCH_005fOR.html#ATOMIC_005fFETCH_005fOR\\">ATOMIC_FETCH_OR</a>, <a href=\\"ATOMIC_005fFETCH_005fXOR.html#ATOMIC_005fFETCH_005fXOR\\">ATOMIC_FETCH_XOR</a>\\n"},"PRESENT":{"doc":"`PRESENT` — Determine whether an optional dummy argument is specified\\n\\n### Description\\nDetermines whether an optional dummy argument is present.\\n\\n\\n\\n### Syntax\\n`RESULT = PRESENT(A)`\\n\\n\\n### Arguments\\n\\n     \\n | `A`  | May be of any type and may be a pointer, scalar or array\\nvalue, or a dummy procedure. It shall be the name of an optional dummy argument\\naccessible within the current subroutine or function.\\n\\n\\n\\n\\n\\n\\n### Return value\\nReturns either `TRUE` if the optional argument `A` is present, or\\n`FALSE` otherwise.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_present\\n\\n  WRITE(*,*) f(), f(42)      ! \\"F T\\"\\n\\nCONTAINS\\n\\n  LOGICAL FUNCTION f(x)\\n\\n    INTEGER, INTENT(IN), OPTIONAL :: x\\n\\n    f = PRESENT(x)\\n\\n  END FUNCTION\\n\\nEND PROGRAM\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n"},"LLT":{"doc":"`LLT` — Lexical less than\\n\\n### Description\\nDetermines whether one string is lexically less than another string,\\nwhere the two strings are interpreted as containing ASCII character\\ncodes.  If the String A and String B are not the same length, the\\nshorter is compared as if spaces were appended to it to form a value\\nthat has the same length as the longer.\\n\\n     \\nIn general, the lexical comparison intrinsics `LGE`, `LGT`,\\n`LLE`, and `LLT` differ from the corresponding intrinsic\\noperators `.GE.`, `.GT.`, `.LE.`, and `.LT.`, in\\nthat the latter use the processor\'s character ordering (which is not\\nASCII on some targets), whereas the former always use the ASCII\\nordering.\\n\\n\\n\\n\\n### Syntax\\n`RESULT = LLT(STRING_A, STRING_B)`\\n\\n\\n### Arguments\\n\\n     \\n type. \\n\\n | `STRING_B`  | Shall be of default `CHARACTER` type.\\n\\n\\n\\n\\n\\n\\n### Return value\\nReturns `.TRUE.` if `STRING_A < STRING_B`, and `.FALSE.`otherwise, based on the ASCII ordering.\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name                            | Argument           | Return type        | Standard\\n\\n | `LLT(STRING_A, STRING_B)`  | `CHARACTER`   | `LOGICAL`     | Fortran 77 and later\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"LGE.html#LGE\\">LGE</a>, <a href=\\"LGT.html#LGT\\">LGT</a>, <a href=\\"LLE.html#LLE\\">LLE</a>\\n"},"ATOMIC_FETCH_XOR":{"doc":"`ATOMIC_FETCH_XOR` — Atomic bitwise XOR operation with prior fetch\\n\\n### Description\\n`ATOMIC_XOR(ATOM, VALUE)` atomically stores the value of `ATOM` in\\n`OLD` and defines `ATOM` with the bitwise XOR between the values of\\n`ATOM` and `VALUE`. When `STAT` is present and the invokation was\\nsuccessful, it is assigned the value 0. If it is present and the invokation has\\nfailed, it is assigned a positive value; in particular, for a coindexed\\n`ATOM`, if the remote image has stopped, it is assigned the value of\\n`ISO_FORTRAN_ENV`\'s `STAT_STOPPED_IMAGE` and if the remote image has\\nfailed, the value `STAT_FAILED_IMAGE`.\\n\\n\\n\\n### Syntax\\n`CALL ATOMIC_FETCH_XOR (ATOM, VALUE, OLD [, STAT])`\\n\\n\\n### Arguments\\n\\n     \\n | `ATOM`    | Scalar coarray or coindexed variable of integer\\ntype with `ATOMIC_INT_KIND` kind. \\n\\n | `VALUE`   | Scalar of the same type as `ATOM`. If the kind\\nis different, the value is converted to the kind of `ATOM`. \\n\\n | `OLD`     | Scalar of the same type and kind as `ATOM`. \\n\\n | `STAT`    | (optional) Scalar default-kind integer variable.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram atomic\\n\\n  use iso_fortran_env\\n\\n  integer(atomic_int_kind) :: atom[*], old\\n\\n  call atomic_fetch_xor (atom[1], int(b\'10100011101\'), old)\\n\\nend program atomic\\n\\n```\\n\\n\\n\\n### Standard\\nTS 18508 or later\\n\\n\\n\\n### Class\\nAtomic subroutine\\n\\n\\n\\n### See also\\n<a href=\\"ATOMIC_005fDEFINE.html#ATOMIC_005fDEFINE\\">ATOMIC_DEFINE</a>, <a href=\\"ATOMIC_005fXOR.html#ATOMIC_005fXOR\\">ATOMIC_XOR</a>, <a href=\\"ISO_005fFORTRAN_005fENV.html#ISO_005fFORTRAN_005fENV\\">ISO_FORTRAN_ENV</a>,\\n<a href=\\"ATOMIC_005fFETCH_005fADD.html#ATOMIC_005fFETCH_005fADD\\">ATOMIC_FETCH_ADD</a>, <a href=\\"ATOMIC_005fFETCH_005fAND.html#ATOMIC_005fFETCH_005fAND\\">ATOMIC_FETCH_AND</a>, <a href=\\"ATOMIC_005fFETCH_005fOR.html#ATOMIC_005fFETCH_005fOR\\">ATOMIC_FETCH_OR</a>\\n"},"SHIFTR":{"doc":"`SHIFTR` — Right shift\\n\\n### Description\\n`SHIFTR` returns a value corresponding to `I` with all of the\\nbits shifted right by `SHIFT` places.  If the absolute value of\\n`SHIFT` is greater than `BIT_SIZE(I)`, the value is undefined. \\nBits shifted out from the right end are lost, and bits shifted in from\\nthe left end are set to 0.\\n\\n\\n\\n### Syntax\\n`RESULT = SHIFTR(I, SHIFT)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `SHIFT`  | The type shall be `INTEGER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of the same kind as\\n`I`.\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"SHIFTA.html#SHIFTA\\">SHIFTA</a>, <a href=\\"SHIFTL.html#SHIFTL\\">SHIFTL</a>\\n"},"COTAND":{"doc":"`COTAND` — Cotangent function, degrees\\n\\n### Description\\nCOTAND(X) computes the cotangent of X in degrees. Equivalent to COSD(x) divided by SIND(x), or 1 / TAND(x).\\nThis function is for compatibility only and should be avoided in favor of standard constructs wherever possible.\\n### Standard\\nGNU Extension, enabled with -fdec-math\\n### Class\\nElemental function\\n### Syntax\\nRESULT = COTAND(X)\\n### Arguments\\n- X: The type shall be REAL or COMPLEX.\\n### Return value\\nThe return value has same type and kind as X, and its value is in degrees.\\n"},"LEN":{"doc":"`LEN` — Length of a character entity\\n\\n### Description\\nReturns the length of a character string.  If `STRING` is an array,\\nthe length of an element of `STRING` is returned.  Note that\\n`STRING` need not be defined when this intrinsic is invoked, since\\nonly the length, not the content, of `STRING` is needed.\\n\\n\\n\\n### Syntax\\n`L = LEN(STRING [, KIND])`\\n\\n\\n### Arguments\\n\\n     \\n | `STRING`  | Shall be a scalar or array of type\\n`CHARACTER`, with `INTENT(IN)`<br>\\n | `KIND`  | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of kind `KIND`. If\\n`KIND` is absent, the return value is of default integer kind.\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name                | Argument           | Return type        | Standard\\n\\n | `LEN(STRING)`  | `CHARACTER`   | `INTEGER`     | Fortran 77 and later\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later, with `KIND` argument Fortran 2003 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n\\n### See also\\n<a href=\\"LEN_005fTRIM.html#LEN_005fTRIM\\">LEN_TRIM</a>, <a href=\\"ADJUSTL.html#ADJUSTL\\">ADJUSTL</a>, <a href=\\"ADJUSTR.html#ADJUSTR\\">ADJUSTR</a>\\n"},"GAMMA":{"doc":"`GAMMA` — Gamma function\\n\\n### Description\\n`GAMMA(X)` computes Gamma (\\\\Gamma) of `X`. For positive,\\ninteger values of `X` the Gamma function simplifies to the factorial\\nfunction \\\\Gamma(x)=(x-1)!.\\n\\n\\n\\n### Syntax\\n`X = GAMMA(X)`\\n\\n\\n### Arguments\\n\\n     \\n and neither zero\\nnor a negative integer.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `REAL` of the same kind as `X`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_gamma\\n\\n  real :: x = 1.0\\n\\n  x = gamma(x) ! returns 1.0\\n\\nend program test_gamma\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name              | Argument          | Return type        | Standard\\n\\n | `GAMMA(X)`   | `REAL(4) X`  | `REAL(4)`     | GNU Extension\\n\\n | `DGAMMA(X)`  | `REAL(8) X`  | `REAL(8)`     | GNU Extension\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\nLogarithm of the Gamma function: <a href=\\"LOG_005fGAMMA.html#LOG_005fGAMMA\\">LOG_GAMMA</a>\\n\\n   "},"CEILING":{"doc":"`CEILING` — Integer ceiling function\\n\\n### Description\\n`CEILING(A)` returns the least integer greater than or equal to `A`.\\n\\n\\n\\n### Syntax\\n`RESULT = CEILING(A [, KIND])`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `KIND`  | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER(KIND)` if `KIND` is present\\nand a default-kind `INTEGER` otherwise.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_ceiling\\n\\n    real :: x = 63.29\\n\\n    real :: y = -63.59\\n\\n    print *, ceiling(x) ! returns 64\\n\\n    print *, ceiling(y) ! returns -63\\n\\nend program test_ceiling\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"FLOOR.html#FLOOR\\">FLOOR</a>, <a href=\\"NINT.html#NINT\\">NINT</a>\\n\\n   "},"TRAILZ":{"doc":"`TRAILZ` — Number of trailing zero bits of an integer\\n\\n### Description\\n`TRAILZ` returns the number of trailing zero bits of an integer.\\n\\n\\n\\n### Syntax\\n`RESULT = TRAILZ(I)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe type of the return value is the default `INTEGER`. \\nIf all the bits of `I` are zero, the result value is `BIT_SIZE(I)`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_trailz\\n\\n  WRITE (*,*) TRAILZ(8)  ! prints 3\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"BIT_005fSIZE.html#BIT_005fSIZE\\">BIT_SIZE</a>, <a href=\\"LEADZ.html#LEADZ\\">LEADZ</a>, <a href=\\"POPPAR.html#POPPAR\\">POPPAR</a>, <a href=\\"POPCNT.html#POPCNT\\">POPCNT</a>\\n"},"ASINH":{"doc":"`ASINH` — Inverse hyperbolic sine function\\n\\n### Description\\n`ASINH(X)` computes the inverse hyperbolic sine of `X`.\\n\\n\\n\\n### Syntax\\n`RESULT = ASINH(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of the same type and kind as  `X`. If `X` is\\ncomplex, the imaginary part of the result is in radians and lies between\\n-\\\\pi/2 \\\\leq \\\\Im \\\\asinh(x) \\\\leq \\\\pi/2.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_asinh\\n\\n  REAL(8), DIMENSION(3) :: x = (/ -1.0, 0.0, 1.0 /)\\n\\n  WRITE (*,*) ASINH(x)\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name              | Argument           | Return type        | Standard\\n\\n | `DASINH(X)`  | `REAL(8) X`   | `REAL(8)`     | GNU extension.\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\nInverse function: <a href=\\"SINH.html#SINH\\">SINH</a>\\n"},"SCAN":{"doc":"`SCAN` — Scan a string for the presence of a set of characters\\n\\n### Description\\nScans a `STRING` for any of the characters in a `SET`\\nof characters.\\n\\n     \\nIf `BACK` is either absent or equals `FALSE`, this function\\nreturns the position of the leftmost character of `STRING` that is\\nin `SET`. If `BACK` equals `TRUE`, the rightmost position\\nis returned. If no character of `SET` is found in `STRING`, the\\nresult is zero.\\n\\n\\n\\n\\n### Syntax\\n`RESULT = SCAN(STRING, SET[, BACK [, KIND]])`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `SET`     | Shall be of type `CHARACTER`. \\n\\n | `BACK`    | (Optional) shall be of type `LOGICAL`. \\n\\n | `KIND`    | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of kind `KIND`. If\\n`KIND` is absent, the return value is of default integer kind.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_scan\\n\\n  WRITE(*,*) SCAN(\\"FORTRAN\\", \\"AO\\")          ! 2, found \'O\'\\n\\n  WRITE(*,*) SCAN(\\"FORTRAN\\", \\"AO\\", .TRUE.)  ! 6, found \'A\'\\n\\n  WRITE(*,*) SCAN(\\"FORTRAN\\", \\"C++\\")         ! 0, found none\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later, with `KIND` argument Fortran 2003 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"INDEX-intrinsic.html#INDEX-intrinsic\\">INDEX intrinsic</a>, <a href=\\"VERIFY.html#VERIFY\\">VERIFY</a>\\n"},"COTAN":{"doc":"`COTAN` — Cotangent function\\n\\n### Description\\nCOTAN(X) computes the cotangent of X. Equivalent to COS(x) divided by SIN(x), or 1 / TAN(x).\\nThis function is for compatibility only and should be avoided in favor of standard constructs wherever possible.\\n### Standard\\nGNU Extension, enabled with -fdec-math\\n### Class\\nElemental function\\n### Syntax\\nRESULT = COTAN(X)\\n### Arguments\\n- X: The type shall be REAL or COMPLEX.\\n### Return value\\nThe return value has same type and kind as X, and its value is in radians.\\n"},"MINVAL":{"doc":"`MINVAL` — Minimum value of an array\\n\\n### Description\\nDetermines the minimum value of the elements in an array value, or, if\\nthe `DIM` argument is supplied, determines the minimum value along\\neach row of the array in the `DIM` direction.  If `MASK` is\\npresent, only the elements for which `MASK` is `.TRUE.` are\\nconsidered.  If the array has zero size, or all of the elements of\\n`MASK` are `.FALSE.`, then the result is `HUGE(ARRAY)` if\\n`ARRAY` is numeric, or a string of `CHAR(255)` characters if\\n`ARRAY` is of character type.\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `RESULT = MINVAL(ARRAY [, MASK])`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n or\\n`REAL`. \\n\\n | `DIM`    | (Optional) Shall be a scalar of type\\n`INTEGER`, with a value between one and the rank of `ARRAY`,\\ninclusive.  It may not be an optional dummy argument. \\n\\n | `MASK`   | Shall be an array of type `LOGICAL`,\\nand conformable with `ARRAY`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nIf `DIM` is absent, or if `ARRAY` has a rank of one, the result\\nis a scalar.  If `DIM` is present, the result is an array with a\\nrank one less than the rank of `ARRAY`, and a size corresponding to\\nthe size of `ARRAY` with the `DIM` dimension removed.  In all\\ncases, the result is of the same type and kind as `ARRAY`.\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n\\n### See also\\n<a href=\\"MIN.html#MIN\\">MIN</a>, <a href=\\"MINLOC.html#MINLOC\\">MINLOC</a>\\n\\n   "},"MINEXPONENT":{"doc":"`MINEXPONENT` — Minimum exponent of a real kind\\n\\n### Description\\n`MINEXPONENT(X)` returns the minimum exponent in the model of the\\ntype of `X`.\\n\\n\\n\\n### Syntax\\n`RESULT = MINEXPONENT(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of the default integer\\nkind.\\n\\n\\n\\n### Example\\nSee `MAXEXPONENT` for an example. \\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n"},"IANY":{"doc":"`IANY` — Bitwise OR of array elements\\n\\n### Description\\nReduces with bitwise OR (inclusive or) the elements of `ARRAY` along\\ndimension `DIM` if the corresponding element in `MASK` is `TRUE`.\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `RESULT = IANY(ARRAY, DIM[, MASK])`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n\\n\\n | `DIM`    | (Optional) shall be a scalar of type\\n`INTEGER` with a value in the range from 1 to n, where n\\nequals the rank of `ARRAY`. \\n\\n | `MASK`   | (Optional) shall be of type `LOGICAL`and either be a scalar or an array of the same shape as `ARRAY`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe result is of the same type as `ARRAY`.\\n\\n     \\nIf `DIM` is absent, a scalar with the bitwise OR of all elements in\\n`ARRAY` is returned. Otherwise, an array of rank n-1, where n equals\\nthe rank of `ARRAY`, and a shape similar to that of `ARRAY` with\\ndimension `DIM` dropped is returned.\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_iany\\n\\n  INTEGER(1) :: a(2)\\n\\n\\n  a(1) = b\'00100100\'\\n\\n  a(2) = b\'01101010\'\\n\\n\\n  ! prints 01101110\\n\\n  PRINT \'(b8.8)\', IANY(a)\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n\\n### See also\\n<a href=\\"IPARITY.html#IPARITY\\">IPARITY</a>, <a href=\\"IALL.html#IALL\\">IALL</a>, <a href=\\"IOR.html#IOR\\">IOR</a>\\n"},"ADJUSTR":{"doc":"`ADJUSTR` — Right adjust a string\\n\\n### Description\\n`ADJUSTR(STRING)` will right adjust a string by removing trailing spaces. \\nSpaces are inserted at the start of the string as needed.\\n\\n\\n\\n### Syntax\\n`RESULT = ADJUSTR(STRING)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `CHARACTER` and of the same kind as\\n`STRING` where trailing spaces are removed and the same number of\\nspaces are inserted at the start of `STRING`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_adjustr\\n\\n  character(len=20) :: str = \'gfortran\'\\n\\n  str = adjustr(str)\\n\\n  print *, str\\n\\nend program test_adjustr\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"ADJUSTL.html#ADJUSTL\\">ADJUSTL</a>, <a href=\\"TRIM.html#TRIM\\">TRIM</a>\\n"},"EXECUTE_COMMAND_LINE":{"doc":"`EXECUTE_COMMAND_LINE` — Execute a shell command\\n\\n### Description\\n`EXECUTE_COMMAND_LINE` runs a shell command, synchronously or\\nasynchronously.\\n\\n     \\nThe `COMMAND` argument is passed to the shell and executed, using\\nthe C library\'s `system` call.  (The shell is `sh` on Unix\\nsystems, and `cmd.exe` on Windows.)  If `WAIT` is present\\nand has the value false, the execution of the command is asynchronous\\nif the system supports it; otherwise, the command is executed\\nsynchronously.\\n\\n     \\n\\nThe three last arguments allow the user to get status information.  After\\nsynchronous execution, `EXITSTAT` contains the integer exit code of\\nthe command, as returned by `system`.  `CMDSTAT` is set to zero\\nif the command line was executed (whatever its exit status was). \\n`CMDMSG` is assigned an error message if an error has occurred.\\n\\n     \\n\\nNote that the `system` function need not be thread-safe. It is\\nthe responsibility of the user to ensure that `system` is not\\ncalled concurrently.\\n\\n\\n\\n\\n### Syntax\\n`CALL EXECUTE_COMMAND_LINE(COMMAND [, WAIT, EXITSTAT, CMDSTAT, CMDMSG ])`\\n\\n\\n### Arguments\\n\\n     \\n scalar. \\n\\n | `WAIT`  | (Optional) Shall be a default `LOGICAL` scalar. \\n\\n | `EXITSTAT`  | (Optional) Shall be an `INTEGER` of the\\ndefault kind. \\n\\n | `CMDSTAT`  | (Optional) Shall be an `INTEGER` of the\\ndefault kind. \\n\\n | `CMDMSG`  | (Optional) Shall be an `CHARACTER` scalar of the\\ndefault kind.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_exec\\n\\n  integer :: i\\n\\n\\n  call execute_command_line (\\"external_prog.exe\\", exitstat=i)\\n\\n  print *, \\"Exit status of external_prog.exe was \\", i\\n\\n\\n  call execute_command_line (\\"reindex_files.exe\\", wait=.false.)\\n\\n  print *, \\"Now reindexing files in the background\\"\\n\\n\\nend program test_exec\\n\\n```\\n\\n\\n\\n### Notes\\n\\nBecause this intrinsic is implemented in terms of the `system`function call, its behavior with respect to signaling is processor\\ndependent. In particular, on POSIX-compliant systems, the SIGINT and\\nSIGQUIT signals will be ignored, and the SIGCHLD will be blocked. As\\nsuch, if the parent process is terminated, the child process might not be\\nterminated alongside.\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\n<a href=\\"SYSTEM.html#SYSTEM\\">SYSTEM</a>\\n"},"SRAND":{"doc":"`SRAND` — Reinitialize the random number generator\\n\\n### Description\\n`SRAND` reinitializes the pseudo-random number generator\\ncalled by `RAND` and `IRAND`. The new seed used by the\\ngenerator is specified by the required argument `SEED`.\\n\\n\\n\\n### Syntax\\n`CALL SRAND(SEED)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nDoes not return anything.\\n\\n\\n\\n### Example\\nSee `RAND` and `IRAND` for examples.\\n\\n\\n\\n### Notes\\nThe Fortran standard specifies the intrinsic subroutines\\n`RANDOM_SEED` to initialize the pseudo-random number\\ngenerator and `RANDOM_NUMBER` to generate pseudo-random numbers. \\nThese subroutines should be used in new codes.\\n\\n     \\nPlease note that in GNU Fortran, these two sets of intrinsics (`RAND`,\\n`IRAND` and `SRAND` on the one hand, `RANDOM_NUMBER` and\\n`RANDOM_SEED` on the other hand) access two independent\\npseudo-random number generators.\\n\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\n<a href=\\"RAND.html#RAND\\">RAND</a>, <a href=\\"RANDOM_005fSEED.html#RANDOM_005fSEED\\">RANDOM_SEED</a>, <a href=\\"RANDOM_005fNUMBER.html#RANDOM_005fNUMBER\\">RANDOM_NUMBER</a>\\n\\n   "},"EXPONENT":{"doc":"`EXPONENT` — Exponent function\\n\\n### Description\\n`EXPONENT(X)` returns the value of the exponent part of `X`. If `X`\\nis zero the value returned is zero.\\n\\n\\n\\n### Syntax\\n`RESULT = EXPONENT(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type default `INTEGER`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_exponent\\n\\n  real :: x = 1.0\\n\\n  integer :: i\\n\\n  i = exponent(x)\\n\\n  print *, i\\n\\n  print *, exponent(0.0)\\n\\nend program test_exponent\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"MERGE_BITS":{"doc":"`MERGE_BITS` — Merge of bits under mask\\n\\n### Description\\n`MERGE_BITS(I, J, MASK)` merges the bits of `I` and `J`\\nas determined by the mask.  The i-th bit of the result is equal to the\\ni-th bit of `I` if the i-th bit of `MASK` is 1; it is equal to\\nthe i-th bit of `J` otherwise.\\n\\n\\n\\n### Syntax\\n`RESULT = MERGE_BITS(I, J, MASK)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `J`     | Shall be of type `INTEGER` and of the same\\nkind as `I`. \\n\\n | `MASK`  | Shall be of type `INTEGER` and of the same\\nkind as `I`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe result is of the same type and kind as `I`.\\n\\n   \\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"UMASK":{"doc":"`UMASK` — Set the file creation mask\\n\\n### Description\\nSets the file creation mask to `MASK`. If called as a function, it\\nreturns the old value. If called as a subroutine and argument `OLD`\\nif it is supplied, it is set to the old value. See `umask(2)`.\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `OLD = UMASK(MASK)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `OLD`  | (Optional) Shall be a scalar of type\\n`INTEGER`.\\n\\n\\n\\n   \\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n"},"UCOBOUND":{"doc":"`UCOBOUND` — Upper codimension bounds of an array\\n\\n### Description\\nReturns the upper cobounds of a coarray, or a single upper cobound\\nalong the `DIM` codimension. \\n\\n\\n### Syntax\\n`RESULT = UCOBOUND(COARRAY [, DIM [, KIND]])`\\n\\n\\n### Arguments\\n\\n     \\n | `ARRAY`  | Shall be an coarray, of any type. \\n\\n | `DIM`  | (Optional) Shall be a scalar `INTEGER`. \\n\\n | `KIND`  | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of kind `KIND`. If\\n`KIND` is absent, the return value is of default integer kind. \\nIf `DIM` is absent, the result is an array of the lower cobounds of\\n`COARRAY`.  If `DIM` is present, the result is a scalar\\ncorresponding to the lower cobound of the array along that codimension.\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n\\n### See also\\n<a href=\\"LCOBOUND.html#LCOBOUND\\">LCOBOUND</a>, <a href=\\"LBOUND.html#LBOUND\\">LBOUND</a>\\n"},"ASIND":{"doc":"`ASIND` — Arcsine function, degrees\\n\\n### Description\\nASIND(X) computes the arcsine of its X in degrees (inverse of SIND(X)).\\nThis function is for compatibility only and should be avoided in favor of standard constructs wherever possible.\\n### Standard\\nGNU Extension, enabled with -fdec-math\\n### Class\\nElemental function\\n### Syntax\\nRESULT = ASIND(X)\\n### Arguments\\n- X: The type shall be either REAL and a magnitude that is less than or equal to one - or be COMPLEX.\\n### Return value\\nThe return value is of the same type and kind as X. The real part of the result is in degrees and lies in the range -90 \\\\leq \\\\Re \\\\asin(x) \\\\leq 90.\\n"},"HOSTNM":{"doc":"`HOSTNM` — Get system host name\\n\\n### Description\\nRetrieves the host name of the system on which the program is running.\\n\\n     \\nThis intrinsic is provided in both subroutine and function forms; however,\\nonly one form can be used in any given program unit.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `STATUS = HOSTNM(NAME)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n and of default kind. \\n\\n | `STATUS`   | (Optional) status flag of type `INTEGER`. \\nReturns 0 on success, or a system specific error code otherwise.\\n\\n\\n\\n\\n\\n\\n### Return value\\nIn either syntax, `NAME` is set to the current hostname if it can\\nbe obtained, or to a blank string otherwise.\\n\\n   \\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n"},"C_LOC":{"doc":"`C_LOC` — Obtain the C address of an object\\n\\n### Description\\n`C_LOC(X)` determines the C address of the argument.\\n\\n\\n\\n### Syntax\\n`RESULT = C_LOC(X)`\\n\\n\\n### Arguments\\n\\n     \\n | `X`  | Shall have either the POINTER or TARGET attribute. It shall not be a coindexed object. It shall either be a variable with interoperable type and kind type parameters, or be a scalar, nonpolymorphic variable with no length type parameters.\\n\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `C_PTR` and contains the C address\\nof the argument.\\n\\n\\n\\n### Example\\n```\\n\\n\\nsubroutine association_test(a,b)\\n\\n  use iso_c_binding, only: c_associated, c_loc, c_ptr\\n\\n  implicit none\\n\\n  real, pointer :: a\\n\\n  type(c_ptr) :: b\\n\\n  if(c_associated(b, c_loc(a))) &\\n\\n     stop \'b and a do not point to same target\'\\n\\nend subroutine association_test\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 2003 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n\\n### See also\\n<a href=\\"C_005fASSOCIATED.html#C_005fASSOCIATED\\">C_ASSOCIATED</a>, <a href=\\"C_005fFUNLOC.html#C_005fFUNLOC\\">C_FUNLOC</a>, <a href=\\"C_005fF_005fPOINTER.html#C_005fF_005fPOINTER\\">C_F_POINTER</a>, <a href=\\"C_005fF_005fPROCPOINTER.html#C_005fF_005fPROCPOINTER\\">C_F_PROCPOINTER</a>\\n"},"TANH":{"doc":"`TANH` — Hyperbolic tangent function\\n\\n### Description\\n`TANH(X)` computes the hyperbolic tangent of `X`.\\n\\n\\n\\n### Syntax\\n`X = TANH(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value has same type and kind as `X`. If `X` is\\ncomplex, the imaginary part of the result is in radians. If `X`\\nis `REAL`, the return value lies in the range\\n - 1 \\\\leq tanh(x) \\\\leq 1 .\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_tanh\\n\\n  real(8) :: x = 2.1_8\\n\\n  x = tanh(x)\\n\\nend program test_tanh\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name             | Argument           | Return type        | Standard\\n\\n | `TANH(X)`   | `REAL(4) X`   | `REAL(4)`     | Fortran 95 and later\\n\\n | `DTANH(X)`  | `REAL(8) X`   | `REAL(8)`     | Fortran 95 and later\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later, for a complex argument Fortran 2008 or later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"ATANH.html#ATANH\\">ATANH</a>\\n"},"COMMAND_ARGUMENT_COUNT":{"doc":"`COMMAND_ARGUMENT_COUNT` — Get number of command line arguments\\n\\n### Description\\n`COMMAND_ARGUMENT_COUNT` returns the number of arguments passed on the\\ncommand line when the containing program was invoked.\\n\\n\\n\\n### Syntax\\n`RESULT = COMMAND_ARGUMENT_COUNT()`\\n\\n\\n### Arguments\\n\\n     \\n | None\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is an `INTEGER` of default kind.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_command_argument_count\\n\\n    integer :: count\\n\\n    count = command_argument_count()\\n\\n    print *, count\\n\\nend program test_command_argument_count\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 2003 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n\\n### See also\\n<a href=\\"GET_005fCOMMAND.html#GET_005fCOMMAND\\">GET_COMMAND</a>, <a href=\\"GET_005fCOMMAND_005fARGUMENT.html#GET_005fCOMMAND_005fARGUMENT\\">GET_COMMAND_ARGUMENT</a>\\n"},"INT":{"doc":"`INT` — Convert to integer type\\n\\n### Description\\nConvert to integer type\\n\\n\\n\\n### Syntax\\n`RESULT = INT(A [, KIND))`\\n\\n\\n### Arguments\\n\\n     \\n,\\n`REAL`, or `COMPLEX`. \\n\\n | `KIND`  | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThese functions return a `INTEGER` variable or array under\\nthe following rules:\\n\\n          <dl>\\n**(A)** If `A` is of type `INTEGER`, `INT(A) = A`\\n**(B)** If `A` is of type `REAL` and |A| < 1, `INT(A)`equals `0`. If |A| \\\\geq 1, then `INT(A)` is the integer\\nwhose magnitude is the largest integer that does not exceed the magnitude\\nof `A` and whose sign is the same as the sign of `A`. \\n\\n**(C)** If `A` is of type `COMPLEX`, rule B is applied to the real part of `A`. \\n\\n</dl>\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_int\\n\\n  integer :: i = 42\\n\\n  complex :: z = (-3.7, 1.0)\\n\\n  print *, int(i)\\n\\n  print *, int(z), int(z,8)\\n\\nend program\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name             | Argument           | Return type        | Standard\\n\\n | `INT(A)`    | `REAL(4) A`   | `INTEGER`     | Fortran 77 and later\\n\\n | `IFIX(A)`   | `REAL(4) A`   | `INTEGER`     | Fortran 77 and later\\n\\n | `IDINT(A)`  | `REAL(8) A`   | `INTEGER`     | Fortran 77 and later\\n\\n\\n\\n   \\n\\n\\n### Standard\\nFortran 77 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"BIT_SIZE":{"doc":"`BIT_SIZE` — Bit size inquiry function\\n\\n### Description\\n`BIT_SIZE(I)` returns the number of bits (integer precision plus sign bit)\\nrepresented by the type of `I`.  The result of `BIT_SIZE(I)` is\\nindependent of the actual value of `I`.\\n\\n\\n\\n### Syntax\\n`RESULT = BIT_SIZE(I)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER`\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_bit_size\\n\\n    integer :: i = 123\\n\\n    integer :: size\\n\\n    size = bit_size(i)\\n\\n    print *, size\\n\\nend program test_bit_size\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n"},"CO_MAX":{"doc":"`CO_MAX` — Maximal value on the current set of images\\n\\n### Description\\n`CO_MAX` determines element-wise the maximal value of `A` on all\\nimages of the current team.  If `RESULT_IMAGE` is present, the maximum\\nvalues are returned in `A` on the specified image only and the value\\nof `A` on the other images become undefined.  If `RESULT_IMAGE` is\\nnot present, the value is returned on all images.  If the execution was\\nsuccessful and `STAT` is present, it is assigned the value zero.  If the\\nexecution failed, `STAT` gets assigned a nonzero value and, if present,\\n`ERRMSG` gets assigned a value describing the occurred error.\\n\\n\\n\\n### Syntax\\n`CALL CO_MAX(A [, RESULT_IMAGE, STAT, ERRMSG])`\\n\\n\\n### Arguments\\n\\n     \\n | `A`             | shall be an integer, real or character variable,\\nwhich has the same type and type parameters on all images of the team. \\n\\n | `RESULT_IMAGE`  | (optional) a scalar integer expression; if\\npresent, it shall have the same the same value on all images and refer to an\\nimage of the current team. \\n\\n | `STAT`          | (optional) a scalar integer variable\\n\\n | `ERRMSG`        | (optional) a scalar character variable\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test\\n\\n  integer :: val\\n\\n  val = this_image ()\\n\\n  call co_max (val, result_image=1)\\n\\n  if (this_image() == 1) then\\n\\n    write(*,*) \\"Maximal value\\", val  ! prints num_images()\\n\\n  end if\\n\\nend program test\\n\\n```\\n\\n\\n\\n### Standard\\nTechnical Specification (TS) 18508 or later\\n\\n\\n\\n### Class\\nCollective subroutine\\n\\n\\n\\n### See also\\n<a href=\\"CO_005fMIN.html#CO_005fMIN\\">CO_MIN</a>, <a href=\\"CO_005fSUM.html#CO_005fSUM\\">CO_SUM</a>, <a href=\\"CO_005fREDUCE.html#CO_005fREDUCE\\">CO_REDUCE</a>, <a href=\\"CO_005fBROADCAST.html#CO_005fBROADCAST\\">CO_BROADCAST</a>\\n"},"CSHIFT":{"doc":"`CSHIFT` — Circular shift elements of an array\\n\\n### Description\\n`CSHIFT(ARRAY, SHIFT [, DIM])` performs a circular shift on elements of\\n`ARRAY` along the dimension of `DIM`.  If `DIM` is omitted it is\\ntaken to be `1`.  `DIM` is a scalar of type `INTEGER` in the\\nrange of 1 \\\\leq DIM \\\\leq n) where n is the rank of `ARRAY`. \\nIf the rank of `ARRAY` is one, then all elements of `ARRAY` are shifted\\nby `SHIFT` places.  If rank is greater than one, then all complete rank one\\nsections of `ARRAY` along the given dimension are shifted.  Elements\\nshifted out one end of each rank one section are shifted back in the other end.\\n\\n\\n\\n### Syntax\\n`RESULT = CSHIFT(ARRAY, SHIFT [, DIM])`\\n\\n\\n### Arguments\\n\\n     \\n | `ARRAY`   | Shall be an array of any type. \\n\\n | `SHIFT`   | The type shall be `INTEGER`. \\n\\n | `DIM`     | The type shall be `INTEGER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nReturns an array of same type and rank as the `ARRAY` argument.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_cshift\\n\\n    integer, dimension(3,3) :: a\\n\\n    a = reshape( (/ 1, 2, 3, 4, 5, 6, 7, 8, 9 /), (/ 3, 3 /))\\n\\n    print \'(3i3)\', a(1,:)\\n\\n    print \'(3i3)\', a(2,:)\\n\\n    print \'(3i3)\', a(3,:)\\n\\n    a = cshift(a, SHIFT=(/1, 2, -1/), DIM=2)\\n\\n    print *\\n\\n    print \'(3i3)\', a(1,:)\\n\\n    print \'(3i3)\', a(2,:)\\n\\n    print \'(3i3)\', a(3,:)\\n\\nend program test_cshift\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n"},"COS":{"doc":"`COS` — Cosine function\\n\\n### Description\\n`COS(X)` computes the cosine of `X`.\\n\\n\\n\\n### Syntax\\n`RESULT = COS(X)`\\n\\n\\n### Arguments\\n\\n     \\n or\\n`COMPLEX`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of the same type and kind as `X`. The real part\\nof the result is in radians. If `X` is of the type `REAL`,\\nthe return value lies in the range  -1 \\\\leq \\\\cos (x) \\\\leq 1.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_cos\\n\\n  real :: x = 0.0\\n\\n  x = cos(x)\\n\\nend program test_cos\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name             | Argument             | Return type        | Standard\\n\\n | `COS(X)`    | `REAL(4) X`     | `REAL(4)`     | Fortran 77 and later\\n\\n | `DCOS(X)`   | `REAL(8) X`     | `REAL(8)`     | Fortran 77 and later\\n\\n | `CCOS(X)`   | `COMPLEX(4) X`  | `COMPLEX(4)`  | Fortran 77 and later\\n\\n | `ZCOS(X)`   | `COMPLEX(8) X`  | `COMPLEX(8)`  | GNU extension\\n\\n | `CDCOS(X)`  | `COMPLEX(8) X`  | `COMPLEX(8)`  | GNU extension\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later, has overloads that are GNU extensions\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\nInverse function: <a href=\\"ACOS.html#ACOS\\">ACOS</a>\\n\\n   "},"RAND":{"doc":"`RAND` — Real pseudo-random number\\n\\n### Description\\n`RAND(FLAG)` returns a pseudo-random number from a uniform\\ndistribution between 0 and 1. If `FLAG` is 0, the next number\\nin the current sequence is returned; if `FLAG` is 1, the generator\\nis restarted by `CALL SRAND(0)`; if `FLAG` has any other value,\\nit is used as a new seed with `SRAND`.\\n\\n     \\nThis intrinsic routine is provided for backwards compatibility with\\nGNU Fortran 77. It implements a simple modulo generator as provided\\nby *g77*. For new code, one should consider the use of\\n<a href=\\"RANDOM_005fNUMBER.html#RANDOM_005fNUMBER\\">RANDOM_NUMBER</a> as it implements a superior algorithm.\\n\\n\\n\\n\\n### Syntax\\n`RESULT = RAND(I)`\\n\\n\\n### Arguments\\n\\n     \\n of kind 4.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of `REAL` type and the default kind.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_rand\\n\\n  integer,parameter :: seed = 86456\\n\\n\\n  call srand(seed)\\n\\n  print *, rand(), rand(), rand(), rand()\\n\\n  print *, rand(seed), rand(), rand(), rand()\\n\\nend program test_rand\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nFunction\\n\\n\\n\\n### See also\\n<a href=\\"SRAND.html#SRAND\\">SRAND</a>, <a href=\\"RANDOM_005fNUMBER.html#RANDOM_005fNUMBER\\">RANDOM_NUMBER</a>\\n\\n   "},"SYSTEM_CLOCK":{"doc":"`SYSTEM_CLOCK` — Time function\\n\\n### Description\\nDetermines the `COUNT` of a processor clock since an unspecified\\ntime in the past modulo `COUNT_MAX`, `COUNT_RATE` determines\\nthe number of clock ticks per second.  If the platform supports a\\nmonotonic clock, that clock is used and can, depending on the platform\\nclock implementation, provide up to nanosecond resolution.  If a\\nmonotonic clock is not available, the implementation falls back to a\\nrealtime clock.\\n\\n     \\n`COUNT_RATE` is system dependent and can vary depending on the kind of\\nthe arguments. For `kind=4` arguments (and smaller integer kinds),\\n`COUNT` represents milliseconds, while for `kind=8` arguments (and\\nlarger integer kinds), `COUNT` typically represents micro- or\\nnanoseconds depending on resolution of the underlying platform clock. \\n`COUNT_MAX` usually equals `HUGE(COUNT_MAX)`. Note that the\\nmillisecond resolution of the `kind=4` version implies that the\\n`COUNT` will wrap around in roughly 25 days. In order to avoid issues\\nwith the wrap around and for more precise timing, please use the\\n`kind=8` version.\\n\\n     \\n\\nIf there is no clock, or querying the clock fails, `COUNT` is set\\nto `-HUGE(COUNT)`, and `COUNT_RATE` and `COUNT_MAX` are\\nset to zero.\\n\\n     \\n\\nWhen running on a platform using the GNU C library (glibc) version\\n2.16 or older, or a derivative thereof, the high resolution monotonic\\nclock is available only when linking with the `rt` library.  This\\ncan be done explicitly by adding the `-lrt` flag when linking the\\napplication, but is also done implicitly when using OpenMP.\\n\\n     \\n\\nOn the Windows platform, the version with `kind=4` arguments uses\\nthe `GetTickCount` function, whereas the `kind=8` version\\nuses `QueryPerformanceCounter` and\\n`QueryPerformanceCounterFrequency`. For more information, and\\npotential caveats, please see the platform documentation.\\n\\n\\n\\n\\n### Syntax\\n`CALL SYSTEM_CLOCK([COUNT, COUNT_RATE, COUNT_MAX])`\\n\\n\\n### Arguments\\n\\n     \\n | `COUNT`       | (Optional) shall be a scalar of type\\n`INTEGER` with `INTENT(OUT)`. \\n\\n | `COUNT_RATE`  | (Optional) shall be a scalar of type\\n`INTEGER` or `REAL`, with `INTENT(OUT)`. \\n\\n | `COUNT_MAX`   | (Optional) shall be a scalar of type\\n`INTEGER` with `INTENT(OUT)`.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_system_clock\\n\\n  INTEGER :: count, count_rate, count_max\\n\\n  CALL SYSTEM_CLOCK(count, count_rate, count_max)\\n\\n  WRITE(*,*) count, count_rate, count_max\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\n<a href=\\"DATE_005fAND_005fTIME.html#DATE_005fAND_005fTIME\\">DATE_AND_TIME</a>, <a href=\\"CPU_005fTIME.html#CPU_005fTIME\\">CPU_TIME</a>\\n"},"VERIFY":{"doc":"`VERIFY` — Scan a string for characters not a given set\\n\\n### Description\\nVerifies that all the characters in `STRING` belong to the set of\\ncharacters in `SET`.\\n\\n     \\nIf `BACK` is either absent or equals `FALSE`, this function\\nreturns the position of the leftmost character of `STRING` that is\\nnot in `SET`. If `BACK` equals `TRUE`, the rightmost\\nposition is returned. If all characters of `STRING` are found in\\n`SET`, the result is zero.\\n\\n\\n\\n\\n### Syntax\\n`RESULT = VERIFY(STRING, SET[, BACK [, KIND]])`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `SET`     | Shall be of type `CHARACTER`. \\n\\n | `BACK`    | (Optional) shall be of type `LOGICAL`. \\n\\n | `KIND`    | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of kind `KIND`. If\\n`KIND` is absent, the return value is of default integer kind.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_verify\\n\\n  WRITE(*,*) VERIFY(\\"FORTRAN\\", \\"AO\\")           ! 1, found \'F\'\\n\\n  WRITE(*,*) VERIFY(\\"FORTRAN\\", \\"FOO\\")          ! 3, found \'R\'\\n\\n  WRITE(*,*) VERIFY(\\"FORTRAN\\", \\"C++\\")          ! 1, found \'F\'\\n\\n  WRITE(*,*) VERIFY(\\"FORTRAN\\", \\"C++\\", .TRUE.)  ! 7, found \'N\'\\n\\n  WRITE(*,*) VERIFY(\\"FORTRAN\\", \\"FORTRAN\\")      ! 0\' found none\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later, with `KIND` argument Fortran 2003 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"SCAN.html#SCAN\\">SCAN</a>, <a href=\\"INDEX-intrinsic.html#INDEX-intrinsic\\">INDEX intrinsic</a>\\n"},"LOC":{"doc":"`LOC` — Returns the address of a variable\\n\\n### Description\\n`LOC(X)` returns the address of `X` as an integer.\\n\\n\\n\\n### Syntax\\n`RESULT = LOC(X)`\\n\\n\\n### Arguments\\n\\n     \\n | `X`  | Variable of any type.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER`, with a `KIND`corresponding to the size (in bytes) of a memory address on the target\\nmachine.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_loc\\n\\n  integer :: i\\n\\n  real :: r\\n\\n  i = loc(r)\\n\\n  print *, i\\n\\nend program test_loc\\n\\n```\\n\\n     \\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n"},"LNBLNK":{"doc":"`LNBLNK` — Index of the last non-blank character in a string\\n\\n### Description\\nReturns the length of a character string, ignoring any trailing blanks. \\nThis is identical to the standard `LEN_TRIM` intrinsic, and is only\\nincluded for backwards compatibility.\\n\\n\\n\\n### Syntax\\n`RESULT = LNBLNK(STRING)`\\n\\n\\n### Arguments\\n\\n     \\n,\\nwith `INTENT(IN)`     <br>\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of `INTEGER(kind=4)` type.\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"INDEX-intrinsic.html#INDEX-intrinsic\\">INDEX intrinsic</a>, <a href=\\"LEN_005fTRIM.html#LEN_005fTRIM\\">LEN_TRIM</a>\\n"},"EPSILON":{"doc":"`EPSILON` — Epsilon function\\n\\n### Description\\n`EPSILON(X)` returns the smallest number `E` of the same kind\\nas `X` such that 1 + E > 1.\\n\\n\\n\\n### Syntax\\n`RESULT = EPSILON(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of same type as the argument.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_epsilon\\n\\n    real :: x = 3.143\\n\\n    real(8) :: y = 2.33\\n\\n    print *, EPSILON(x)\\n\\n    print *, EPSILON(y)\\n\\nend program test_epsilon\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n"},"FGET":{"doc":"`FGET` — Read a single character in stream mode from stdin\\n\\n### Description\\nRead a single character in stream mode from stdin by bypassing normal\\nformatted output. Stream I/O should not be mixed with normal record-oriented\\n(formatted or unformatted) I/O on the same unit; the results are unpredictable.\\n\\n     \\nThis intrinsic is provided in both subroutine and function forms; however,\\nonly one form can be used in any given program unit.\\n\\n     \\n\\nNote that the `FGET` intrinsic is provided for backwards compatibility with\\n*g77*.  GNU Fortran provides the Fortran 2003 Stream facility. \\nProgrammers should consider the use of new stream IO feature in new code\\nfor future portability. See also <a href=\\"Fortran-2003-status.html#Fortran-2003-status\\">Fortran 2003 status</a>.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `STATUS = FGET(C)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n and of default\\nkind. \\n\\n | `STATUS`  | (Optional) status flag of type `INTEGER`. \\nReturns 0 on success, -1 on end-of-file, and a system specific positive\\nerror code otherwise.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_fget\\n\\n  INTEGER, PARAMETER :: strlen = 100\\n\\n  INTEGER :: status, i = 1\\n\\n  CHARACTER(len=strlen) :: str = \\"\\"\\n\\n\\n  WRITE (*,*) \'Enter text:\'\\n\\n  DO\\n\\n    CALL fget(str(i:i), status)\\n\\n    if (status /= 0 .OR. i > strlen) exit\\n\\n    i = i + 1\\n\\n  END DO\\n\\n  WRITE (*,*) TRIM(str)\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n\\n### See also\\n<a href=\\"FGETC.html#FGETC\\">FGETC</a>, <a href=\\"FPUT.html#FPUT\\">FPUT</a>, <a href=\\"FPUTC.html#FPUTC\\">FPUTC</a>\\n"},"LGT":{"doc":"`LGT` — Lexical greater than\\n\\n### Description\\nDetermines whether one string is lexically greater than another string,\\nwhere the two strings are interpreted as containing ASCII character\\ncodes.  If the String A and String B are not the same length, the\\nshorter is compared as if spaces were appended to it to form a value\\nthat has the same length as the longer.\\n\\n     \\nIn general, the lexical comparison intrinsics `LGE`, `LGT`,\\n`LLE`, and `LLT` differ from the corresponding intrinsic\\noperators `.GE.`, `.GT.`, `.LE.`, and `.LT.`, in\\nthat the latter use the processor\'s character ordering (which is not\\nASCII on some targets), whereas the former always use the ASCII\\nordering.\\n\\n\\n\\n\\n### Syntax\\n`RESULT = LGT(STRING_A, STRING_B)`\\n\\n\\n### Arguments\\n\\n     \\n type. \\n\\n | `STRING_B`  | Shall be of default `CHARACTER` type.\\n\\n\\n\\n\\n\\n\\n### Return value\\nReturns `.TRUE.` if `STRING_A > STRING_B`, and `.FALSE.`otherwise, based on the ASCII ordering.\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name                            | Argument           | Return type        | Standard\\n\\n | `LGT(STRING_A, STRING_B)`  | `CHARACTER`   | `LOGICAL`     | Fortran 77 and later\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"LGE.html#LGE\\">LGE</a>, <a href=\\"LLE.html#LLE\\">LLE</a>, <a href=\\"LLT.html#LLT\\">LLT</a>\\n"},"NEAREST":{"doc":"`NEAREST` — Nearest representable number\\n\\n### Description\\n`NEAREST(X, S)` returns the processor-representable number nearest\\nto `X` in the direction indicated by the sign of `S`.\\n\\n\\n\\n### Syntax\\n`RESULT = NEAREST(X, S)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `S`  | Shall be of type `REAL` and\\nnot equal to zero.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of the same type as `X`. If `S` is\\npositive, `NEAREST` returns the processor-representable number\\ngreater than `X` and nearest to it. If `S` is negative,\\n`NEAREST` returns the processor-representable number smaller than\\n`X` and nearest to it.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_nearest\\n\\n  real :: x, y\\n\\n  x = nearest(42.0, 1.0)\\n\\n  y = nearest(42.0, -1.0)\\n\\n  write (*,\\"(3(G20.15))\\") x, y, x - y\\n\\nend program test_nearest\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"RAN":{"doc":"`RAN` — Real pseudo-random number\\n\\n### Description\\nFor compatibility with HP FORTRAN 77/iX, the `RAN` intrinsic is\\nprovided as an alias for `RAND`.  See <a href=\\"RAND.html#RAND\\">RAND</a> for complete\\ndocumentation.\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nFunction\\n\\n\\n\\n### See also\\n<a href=\\"RAND.html#RAND\\">RAND</a>, <a href=\\"RANDOM_005fNUMBER.html#RANDOM_005fNUMBER\\">RANDOM_NUMBER</a>\\n"},"ASSOCIATED":{"doc":"`ASSOCIATED` — Status of a pointer or pointer/target pair\\n\\n### Description\\n`ASSOCIATED(POINTER [, TARGET])` determines the status of the pointer\\n`POINTER` or if `POINTER` is associated with the target `TARGET`.\\n\\n\\n\\n### Syntax\\n`RESULT = ASSOCIATED(POINTER [, TARGET])`\\n\\n\\n### Arguments\\n\\n     \\n attribute\\nand it can be of any type. \\n\\n | `TARGET`  | (Optional) `TARGET` shall be a pointer or\\na target.  It must have the same type, kind type parameter, and\\narray rank as `POINTER`.\\n\\n\\nThe association status of neither `POINTER` nor `TARGET` shall be\\nundefined.\\n\\n\\n\\n\\n### Return value\\n`ASSOCIATED(POINTER)` returns a scalar value of type `LOGICAL(4)`. \\nThere are several cases:\\n          <dl>\\n**(A) When the optional `TARGET` is not present then** `ASSOCIATED(POINTER)` is true if `POINTER` is associated with a target; otherwise, it returns false. \\n\\n**(B) If `TARGET` is present and a scalar target, the result is true if** `TARGET` is not a zero-sized storage sequence and the target associated with `POINTER` occupies the same storage units.  If `POINTER` is\\ndisassociated, the result is false. \\n\\n**(C) If `TARGET` is present and an array target, the result is true if** `TARGET` and `POINTER` have the same shape, are not zero-sized arrays,\\nare arrays whose elements are not zero-sized storage sequences, and\\n`TARGET` and `POINTER` occupy the same storage units in array element\\norder. \\nAs in case(B), the result is false, if `POINTER` is disassociated. \\n\\n**(D) If `TARGET` is present and an scalar pointer, the result is true** if `TARGET` is associated with `POINTER`, the target associated with\\n`TARGET` are not zero-sized storage sequences and occupy the same storage\\nunits. \\nThe result is false, if either `TARGET` or `POINTER` is disassociated. \\n\\n**(E) If `TARGET` is present and an array pointer, the result is true if** target associated with `POINTER` and the target associated with `TARGET`\\nhave the same shape, are not zero-sized arrays, are arrays whose elements are\\nnot zero-sized storage sequences, and `TARGET` and `POINTER` occupy\\nthe same storage units in array element order. \\nThe result is false, if either `TARGET` or `POINTER` is disassociated. \\n\\n</dl>\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_associated\\n\\n   implicit none\\n\\n   real, target  :: tgt(2) = (/1., 2./)\\n\\n   real, pointer :: ptr(:)\\n\\n   ptr => tgt\\n\\n   if (associated(ptr)     .eqv. .false.) call abort\\n\\n   if (associated(ptr,tgt) .eqv. .false.) call abort\\n\\nend program test_associated\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n\\n### See also\\n<a href=\\"NULL.html#NULL\\">NULL</a>\\n"},"ASIN":{"doc":"`ASIN` — Arcsine function\\n\\n### Description\\n`ASIN(X)` computes the arcsine of its `X` (inverse of `SIN(X)`).\\n\\n\\n\\n### Syntax\\n`RESULT = ASIN(X)`\\n\\n\\n### Arguments\\n\\n     \\n and a magnitude that is\\nless than or equal to one - or be `COMPLEX`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of the same type and kind as `X`. \\nThe real part of the result is in radians and lies in the range\\n-\\\\pi/2 \\\\leq \\\\Re \\\\asin(x) \\\\leq \\\\pi/2.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_asin\\n\\n  real(8) :: x = 0.866_8\\n\\n  x = asin(x)\\n\\nend program test_asin\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name             | Argument           | Return type        | Standard\\n\\n | `ASIN(X)`   | `REAL(4) X`   | `REAL(4)`     | Fortran 77 and later\\n\\n | `DASIN(X)`  | `REAL(8) X`   | `REAL(8)`     | Fortran 77 and later\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later, for a complex argument Fortran 2008 or later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\nInverse function: <a href=\\"SIN.html#SIN\\">SIN</a>\\n\\n   "},"SECOND":{"doc":"`SECOND` — CPU time function\\n\\n### Description\\nReturns a `REAL(4)` value representing the elapsed CPU time in\\nseconds.  This provides the same functionality as the standard\\n`CPU_TIME` intrinsic, and is only included for backwards\\ncompatibility.\\n\\n     \\nThis intrinsic is provided in both subroutine and function forms;\\nhowever, only one form can be used in any given program unit.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `TIME = SECOND()`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nIn either syntax, `TIME` is set to the process\'s current runtime in\\nseconds.\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n\\n### See also\\n<a href=\\"CPU_005fTIME.html#CPU_005fTIME\\">CPU_TIME</a>\\n\\n   "},"NORM2":{"doc":"`NORM2` — Euclidean vector norms\\n\\n### Description\\nCalculates the Euclidean vector norm (L_2 norm) of\\nof `ARRAY` along dimension `DIM`.\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n\\n\\n | `DIM`    | (Optional) shall be a scalar of type\\n`INTEGER` with a value in the range from 1 to n, where n\\nequals the rank of `ARRAY`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe result is of the same type as `ARRAY`.\\n\\n     \\nIf `DIM` is absent, a scalar with the square root of the sum of all\\nelements in `ARRAY` squared  is returned. Otherwise, an array of\\nrank n-1, where n equals the rank of `ARRAY`, and a\\nshape similar to that of `ARRAY` with dimension `DIM` dropped\\nis returned.\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_sum\\n\\n  REAL :: x(5) = [ real :: 1, 2, 3, 4, 5 ]\\n\\n  print *, NORM2(x)  ! = sqrt(55.) ~ 7.416\\n\\nEND PROGRAM\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n"},"ICHAR":{"doc":"`ICHAR` — Character-to-integer conversion function\\n\\n### Description\\n`ICHAR(C)` returns the code for the character in the first character\\nposition of `C` in the system\'s native character set. \\nThe correspondence between characters and their codes is not necessarily\\nthe same across different GNU Fortran implementations.\\n\\n\\n\\n### Syntax\\n`RESULT = ICHAR(C [, KIND])`\\n\\n\\n### Arguments\\n\\n     \\n\\n\\n | `KIND`  | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of kind `KIND`. If\\n`KIND` is absent, the return value is of default integer kind.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_ichar\\n\\n  integer i\\n\\n  i = ichar(\' \')\\n\\nend program test_ichar\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name              | Argument              | Return type        | Standard\\n\\n | `ICHAR(C)`   | `CHARACTER C`    | `INTEGER(4)`     | Fortran 77 and later\\n\\n\\n\\n\\n\\n\\n### Notes\\nNo intrinsic exists to convert between a numeric value and a formatted\\ncharacter string representation – for instance, given the\\n`CHARACTER` value `\'154\'`, obtaining an `INTEGER` or\\n`REAL` value with the value 154, or vice versa. Instead, this\\nfunctionality is provided by internal-file I/O, as in the following\\nexample:\\n     <pre class=\\"smallexample\\">          program read_val\\n            integer value\\n            character(len=10) string, string2\\n            string = \'154\'\\n          \\n            ! Convert a string to a numeric value\\n            read (string,\'(I10)\') value\\n            print *, value\\n          \\n            ! Convert a value to a formatted string\\n            write (string2,\'(I10)\') value\\n            print *, string2\\n          end program read_val\\n</pre>\\n\\n\\n### Standard\\nFortran 95 and later, with `KIND` argument Fortran 2003 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"ACHAR.html#ACHAR\\">ACHAR</a>, <a href=\\"CHAR.html#CHAR\\">CHAR</a>, <a href=\\"IACHAR.html#IACHAR\\">IACHAR</a>\\n\\n   "},"ANINT":{"doc":"`ANINT` — Nearest whole number\\n\\n### Description\\n`ANINT(A [, KIND])` rounds its argument to the nearest whole number.\\n\\n\\n\\n### Syntax\\n`RESULT = ANINT(A [, KIND])`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `KIND`  | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type real with the kind type parameter of the\\nargument if the optional `KIND` is absent; otherwise, the kind\\ntype parameter will be given by `KIND`.  If `A` is greater than\\nzero, `ANINT(A)` returns `AINT(X+0.5)`.  If `A` is\\nless than or equal to zero then it returns `AINT(X-0.5)`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_anint\\n\\n  real(4) x4\\n\\n  real(8) x8\\n\\n  x4 = 1.234E0_4\\n\\n  x8 = 4.321_8\\n\\n  print *, anint(x4), dnint(x8)\\n\\n  x8 = anint(x4,8)\\n\\nend program test_anint\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name             | Argument          | Return type       | Standard\\n\\n | `AINT(A)`   | `REAL(4) A`  | `REAL(4)`    | Fortran 77 and later\\n\\n | `DNINT(A)`  | `REAL(8) A`  | `REAL(8)`    | Fortran 77 and later\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"ISNAN":{"doc":"`ISNAN` — Test for a NaN\\n\\n### Description\\n`ISNAN` tests whether a floating-point value is an IEEE\\nNot-a-Number (NaN). \\n\\n\\n### Syntax\\n`ISNAN(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n\\n### Return value\\nReturns a default-kind `LOGICAL`. The returned value is `TRUE`if `X` is a NaN and `FALSE` otherwise.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_nan\\n\\n  implicit none\\n\\n  real :: x\\n\\n  x = -1.0\\n\\n  x = sqrt(x)\\n\\n  if (isnan(x)) stop \'\\"x\\" is a NaN\'\\n\\nend program test_nan\\n\\n```\\n\\n     \\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"FSEEK":{"doc":"`FSEEK` — Low level file positioning subroutine\\n\\n### Description\\nMoves `UNIT` to the specified `OFFSET`. If `WHENCE`\\nis set to 0, the `OFFSET` is taken as an absolute value `SEEK_SET`,\\nif set to 1, `OFFSET` is taken to be relative to the current position\\n`SEEK_CUR`, and if set to 2 relative to the end of the file `SEEK_END`. \\nOn error, `STATUS` is set to a nonzero value. If `STATUS` the seek\\nfails silently.\\n\\n     \\nThis intrinsic routine is not fully backwards compatible with *g77*. \\nIn *g77*, the `FSEEK` takes a statement label instead of a\\n`STATUS` variable. If FSEEK is used in old code, change\\n     \\n<pre class=\\"smallexample\\">            CALL FSEEK(UNIT, OFFSET, WHENCE, *label)\\n</pre>\\n     \\nto\\n     \\n<pre class=\\"smallexample\\">            INTEGER :: status\\n            CALL FSEEK(UNIT, OFFSET, WHENCE, status)\\n            IF (status /= 0) GOTO label\\n</pre>\\n     \\nPlease note that GNU Fortran provides the Fortran 2003 Stream facility. \\nProgrammers should consider the use of new stream IO feature in new code\\nfor future portability. See also <a href=\\"Fortran-2003-status.html#Fortran-2003-status\\">Fortran 2003 status</a>.\\n\\n\\n\\n\\n### Syntax\\n`CALL FSEEK(UNIT, OFFSET, WHENCE[, STATUS])`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `OFFSET`  | Shall be a scalar of type `INTEGER`. \\n\\n | `WHENCE`  | Shall be a scalar of type `INTEGER`. \\nIts value shall be either 0, 1 or 2. \\n\\n | `STATUS`  | (Optional) shall be a scalar of type\\n`INTEGER(4)`.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_fseek\\n\\n  INTEGER, PARAMETER :: SEEK_SET = 0, SEEK_CUR = 1, SEEK_END = 2\\n\\n  INTEGER :: fd, offset, ierr\\n\\n\\n  ierr   = 0\\n\\n  offset = 5\\n\\n  fd     = 10\\n\\n\\n  OPEN(UNIT=fd, FILE=\\"fseek.test\\")\\n\\n  CALL FSEEK(fd, offset, SEEK_SET, ierr)  ! move to OFFSET\\n\\n  print *, FTELL(fd), ierr\\n\\n\\n  CALL FSEEK(fd, 0, SEEK_END, ierr)       ! move to end\\n\\n  print *, FTELL(fd), ierr\\n\\n\\n  CALL FSEEK(fd, 0, SEEK_SET, ierr)       ! move to beginning\\n\\n  print *, FTELL(fd), ierr\\n\\n\\n  CLOSE(UNIT=fd)\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\n<a href=\\"FTELL.html#FTELL\\">FTELL</a>\\n"},"UNLINK":{"doc":"`UNLINK` — Remove a file from the file system\\n\\n### Description\\nUnlinks the file `PATH`. A null character (`CHAR(0)`) can be\\nused to mark the end of the name in `PATH`; otherwise, trailing\\nblanks in the file name are ignored.  If the `STATUS` argument is\\nsupplied, it contains 0 on success or a nonzero error code upon return;\\nsee `unlink(2)`.\\n\\n     \\nThis intrinsic is provided in both subroutine and function forms;\\nhowever, only one form can be used in any given program unit.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `STATUS = UNLINK(PATH)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n type. \\n\\n | `STATUS`  | (Optional) Shall be of default `INTEGER` type.\\n\\n\\n\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n\\n### See also\\n<a href=\\"LINK.html#LINK\\">LINK</a>, <a href=\\"SYMLNK.html#SYMLNK\\">SYMLNK</a>\\n"},"LEADZ":{"doc":"`LEADZ` — Number of leading zero bits of an integer\\n\\n### Description\\n`LEADZ` returns the number of leading zero bits of an integer.\\n\\n\\n\\n### Syntax\\n`RESULT = LEADZ(I)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe type of the return value is the default `INTEGER`. \\nIf all the bits of `I` are zero, the result value is `BIT_SIZE(I)`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_leadz\\n\\n  WRITE (*,*) BIT_SIZE(1)  ! prints 32\\n\\n  WRITE (*,*) LEADZ(1)     ! prints 31\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"BIT_005fSIZE.html#BIT_005fSIZE\\">BIT_SIZE</a>, <a href=\\"TRAILZ.html#TRAILZ\\">TRAILZ</a>, <a href=\\"POPCNT.html#POPCNT\\">POPCNT</a>, <a href=\\"POPPAR.html#POPPAR\\">POPPAR</a>\\n"},"ACCESS":{"doc":"`ACCESS` — Checks file access modes\\n\\n### Description\\n`ACCESS(NAME, MODE)` checks whether the file `NAME`\\nexists, is readable, writable or executable. Except for the\\nexecutable check, `ACCESS` can be replaced by\\nFortran 95\'s `INQUIRE`.\\n\\n\\n\\n### Syntax\\n`RESULT = ACCESS(NAME, MODE)`\\n\\n\\n### Arguments\\n\\n     \\n of default kind with the\\nfile name. Tailing blank are ignored unless the character `achar(0)`is present, then all characters up to and excluding `achar(0)` are\\nused as file name. \\n\\n | `MODE`  | Scalar `CHARACTER` of default kind with the\\nfile access mode, may be any concatenation of `\\"r\\"` (readable),\\n`\\"w\\"` (writable) and `\\"x\\"` (executable), or `\\" \\"` to check\\nfor existence.\\n\\n\\n\\n\\n\\n\\n### Return value\\nReturns a scalar `INTEGER`, which is `0` if the file is\\naccessible in the given mode; otherwise or if an invalid argument\\nhas been given for `MODE` the value `1` is returned.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram access_test\\n\\n  implicit none\\n\\n  character(len=*), parameter :: file  = \'test.dat\'\\n\\n  character(len=*), parameter :: file2 = \'test.dat  \'//achar(0)\\n\\n  if(access(file,\' \') == 0) print *, trim(file),\' is exists\'\\n\\n  if(access(file,\'r\') == 0) print *, trim(file),\' is readable\'\\n\\n  if(access(file,\'w\') == 0) print *, trim(file),\' is writable\'\\n\\n  if(access(file,\'x\') == 0) print *, trim(file),\' is executable\'\\n\\n  if(access(file2,\'rwx\') == 0) &\\n\\n    print *, trim(file2),\' is readable, writable and executable\'\\n\\nend program access_test\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n\\n### See also\\n\\n"},"CONJG":{"doc":"`CONJG` — Complex conjugate function\\n\\n### Description\\n`CONJG(Z)` returns the conjugate of `Z`.  If `Z` is `(x, y)`then the result is `(x, -y)`\\n\\n\\n### Syntax\\n`Z = CONJG(Z)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `COMPLEX`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_conjg\\n\\n    complex :: z = (2.0, 3.0)\\n\\n    complex(8) :: dz = (2.71_8, -3.14_8)\\n\\n    z= conjg(z)\\n\\n    print *, z\\n\\n    dz = dconjg(dz)\\n\\n    print *, dz\\n\\nend program test_conjg\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name              | Argument              | Return type        | Standard\\n\\n | `CONJG(Z)`   | `COMPLEX Z`      | `COMPLEX`     | GNU extension\\n\\n | `DCONJG(Z)`  | `COMPLEX(8) Z`   | `COMPLEX(8)`  | GNU extension\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later, has overloads that are GNU extensions\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"ATOMIC_REF":{"doc":"`ATOMIC_REF` — Obtaining the value of a variable atomically\\n\\n### Description\\n`ATOMIC_DEFINE(ATOM, VALUE)` atomically assigns the value of the\\nvariable `ATOM` to `VALUE`. When `STAT` is present and the\\ninvokation was successful, it is assigned the value 0. If it is present and the\\ninvokation has failed, it is assigned a positive value; in particular, for a\\ncoindexed `ATOM`, if the remote image has stopped, it is assigned the value\\nof `ISO_FORTRAN_ENV`\'s `STAT_STOPPED_IMAGE` and if the remote image\\nhas failed, the value `STAT_FAILED_IMAGE`.\\n\\n\\n\\n### Syntax\\n`CALL ATOMIC_REF(VALUE, ATOM [, STAT])`\\n\\n\\n### Arguments\\n\\n     \\n | `VALUE`   | Scalar of the same type as `ATOM`. If the kind\\nis different, the value is converted to the kind of `ATOM`. \\n\\n | `ATOM`    | Scalar coarray or coindexed variable of either integer\\ntype with `ATOMIC_INT_KIND` kind or logical type with\\n`ATOMIC_LOGICAL_KIND` kind. \\n\\n | `STAT`    | (optional) Scalar default-kind integer variable.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram atomic\\n\\n  use iso_fortran_env\\n\\n  logical(atomic_logical_kind) :: atom[*]\\n\\n  logical :: val\\n\\n  call atomic_ref (atom, .false.)\\n\\n  ! ...\\n\\n  call atomic_ref (atom, val)\\n\\n  if (val) then\\n\\n    print *, \\"Obtained\\"\\n\\n  end if\\n\\nend program atomic\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 2008 and later; with `STAT`, TS 18508 or later\\n\\n\\n\\n### Class\\nAtomic subroutine\\n\\n\\n\\n### See also\\n<a href=\\"ATOMIC_005fDEFINE.html#ATOMIC_005fDEFINE\\">ATOMIC_DEFINE</a>, <a href=\\"ATOMIC_005fCAS.html#ATOMIC_005fCAS\\">ATOMIC_CAS</a>, <a href=\\"ISO_005fFORTRAN_005fENV.html#ISO_005fFORTRAN_005fENV\\">ISO_FORTRAN_ENV</a>,\\n<a href=\\"ATOMIC_005fFETCH_005fADD.html#ATOMIC_005fFETCH_005fADD\\">ATOMIC_FETCH_ADD</a>, <a href=\\"ATOMIC_005fFETCH_005fAND.html#ATOMIC_005fFETCH_005fAND\\">ATOMIC_FETCH_AND</a>, <a href=\\"ATOMIC_005fFETCH_005fOR.html#ATOMIC_005fFETCH_005fOR\\">ATOMIC_FETCH_OR</a>,\\n<a href=\\"ATOMIC_005fFETCH_005fXOR.html#ATOMIC_005fFETCH_005fXOR\\">ATOMIC_FETCH_XOR</a>\\n"},"GETENV":{"doc":"`GETENV` — Get an environmental variable\\n\\n### Description\\nGet the `VALUE` of the environmental variable `NAME`.\\n\\n     \\nThis intrinsic routine is provided for backwards compatibility with\\nGNU Fortran 77.  In new code, programmers should consider the use of\\nthe <a href=\\"GET_005fENVIRONMENT_005fVARIABLE.html#GET_005fENVIRONMENT_005fVARIABLE\\">GET_ENVIRONMENT_VARIABLE</a> intrinsic defined by the Fortran\\n2003 standard.\\n\\n     \\n\\nNote that `GETENV` need not be thread-safe. It is the\\nresponsibility of the user to ensure that the environment is not being\\nupdated concurrently with a call to the `GETENV` intrinsic.\\n\\n\\n\\n\\n### Syntax\\n`CALL GETENV(NAME, VALUE)`\\n\\n\\n### Arguments\\n\\n     \\n and of default kind. \\n\\n | `VALUE`  | Shall be of type `CHARACTER` and of default kind.\\n\\n\\n\\n\\n\\n\\n### Return value\\nStores the value of `NAME` in `VALUE`. If `VALUE` is\\nnot large enough to hold the data, it is truncated. If `NAME`\\nis not set, `VALUE` will be filled with blanks.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_getenv\\n\\n  CHARACTER(len=255) :: homedir\\n\\n  CALL getenv(\\"HOME\\", homedir)\\n\\n  WRITE (*,*) TRIM(homedir)\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\n<a href=\\"GET_005fENVIRONMENT_005fVARIABLE.html#GET_005fENVIRONMENT_005fVARIABLE\\">GET_ENVIRONMENT_VARIABLE</a>\\n"},"ISHFTC":{"doc":"`ISHFTC` — Shift bits circularly\\n\\n### Description\\n`ISHFTC` returns a value corresponding to `I` with the\\nrightmost `SIZE` bits shifted circularly `SHIFT` places; that\\nis, bits shifted out one end are shifted into the opposite end.  A value\\nof `SHIFT` greater than zero corresponds to a left shift, a value of\\nzero corresponds to no shift, and a value less than zero corresponds to\\na right shift.  The absolute value of `SHIFT` must be less than\\n`SIZE`.  If the `SIZE` argument is omitted, it is taken to be\\nequivalent to `BIT_SIZE(I)`.\\n\\n\\n\\n### Syntax\\n`RESULT = ISHFTC(I, SHIFT [, SIZE])`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `SHIFT`  | The type shall be `INTEGER`. \\n\\n | `SIZE`  | (Optional) The type shall be `INTEGER`;\\nthe value must be greater than zero and less than or equal to\\n`BIT_SIZE(I)`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of the same kind as\\n`I`.\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"ISHFT.html#ISHFT\\">ISHFT</a>\\n"},"SPACING":{"doc":"`SPACING` — Smallest distance between two numbers of a given type\\n\\n### Description\\nDetermines the distance between the argument `X` and the nearest\\nadjacent number of the same type.\\n\\n\\n\\n### Syntax\\n`RESULT = SPACING(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe result is of the same type as the input argument `X`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_spacing\\n\\n  INTEGER, PARAMETER :: SGL = SELECTED_REAL_KIND(p=6, r=37)\\n\\n  INTEGER, PARAMETER :: DBL = SELECTED_REAL_KIND(p=13, r=200)\\n\\n\\n  WRITE(*,*) spacing(1.0_SGL)      ! \\"1.1920929E-07\\"          on i686\\n\\n  WRITE(*,*) spacing(1.0_DBL)      ! \\"2.220446049250313E-016\\" on i686\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"RRSPACING.html#RRSPACING\\">RRSPACING</a>\\n"},"RANDOM_INIT":{"doc":"`RANDOM_INIT` — Initialize a pseudo-random number generator\\n\\n### Description\\nInitializes the state of the pseudorandom number generator used by RANDOM_NUMBER.\\n### Standard\\nFortran 2018\\n### Class\\nSubroutine\\n### Syntax\\nCALL RANDOM_INIT(REPEATABLE, IMAGE_DISTINCT)\\n### Arguments\\n- REPEATABLE: Shall be a scalar with a LOGICAL type, and it is INTENT(IN). If it is .true., the seed is set to a processor-dependent value that is the same each time RANDOM_INIT is called from the same image. The term “same image” means a single instance of program execution. The sequence of random numbers is different for repeated execution of the program. If it is .false., the seed is set to a processor-dependent value.\\n- IMAGE_DISTINCT: Shall be a scalar with a LOGICAL type, and it is INTENT(IN). If it is .true., the seed is set to a processor-dependent value that is distinct from th seed set by a call to RANDOM_INIT in another image. If it is .false., the seed is set value that does depend which image called RANDOM_INIT.\\n"},"C_F_PROCPOINTER":{"doc":"`C_F_PROCPOINTER` — Convert C into Fortran procedure pointer\\n\\n### Description\\n`C_F_PROCPOINTER(CPTR, FPTR)` Assign the target of the C function pointer\\n`CPTR` to the Fortran procedure pointer `FPTR`.\\n\\n\\n\\n### Syntax\\n`CALL C_F_PROCPOINTER(cptr, fptr)`\\n\\n\\n### Arguments\\n\\n     \\n. It is\\n`INTENT(IN)`. \\n\\n | `FPTR`   | procedure pointer interoperable with `cptr`. It is\\n`INTENT(OUT)`.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram main\\n\\n  use iso_c_binding\\n\\n  implicit none\\n\\n  abstract interface\\n\\n    function func(a)\\n\\n      import :: c_float\\n\\n      real(c_float), intent(in) :: a\\n\\n      real(c_float) :: func\\n\\n    end function\\n\\n  end interface\\n\\n  interface\\n\\n     function getIterFunc() bind(c,name=\\"getIterFunc\\")\\n\\n       import :: c_funptr\\n\\n       type(c_funptr) :: getIterFunc\\n\\n     end function\\n\\n  end interface\\n\\n  type(c_funptr) :: cfunptr\\n\\n  procedure(func), pointer :: myFunc\\n\\n  cfunptr = getIterFunc()\\n\\n  call c_f_procpointer(cfunptr, myFunc)\\n\\nend program main\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 2003 and later\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\n<a href=\\"C_005fLOC.html#C_005fLOC\\">C_LOC</a>, <a href=\\"C_005fF_005fPOINTER.html#C_005fF_005fPOINTER\\">C_F_POINTER</a>\\n"},"RENAME":{"doc":"`RENAME` — Rename a file\\n\\n### Description\\nRenames a file from file `PATH1` to `PATH2`. A null\\ncharacter (`CHAR(0)`) can be used to mark the end of the names in\\n`PATH1` and `PATH2`; otherwise, trailing blanks in the file\\nnames are ignored.  If the `STATUS` argument is supplied, it\\ncontains 0 on success or a nonzero error code upon return; see\\n`rename(2)`.\\n\\n     \\nThis intrinsic is provided in both subroutine and function forms;\\nhowever, only one form can be used in any given program unit.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `STATUS = RENAME(PATH1, PATH2)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n type. \\n\\n | `PATH2`  | Shall be of default `CHARACTER` type. \\n\\n | `STATUS`  | (Optional) Shall be of default `INTEGER` type.\\n\\n\\n\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n\\n### See also\\n<a href=\\"LINK.html#LINK\\">LINK</a>\\n\\n   "},"LBOUND":{"doc":"`LBOUND` — Lower dimension bounds of an array\\n\\n### Description\\nReturns the lower bounds of an array, or a single lower bound\\nalong the `DIM` dimension. \\n\\n\\n### Syntax\\n`RESULT = LBOUND(ARRAY [, DIM [, KIND]])`\\n\\n\\n### Arguments\\n\\n     \\n | `ARRAY`  | Shall be an array, of any type. \\n\\n | `DIM`  | (Optional) Shall be a scalar `INTEGER`. \\n\\n | `KIND`  | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of kind `KIND`. If\\n`KIND` is absent, the return value is of default integer kind. \\nIf `DIM` is absent, the result is an array of the lower bounds of\\n`ARRAY`.  If `DIM` is present, the result is a scalar\\ncorresponding to the lower bound of the array along that dimension.  If\\n`ARRAY` is an expression rather than a whole array or array\\nstructure component, or if it has a zero extent along the relevant\\ndimension, the lower bound is taken to be 1.\\n\\n\\n\\n### Standard\\nFortran 95 and later, with `KIND` argument Fortran 2003 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n\\n### See also\\n<a href=\\"UBOUND.html#UBOUND\\">UBOUND</a>, <a href=\\"LCOBOUND.html#LCOBOUND\\">LCOBOUND</a>\\n"},"PRECISION":{"doc":"`PRECISION` — Decimal precision of a real kind\\n\\n### Description\\n`PRECISION(X)` returns the decimal precision in the model of the\\ntype of `X`.\\n\\n\\n\\n### Syntax\\n`RESULT = PRECISION(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of the default integer\\nkind.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram prec_and_range\\n\\n  real(kind=4) :: x(2)\\n\\n  complex(kind=8) :: y\\n\\n\\n  print *, precision(x), range(x)\\n\\n  print *, precision(y), range(y)\\n\\nend program prec_and_range\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n\\n### See also\\n<a href=\\"SELECTED_005fREAL_005fKIND.html#SELECTED_005fREAL_005fKIND\\">SELECTED_REAL_KIND</a>, <a href=\\"RANGE.html#RANGE\\">RANGE</a>\\n\\n\\n"},"IARGC":{"doc":"`IARGC` — Get the number of command line arguments\\n\\n### Description\\n`IARGC` returns the number of arguments passed on the\\ncommand line when the containing program was invoked.\\n\\n     \\nThis intrinsic routine is provided for backwards compatibility with\\nGNU Fortran 77.  In new code, programmers should consider the use of\\nthe <a href=\\"COMMAND_005fARGUMENT_005fCOUNT.html#COMMAND_005fARGUMENT_005fCOUNT\\">COMMAND_ARGUMENT_COUNT</a> intrinsic defined by the Fortran 2003\\nstandard.\\n\\n\\n\\n\\n### Syntax\\n`RESULT = IARGC()`\\n\\n\\n### Arguments\\nNone.\\n\\n\\n\\n### Return value\\nThe number of command line arguments, type `INTEGER(4)`.\\n\\n\\n\\n### Example\\nSee <a href=\\"GETARG.html#GETARG\\">GETARG</a>\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nFunction\\n\\n\\n\\n### See also\\nGNU Fortran 77 compatibility subroutine: <a href=\\"GETARG.html#GETARG\\">GETARG</a>\\n\\n     \\nFortran 2003 functions and subroutines: <a href=\\"GET_005fCOMMAND.html#GET_005fCOMMAND\\">GET_COMMAND</a>,\\n<a href=\\"GET_005fCOMMAND_005fARGUMENT.html#GET_005fCOMMAND_005fARGUMENT\\">GET_COMMAND_ARGUMENT</a>, <a href=\\"COMMAND_005fARGUMENT_005fCOUNT.html#COMMAND_005fARGUMENT_005fCOUNT\\">COMMAND_ARGUMENT_COUNT</a>\\n\\n"},"EXP":{"doc":"`EXP` — Exponential function\\n\\n### Description\\n`EXP(X)` computes the base e exponential of `X`.\\n\\n\\n\\n### Syntax\\n`RESULT = EXP(X)`\\n\\n\\n### Arguments\\n\\n     \\n or\\n`COMPLEX`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value has same type and kind as `X`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_exp\\n\\n  real :: x = 1.0\\n\\n  x = exp(x)\\n\\nend program test_exp\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name             | Argument              | Return type          | Standard\\n\\n | `EXP(X)`    | `REAL(4) X`      | `REAL(4)`       | Fortran 77 and later\\n\\n | `DEXP(X)`   | `REAL(8) X`      | `REAL(8)`       | Fortran 77 and later\\n\\n | `CEXP(X)`   | `COMPLEX(4) X`   | `COMPLEX(4)`    | Fortran 77 and later\\n\\n | `ZEXP(X)`   | `COMPLEX(8) X`   | `COMPLEX(8)`    | GNU extension\\n\\n | `CDEXP(X)`  | `COMPLEX(8) X`   | `COMPLEX(8)`    | GNU extension\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later, has overloads that are GNU extensions\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"DATE_AND_TIME":{"doc":"`DATE_AND_TIME` — Date and time subroutine\\n\\n### Description\\n`DATE_AND_TIME(DATE, TIME, ZONE, VALUES)` gets the corresponding date and\\ntime information from the real-time system clock.  `DATE` is\\n`INTENT(OUT)` and has form ccyymmdd.  `TIME` is `INTENT(OUT)` and\\nhas form hhmmss.sss.  `ZONE` is `INTENT(OUT)` and has form (+-)hhmm,\\nrepresenting the difference with respect to Coordinated Universal Time (UTC). \\nUnavailable time and date parameters return blanks.\\n\\n     \\n`VALUES` is `INTENT(OUT)` and provides the following:\\n\\n     \\n\\n:  | The year\\n\\n | </td><td valign=\\"top\\" width=\\"30%\\">`VALUE(2)`:  | The month\\n\\n | </td><td valign=\\"top\\" width=\\"30%\\">`VALUE(3)`:  | The day of the month\\n\\n | </td><td valign=\\"top\\" width=\\"30%\\">`VALUE(4)`:  | Time difference with UTC in minutes\\n\\n | </td><td valign=\\"top\\" width=\\"30%\\">`VALUE(5)`:  | The hour of the day\\n\\n | </td><td valign=\\"top\\" width=\\"30%\\">`VALUE(6)`:  | The minutes of the hour\\n\\n | </td><td valign=\\"top\\" width=\\"30%\\">`VALUE(7)`:  | The seconds of the minute\\n\\n | </td><td valign=\\"top\\" width=\\"30%\\">`VALUE(8)`:  | The milliseconds of the second\\n\\n\\n\\n\\n\\n\\n### Syntax\\n`CALL DATE_AND_TIME([DATE, TIME, ZONE, VALUES])`\\n\\n\\n### Arguments\\n\\n     \\n\\nor larger, and of default kind. \\n\\n | `TIME`   | (Optional) The type shall be `CHARACTER(LEN=10)`or larger, and of default kind. \\n\\n | `ZONE`   | (Optional) The type shall be `CHARACTER(LEN=5)`or larger, and of default kind. \\n\\n | `VALUES` | (Optional) The type shall be `INTEGER(8)`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nNone\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_time_and_date\\n\\n    character(8)  :: date\\n\\n    character(10) :: time\\n\\n    character(5)  :: zone\\n\\n    integer,dimension(8) :: values\\n\\n    ! using keyword arguments\\n\\n    call date_and_time(date,time,zone,values)\\n\\n    call date_and_time(DATE=date,ZONE=zone)\\n\\n    call date_and_time(TIME=time)\\n\\n    call date_and_time(VALUES=values)\\n\\n    print \'(a,2x,a,2x,a)\', date, time, zone\\n\\n    print \'(8i5)\', values\\n\\nend program test_time_and_date\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\n<a href=\\"CPU_005fTIME.html#CPU_005fTIME\\">CPU_TIME</a>, <a href=\\"SYSTEM_005fCLOCK.html#SYSTEM_005fCLOCK\\">SYSTEM_CLOCK</a>\\n"},"ATOMIC_FETCH_AND":{"doc":"`ATOMIC_FETCH_AND` — Atomic bitwise AND operation with prior fetch\\n\\n### Description\\n`ATOMIC_AND(ATOM, VALUE)` atomically stores the value of `ATOM` in\\n`OLD` and defines `ATOM` with the bitwise AND between the values of\\n`ATOM` and `VALUE`. When `STAT` is present and the invokation was\\nsuccessful, it is assigned the value 0. If it is present and the invokation has\\nfailed, it is assigned a positive value; in particular, for a coindexed\\n`ATOM`, if the remote image has stopped, it is assigned the value of\\n`ISO_FORTRAN_ENV`\'s `STAT_STOPPED_IMAGE` and if the remote image has\\nfailed, the value `STAT_FAILED_IMAGE`.\\n\\n\\n\\n### Syntax\\n`CALL ATOMIC_FETCH_AND (ATOM, VALUE, OLD [, STAT])`\\n\\n\\n### Arguments\\n\\n     \\n | `ATOM`    | Scalar coarray or coindexed variable of integer\\ntype with `ATOMIC_INT_KIND` kind. \\n\\n | `VALUE`   | Scalar of the same type as `ATOM`. If the kind\\nis different, the value is converted to the kind of `ATOM`. \\n\\n | `OLD`     | Scalar of the same type and kind as `ATOM`. \\n\\n | `STAT`    | (optional) Scalar default-kind integer variable.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram atomic\\n\\n  use iso_fortran_env\\n\\n  integer(atomic_int_kind) :: atom[*], old\\n\\n  call atomic_fetch_and (atom[1], int(b\'10100011101\'), old)\\n\\nend program atomic\\n\\n```\\n\\n\\n\\n### Standard\\nTS 18508 or later\\n\\n\\n\\n### Class\\nAtomic subroutine\\n\\n\\n\\n### See also\\n<a href=\\"ATOMIC_005fDEFINE.html#ATOMIC_005fDEFINE\\">ATOMIC_DEFINE</a>, <a href=\\"ATOMIC_005fAND.html#ATOMIC_005fAND\\">ATOMIC_AND</a>, <a href=\\"ISO_005fFORTRAN_005fENV.html#ISO_005fFORTRAN_005fENV\\">ISO_FORTRAN_ENV</a>,\\n<a href=\\"ATOMIC_005fFETCH_005fADD.html#ATOMIC_005fFETCH_005fADD\\">ATOMIC_FETCH_ADD</a>, <a href=\\"ATOMIC_005fFETCH_005fOR.html#ATOMIC_005fFETCH_005fOR\\">ATOMIC_FETCH_OR</a>, <a href=\\"ATOMIC_005fFETCH_005fXOR.html#ATOMIC_005fFETCH_005fXOR\\">ATOMIC_FETCH_XOR</a>\\n"},"ATAN":{"doc":"`ATAN` — Arctangent function\\n\\n### Description\\n`ATAN(X)` computes the arctangent of `X`.\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `RESULT = ATAN(Y, X)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n;\\nif `Y` is present, `X` shall be REAL. \\n\\n | `Y` shall be of the same type and kind as `X`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of the same type and kind as `X`. \\nIf `Y` is present, the result is identical to `ATAN2(Y,X)`. \\nOtherwise, it the arcus tangent of `X`, where the real part of\\nthe result is in radians and lies in the range\\n-\\\\pi/2 \\\\leq \\\\Re \\\\atan(x) \\\\leq \\\\pi/2.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_atan\\n\\n  real(8) :: x = 2.866_8\\n\\n  x = atan(x)\\n\\nend program test_atan\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name             | Argument           | Return type        | Standard\\n\\n | `ATAN(X)`   | `REAL(4) X`   | `REAL(4)`     | Fortran 77 and later\\n\\n | `DATAN(X)`  | `REAL(8) X`   | `REAL(8)`     | Fortran 77 and later\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later, for a complex argument and for two arguments\\nFortran 2008 or later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\nInverse function: <a href=\\"TAN.html#TAN\\">TAN</a>\\n\\n   "},"LEN_TRIM":{"doc":"`LEN_TRIM` — Length of a character entity without trailing blank characters\\n\\n### Description\\nReturns the length of a character string, ignoring any trailing blanks.\\n\\n\\n\\n### Syntax\\n`RESULT = LEN_TRIM(STRING [, KIND])`\\n\\n\\n### Arguments\\n\\n     \\n,\\nwith `INTENT(IN)`<br>\\n | `KIND`  | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of kind `KIND`. If\\n`KIND` is absent, the return value is of default integer kind.\\n\\n\\n\\n### Standard\\nFortran 95 and later, with `KIND` argument Fortran 2003 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"LEN.html#LEN\\">LEN</a>, <a href=\\"ADJUSTL.html#ADJUSTL\\">ADJUSTL</a>, <a href=\\"ADJUSTR.html#ADJUSTR\\">ADJUSTR</a>\\n"},"GETCWD":{"doc":"`GETCWD` — Get current working directory\\n\\n### Description\\nGet current working directory.\\n\\n     \\nThis intrinsic is provided in both subroutine and function forms; however,\\nonly one form can be used in any given program unit.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `STATUS = GETCWD(C)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n and of default kind. \\n\\n | `STATUS`  | (Optional) status flag. Returns 0 on success,\\na system specific and nonzero error code otherwise.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_getcwd\\n\\n  CHARACTER(len=255) :: cwd\\n\\n  CALL getcwd(cwd)\\n\\n  WRITE(*,*) TRIM(cwd)\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n\\n### See also\\n<a href=\\"CHDIR.html#CHDIR\\">CHDIR</a>\\n"},"GMTIME":{"doc":"`GMTIME` — Convert time to GMT info\\n\\n### Description\\nGiven a system time value `TIME` (as provided by the `TIME8`intrinsic), fills `VALUES` with values extracted from it appropriate\\nto the UTC time zone (Universal Coordinated Time, also known in some\\ncountries as GMT, Greenwich Mean Time), using `gmtime(3)`.\\n\\n\\n\\n### Syntax\\n`CALL GMTIME(TIME, VALUES)`\\n\\n\\n### Arguments\\n\\n     \\n scalar expression\\ncorresponding to a system time, with `INTENT(IN)`. \\n\\n | `VALUES`  | A default `INTEGER` array with 9 elements,\\nwith `INTENT(OUT)`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe elements of `VALUES` are assigned as follows:\\n          <ol start=\\"1\\" type=\\"1\\">\\n<li>Seconds after the minute, range 0–59 or 0–61 to allow for leap\\nseconds\\n</li><li>Minutes after the hour, range 0–59\\n</li><li>Hours past midnight, range 0–23\\n</li><li>Day of month, range 0–31\\n</li><li>Number of months since January, range 0–12\\n</li><li>Years since 1900\\n</li><li>Number of days since Sunday, range 0–6\\n</li><li>Days since January 1\\n</li><li>Daylight savings indicator: positive if daylight savings is in\\neffect, zero if not, and negative if the information is not available.\\n          </li></ol>\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\n<a href=\\"CTIME.html#CTIME\\">CTIME</a>, <a href=\\"LTIME.html#LTIME\\">LTIME</a>, <a href=\\"TIME.html#TIME\\">TIME</a>, <a href=\\"TIME8.html#TIME8\\">TIME8</a>\\n\\n   "},"TAN":{"doc":"`TAN` — Tangent function\\n\\n### Description\\n`TAN(X)` computes the tangent of `X`.\\n\\n\\n\\n### Syntax\\n`RESULT = TAN(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value has same type and kind as `X`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_tan\\n\\n  real(8) :: x = 0.165_8\\n\\n  x = tan(x)\\n\\nend program test_tan\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name             | Argument           | Return type      | Standard\\n\\n | `TAN(X)`    | `REAL(4) X`   | `REAL(4)`   | Fortran 95 and later\\n\\n | `DTAN(X)`   | `REAL(8) X`   | `REAL(8)`   | Fortran 95 and later\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later, for a complex argument Fortran 2008 or later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"ATAN.html#ATAN\\">ATAN</a>\\n"},"CO_REDUCE":{"doc":"`CO_REDUCE` — Reduction of values on the current set of images\\n\\n### Description\\n`CO_REDUCE` determines element-wise the reduction of the value of `A`\\non all images of the current team.  The pure function passed as `OPERATOR`\\nis used to pairwise reduce the values of `A` by passing either the value\\nof `A` of different images or the result values of such a reduction as\\nargument.  If `A` is an array, the deduction is done element wise. If\\n`RESULT_IMAGE` is present, the result values are returned in `A` on\\nthe specified image only and the value of `A` on the other images become\\nundefined.  If `RESULT_IMAGE` is not present, the value is returned on all\\nimages.  If the execution was successful and `STAT` is present, it is\\nassigned the value zero.  If the execution failed, `STAT` gets assigned\\na nonzero value and, if present, `ERRMSG` gets assigned a value describing\\nthe occurred error.\\n\\n\\n\\n### Syntax\\n`CALL CO_REDUCE(A, OPERATOR, [, RESULT_IMAGE, STAT, ERRMSG])`\\n\\n\\n### Arguments\\n\\n     \\n argument and shall be\\nnonpolymorphic. If it is allocatable, it shall be allocated; if it is a pointer,\\nit shall be associated.  `A` shall have the same type and type parameters on\\nall images of the team; if it is an array, it shall have the same shape on all\\nimages. \\n\\n | `OPERATOR`      | pure function with two scalar nonallocatable\\narguments, which shall be nonpolymorphic and have the same type and type\\nparameters as `A`.  The function shall return a nonallocatable scalar of\\nthe same type and type parameters as `A`.  The function shall be the same on\\nall images and with regards to the arguments mathematically commutative and\\nassociative.  Note that `OPERATOR` may not be an elemental function, unless\\nit is an intrisic function. \\n\\n | `RESULT_IMAGE`  | (optional) a scalar integer expression; if\\npresent, it shall have the same the same value on all images and refer to an\\nimage of the current team. \\n\\n | `STAT`          | (optional) a scalar integer variable\\n\\n | `ERRMSG`        | (optional) a scalar character variable\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test\\n\\n  integer :: val\\n\\n  val = this_image ()\\n\\n  call co_reduce (val, result_image=1, operator=myprod)\\n\\n  if (this_image() == 1) then\\n\\n    write(*,*) \\"Product value\\", val  ! prints num_images() factorial\\n\\n  end if\\n\\ncontains\\n\\n  pure function myprod(a, b)\\n\\n    integer, value :: a, b\\n\\n    integer :: myprod\\n\\n    myprod = a * b\\n\\n  end function myprod\\n\\nend program test\\n\\n```\\n\\n\\n\\n### Notes\\nWhile the rules permit in principle an intrinsic function, none of the\\nintrinsics in the standard fulfill the criteria of having a specific\\nfunction, which takes two arguments of the same type and returning that\\ntype as result.\\n\\n\\n\\n### Standard\\nTechnical Specification (TS) 18508 or later\\n\\n\\n\\n### Class\\nCollective subroutine\\n\\n\\n\\n### See also\\n<a href=\\"CO_005fMIN.html#CO_005fMIN\\">CO_MIN</a>, <a href=\\"CO_005fMAX.html#CO_005fMAX\\">CO_MAX</a>, <a href=\\"CO_005fSUM.html#CO_005fSUM\\">CO_SUM</a>, <a href=\\"CO_005fBROADCAST.html#CO_005fBROADCAST\\">CO_BROADCAST</a>\\n"},"STORAGE_SIZE":{"doc":"`STORAGE_SIZE` — Storage size in bits\\n\\n### Description\\nReturns the storage size of argument `A` in bits. \\n\\n\\n### Syntax\\n`RESULT = STORAGE_SIZE(A [, KIND])`\\n\\n\\n### Arguments\\n\\n     \\n | `A`  | Shall be a scalar or array of any type. \\n\\n | `KIND`  | (Optional) shall be a scalar integer constant expression.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe result is a scalar integer with the kind type parameter specified by KIND\\n(or default integer type if KIND is missing). The result value is the size\\nexpressed in bits for an element of an array that has the dynamic type and type\\nparameters of A.\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n### Class\\nInquiry function\\n\\n\\n### See also\\n<a href=\\"C_005fSIZEOF.html#C_005fSIZEOF\\">C_SIZEOF</a>, <a href=\\"SIZEOF.html#SIZEOF\\">SIZEOF</a>\\n"},"IBSET":{"doc":"`IBSET` — Set bit\\n\\n### Description\\n`IBSET` returns the value of `I` with the bit at position\\n`POS` set to one.\\n\\n\\n\\n### Syntax\\n`RESULT = IBSET(I, POS)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `POS`  | The type shall be `INTEGER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of the same kind as\\n`I`.\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"IBCLR.html#IBCLR\\">IBCLR</a>, <a href=\\"IBITS.html#IBITS\\">IBITS</a>, <a href=\\"IAND.html#IAND\\">IAND</a>, <a href=\\"IOR.html#IOR\\">IOR</a>, <a href=\\"IEOR.html#IEOR\\">IEOR</a>, <a href=\\"MVBITS.html#MVBITS\\">MVBITS</a>\\n\\n   "},"ABS":{"doc":"`ABS` — Absolute value\\n\\n### Description\\n`ABS(A)` computes the absolute value of `A`.\\n\\n\\n\\n### Syntax\\n`RESULT = ABS(A)`\\n\\n\\n### Arguments\\n\\n     \\n,\\n`REAL`, or `COMPLEX`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of the same type and\\nkind as the argument except the return value is `REAL` for a\\n`COMPLEX` argument.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_abs\\n\\n  integer :: i = -1\\n\\n  real :: x = -1.e0\\n\\n  complex :: z = (-1.e0,0.e0)\\n\\n  i = abs(i)\\n\\n  x = abs(x)\\n\\n  x = abs(z)\\n\\nend program test_abs\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name             | Argument             | Return type        | Standard\\n\\n | `ABS(A)`    | `REAL(4) A`     | `REAL(4)`     | Fortran 77 and later\\n\\n | `CABS(A)`   | `COMPLEX(4) A`  | `REAL(4)`     | Fortran 77 and later\\n\\n | `DABS(A)`   | `REAL(8) A`     | `REAL(8)`     | Fortran 77 and later\\n\\n | `IABS(A)`   | `INTEGER(4) A`  | `INTEGER(4)`  | Fortran 77 and later\\n\\n | `ZABS(A)`   | `COMPLEX(8) A`  | `COMPLEX(8)`  | GNU extension\\n\\n | `CDABS(A)`  | `COMPLEX(8) A`  | `COMPLEX(8)`  | GNU extension\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later, has overloads that are GNU extensions\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"NULL":{"doc":"`NULL` — Function that returns an disassociated pointer\\n\\n### Description\\nReturns a disassociated pointer.\\n\\n     \\nIf `MOLD` is present, a disassociated pointer of the same type is\\nreturned, otherwise the type is determined by context.\\n\\n     \\n\\nIn Fortran 95, `MOLD` is optional. Please note that Fortran 2003\\nincludes cases where it is required.\\n\\n\\n\\n\\n### Syntax\\n`PTR => NULL([MOLD])`\\n\\n\\n### Arguments\\n\\n     \\n | `MOLD`  | (Optional) shall be a pointer of any association\\nstatus and of any type.\\n\\n\\n\\n\\n\\n\\n### Return value\\nA disassociated pointer.\\n\\n\\n\\n### Example\\n```\\n\\n\\nREAL, POINTER, DIMENSION(:) :: VEC => NULL ()\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n\\n### See also\\n<a href=\\"ASSOCIATED.html#ASSOCIATED\\">ASSOCIATED</a>\\n"},"ATAN2":{"doc":"`ATAN2` — Arctangent function\\n\\n### Description\\n`ATAN2(Y, X)` computes the principal value of the argument\\nfunction of the complex number X + i Y. This function can\\nbe used to transform from Cartesian into polar coordinates and\\nallows to determine the angle in the correct quadrant.\\n\\n\\n\\n### Syntax\\n`RESULT = ATAN2(Y, X)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `X`  | The type and kind type parameter shall be the same as `Y`. \\nIf `Y` is zero, then `X` must be nonzero.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value has the same type and kind type parameter as `Y`. It\\nis the principal value of the complex number X + i Y.  If `X`\\nis nonzero, then it lies in the range -\\\\pi \\\\le \\\\atan (x) \\\\leq \\\\pi. \\nThe sign is positive if `Y` is positive.  If `Y` is zero, then\\nthe return value is zero if `X` is strictly positive, \\\\pi if\\n`X` is negative and `Y` is positive zero (or the processor does\\nnot handle signed zeros), and -\\\\pi if `X` is negative and\\n`Y` is negative zero.  Finally, if `X` is zero, then the\\nmagnitude of the result is \\\\pi/2.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_atan2\\n\\n  real(4) :: x = 1.e0_4, y = 0.5e0_4\\n\\n  x = atan2(y,x)\\n\\nend program test_atan2\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name                 | Argument             | Return type     | Standard\\n\\n | `ATAN2(X, Y)`   | `REAL(4) X, Y`  | `REAL(4)`  | Fortran 77 and later\\n\\n | `DATAN2(X, Y)`  | `REAL(8) X, Y`  | `REAL(8)`  | Fortran 77 and later\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"BGE":{"doc":"`BGE` — Bitwise greater than or equal to\\n\\n### Description\\nDetermines whether an integral is a bitwise greater than or equal to\\nanother.\\n\\n\\n\\n### Syntax\\n`RESULT = BGE(I, J)`\\n\\n\\n### Arguments\\n\\n     \\n type. \\n\\n | `J`  | Shall be of `INTEGER` type, and of the same kind\\nas `I`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `LOGICAL` and of the default kind.\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"BGT.html#BGT\\">BGT</a>, <a href=\\"BLE.html#BLE\\">BLE</a>, <a href=\\"BLT.html#BLT\\">BLT</a>\\n"},"IBITS":{"doc":"`IBITS` — Bit extraction\\n\\n### Description\\n`IBITS` extracts a field of length `LEN` from `I`,\\nstarting from bit position `POS` and extending left for `LEN`\\nbits.  The result is right-justified and the remaining bits are\\nzeroed.  The value of `POS+LEN` must be less than or equal to the\\nvalue `BIT_SIZE(I)`.\\n\\n\\n\\n### Syntax\\n`RESULT = IBITS(I, POS, LEN)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `POS`  | The type shall be `INTEGER`. \\n\\n | `LEN`  | The type shall be `INTEGER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of the same kind as\\n`I`.\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"BIT_005fSIZE.html#BIT_005fSIZE\\">BIT_SIZE</a>, <a href=\\"IBCLR.html#IBCLR\\">IBCLR</a>, <a href=\\"IBSET.html#IBSET\\">IBSET</a>, <a href=\\"IAND.html#IAND\\">IAND</a>, <a href=\\"IOR.html#IOR\\">IOR</a>, <a href=\\"IEOR.html#IEOR\\">IEOR</a>\\n"},"BESSEL_Y1":{"doc":"`BESSEL_Y1` — Bessel function of the second kind of order 1\\n\\n### Description\\n`BESSEL_Y1(X)` computes the Bessel function of the second kind of\\norder 1 of `X`. This function is available under the name\\n`BESY1` as a GNU extension.\\n\\n\\n\\n### Syntax\\n`RESULT = BESSEL_Y1(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `REAL`. It has the same kind as `X`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_besy1\\n\\n  real(8) :: x = 1.0_8\\n\\n  x = bessel_y1(x)\\n\\nend program test_besy1\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name             | Argument           | Return type        | Standard\\n\\n | `DBESY1(X)` | `REAL(8) X`   | `REAL(8)`     | GNU extension\\n\\n\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"STAT":{"doc":"`STAT` — Get file status\\n\\n### Description\\nThis function returns information about a file. No permissions are required on\\nthe file itself, but execute (search) permission is required on all of the\\ndirectories in path that lead to the file.\\n\\n     \\nThe elements that are obtained and stored in the array `VALUES`:\\n     \\n\\n    | Device ID\\n\\n | `VALUES(2)`    | Inode number\\n\\n | `VALUES(3)`    | File mode\\n\\n | `VALUES(4)`    | Number of links\\n\\n | `VALUES(5)`    | Owner\'s uid\\n\\n | `VALUES(6)`    | Owner\'s gid\\n\\n | `VALUES(7)`    | ID of device containing directory entry for file (0 if not available)\\n\\n | `VALUES(8)`    | File size (bytes)\\n\\n | `VALUES(9)`    | Last access time\\n\\n | `VALUES(10)`   | Last modification time\\n\\n | `VALUES(11)`   | Last file status change time\\n\\n | `VALUES(12)`   | Preferred I/O block size (-1 if not available)\\n\\n | `VALUES(13)`   | Number of blocks allocated (-1 if not available)\\n\\n\\n\\n     \\n\\nNot all these elements are relevant on all systems. \\nIf an element is not relevant, it is returned as 0.\\n\\n     \\n\\nThis intrinsic is provided in both subroutine and function forms; however,\\nonly one form can be used in any given program unit.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `STATUS = STAT(NAME, VALUES)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n, of the\\ndefault kind and a valid path within the file system. \\n\\n | `VALUES`  | The type shall be `INTEGER(4), DIMENSION(13)`. \\n\\n | `STATUS`  | (Optional) status flag of type `INTEGER(4)`. Returns 0\\non success and a system specific error code otherwise.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_stat\\n\\n  INTEGER, DIMENSION(13) :: buff\\n\\n  INTEGER :: status\\n\\n\\n  CALL STAT(\\"/etc/passwd\\", buff, status)\\n\\n\\n  IF (status == 0) THEN\\n\\n    WRITE (*, FMT=\\"(\'Device ID:\',               T30, I19)\\") buff(1)\\n\\n    WRITE (*, FMT=\\"(\'Inode number:\',            T30, I19)\\") buff(2)\\n\\n    WRITE (*, FMT=\\"(\'File mode (octal):\',       T30, O19)\\") buff(3)\\n\\n    WRITE (*, FMT=\\"(\'Number of links:\',         T30, I19)\\") buff(4)\\n\\n    WRITE (*, FMT=\\"(\'Owner\'\'s uid:\',            T30, I19)\\") buff(5)\\n\\n    WRITE (*, FMT=\\"(\'Owner\'\'s gid:\',            T30, I19)\\") buff(6)\\n\\n    WRITE (*, FMT=\\"(\'Device where located:\',    T30, I19)\\") buff(7)\\n\\n    WRITE (*, FMT=\\"(\'File size:\',               T30, I19)\\") buff(8)\\n\\n    WRITE (*, FMT=\\"(\'Last access time:\',        T30, A19)\\") CTIME(buff(9))\\n\\n    WRITE (*, FMT=\\"(\'Last modification time\',   T30, A19)\\") CTIME(buff(10))\\n\\n    WRITE (*, FMT=\\"(\'Last status change time:\', T30, A19)\\") CTIME(buff(11))\\n\\n    WRITE (*, FMT=\\"(\'Preferred block size:\',    T30, I19)\\") buff(12)\\n\\n    WRITE (*, FMT=\\"(\'No. of blocks allocated:\', T30, I19)\\") buff(13)\\n\\n  END IF\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n\\n### See also\\nTo stat an open file: <a href=\\"FSTAT.html#FSTAT\\">FSTAT</a>, to stat a link: <a href=\\"LSTAT.html#LSTAT\\">LSTAT</a>\\n"},"MOVE_ALLOC":{"doc":"`MOVE_ALLOC` — Move allocation from one object to another\\n\\n### Description\\n`MOVE_ALLOC(FROM, TO)` moves the allocation from `FROM` to\\n`TO`.  `FROM` will become deallocated in the process.\\n\\n\\n\\n### Syntax\\n`CALL MOVE_ALLOC(FROM, TO)`\\n\\n\\n### Arguments\\n\\n     \\n, may be\\nof any type and kind. \\n\\n | `TO`  | `ALLOCATABLE`, `INTENT(OUT)`, shall be\\nof the same type, kind and rank as `FROM`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nNone\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_move_alloc\\n\\n    integer, allocatable :: a(:), b(:)\\n\\n\\n    allocate(a(3))\\n\\n    a = [ 1, 2, 3 ]\\n\\n    call move_alloc(a, b)\\n\\n    print *, allocated(a), allocated(b)\\n\\n    print *, b\\n\\nend program test_move_alloc\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 2003 and later\\n\\n\\n\\n### Class\\nPure subroutine\\n\\n\\n"},"TINY":{"doc":"`TINY` — Smallest positive number of a real kind\\n\\n### Description\\n`TINY(X)` returns the smallest positive (non zero) number\\nin the model of the type of `X`.\\n\\n\\n\\n### Syntax\\n`RESULT = TINY(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of the same type and kind as `X`\\n\\n\\n\\n### Example\\nSee `HUGE` for an example. \\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n"},"SIZE":{"doc":"`SIZE` — Determine the size of an array\\n\\n### Description\\nDetermine the extent of `ARRAY` along a specified dimension `DIM`,\\nor the total number of elements in `ARRAY` if `DIM` is absent.\\n\\n\\n\\n### Syntax\\n`RESULT = SIZE(ARRAY[, DIM [, KIND]])`\\n\\n\\n### Arguments\\n\\n     \\n | `ARRAY`  | Shall be an array of any type. If `ARRAY` is\\na pointer it must be associated and allocatable arrays must be allocated. \\n\\n | `DIM`    | (Optional) shall be a scalar of type `INTEGER`and its value shall be in the range from 1 to n, where n equals the rank\\nof `ARRAY`. \\n\\n | `KIND`  | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of kind `KIND`. If\\n`KIND` is absent, the return value is of default integer kind.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_size\\n\\n  WRITE(*,*) SIZE((/ 1, 2 /))    ! 2\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later, with `KIND` argument Fortran 2003 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n\\n### See also\\n<a href=\\"SHAPE.html#SHAPE\\">SHAPE</a>, <a href=\\"RESHAPE.html#RESHAPE\\">RESHAPE</a>\\n"},"ATOMIC_CAS":{"doc":"`ATOMIC_CAS` — Atomic compare and swap\\n\\n### Description\\n`ATOMIC_CAS` compares the variable `ATOM` with the value of\\n`COMPARE`; if the value is the same, `ATOM` is set to the value\\nof `NEW`. Additionally, `OLD` is set to the value of `ATOM`\\nthat was used for the comparison.  When `STAT` is present and the invokation\\nwas successful, it is assigned the value 0. If it is present and the invokation\\nhas failed, it is assigned a positive value; in particular, for a coindexed\\n`ATOM`, if the remote image has stopped, it is assigned the value of\\n`ISO_FORTRAN_ENV`\'s `STAT_STOPPED_IMAGE` and if the remote image has\\nfailed, the value `STAT_FAILED_IMAGE`.\\n\\n\\n\\n### Syntax\\n`CALL ATOMIC_CAS (ATOM, OLD, COMPARE, NEW [, STAT])`\\n\\n\\n### Arguments\\n\\n     \\n | `ATOM`     | Scalar coarray or coindexed variable of either integer\\ntype with `ATOMIC_INT_KIND` kind or logical type with\\n`ATOMIC_LOGICAL_KIND` kind. \\n\\n | `OLD`      | Scalar of the same type and kind as `ATOM`. \\n\\n | `COMPARE`  | Scalar variable of the same type and kind as\\n`ATOM`. \\n\\n | `NEW`      | Scalar variable of the same type as `ATOM`. If kind\\nis different, the value is converted to the kind of `ATOM`. \\n\\n | `STAT`     | (optional) Scalar default-kind integer variable.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram atomic\\n\\n  use iso_fortran_env\\n\\n  logical(atomic_logical_kind) :: atom[*], prev\\n\\n  call atomic_cas (atom[1], prev, .false., .true.))\\n\\nend program atomic\\n\\n```\\n\\n\\n\\n### Standard\\nTS 18508 or later\\n\\n\\n\\n### Class\\nAtomic subroutine\\n\\n\\n\\n### See also\\n<a href=\\"ATOMIC_005fDEFINE.html#ATOMIC_005fDEFINE\\">ATOMIC_DEFINE</a>, <a href=\\"ATOMIC_005fREF.html#ATOMIC_005fREF\\">ATOMIC_REF</a>, <a href=\\"ISO_005fFORTRAN_005fENV.html#ISO_005fFORTRAN_005fENV\\">ISO_FORTRAN_ENV</a>\\n"},"DTIME":{"doc":"`DTIME` — Execution time subroutine (or function)\\n\\n### Description\\n`DTIME(VALUES, TIME)` initially returns the number of seconds of runtime\\nsince the start of the process\'s execution in `TIME`.  `VALUES`\\nreturns the user and system components of this time in `VALUES(1)` and\\n`VALUES(2)` respectively. `TIME` is equal to <code>VALUES(1) +\\nVALUES(2)</code>.\\n\\n     \\nSubsequent invocations of `DTIME` return values accumulated since the\\nprevious invocation.\\n\\n     \\n\\nOn some systems, the underlying timings are represented using types with\\nsufficiently small limits that overflows (wrap around) are possible, such as\\n32-bit types. Therefore, the values returned by this intrinsic might be, or\\nbecome, negative, or numerically less than previous values, during a single\\nrun of the compiled program.\\n\\n     \\n\\nPlease note, that this implementation is thread safe if used within OpenMP\\ndirectives, i.e., its state will be consistent while called from multiple\\nthreads. However, if `DTIME` is called from multiple threads, the result\\nis still the time since the last invocation. This may not give the intended\\nresults. If possible, use `CPU_TIME` instead.\\n\\n     \\n\\nThis intrinsic is provided in both subroutine and function forms; however,\\nonly one form can be used in any given program unit.\\n\\n     \\n\\n`VALUES` and `TIME` are `INTENT(OUT)` and provide the following:\\n\\n     \\n\\n:  | User time in seconds. \\n\\n | </td><td valign=\\"top\\" width=\\"30%\\">`VALUES(2)`:  | System time in seconds. \\n\\n | </td><td valign=\\"top\\" width=\\"30%\\">`TIME`:  | Run time since start in seconds.\\n\\n\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n. \\n\\n | `TIME = DTIME(VALUES)`, (not recommended).\\n\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `TIME` | The type shall be `REAL(4)`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nElapsed time in seconds since the last invocation or since the start of program\\nexecution if not called before.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_dtime\\n\\n    integer(8) :: i, j\\n\\n    real, dimension(2) :: tarray\\n\\n    real :: result\\n\\n    call dtime(tarray, result)\\n\\n    print *, result\\n\\n    print *, tarray(1)\\n\\n    print *, tarray(2)\\n\\n    do i=1,100000000    ! Just a delay\\n\\n        j = i * i - i\\n\\n    end do\\n\\n    call dtime(tarray, result)\\n\\n    print *, result\\n\\n    print *, tarray(1)\\n\\n    print *, tarray(2)\\n\\nend program test_dtime\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n\\n### See also\\n<a href=\\"CPU_005fTIME.html#CPU_005fTIME\\">CPU_TIME</a>\\n\\n   "},"ALARM":{"doc":"`ALARM` — Execute a routine after a given delay\\n\\n### Description\\n`ALARM(SECONDS, HANDLER [, STATUS])` causes external subroutine `HANDLER`\\nto be executed after a delay of `SECONDS` by using `alarm(2)` to\\nset up a signal and `signal(2)` to catch it. If `STATUS` is\\nsupplied, it will be returned with the number of seconds remaining until\\nany previously scheduled alarm was due to be delivered, or zero if there\\nwas no previously scheduled alarm.\\n\\n\\n\\n### Syntax\\n`CALL ALARM(SECONDS, HANDLER [, STATUS])`\\n\\n\\n### Arguments\\n\\n     \\n | `SECONDS`  | The type of the argument shall be a scalar\\n`INTEGER`. It is `INTENT(IN)`. \\n\\n | `HANDLER`  | Signal handler (`INTEGER FUNCTION` or\\n`SUBROUTINE`) or dummy/global `INTEGER` scalar. The scalar\\nvalues may be either `SIG_IGN=1` to ignore the alarm generated\\nor `SIG_DFL=0` to set the default action. It is `INTENT(IN)`. \\n\\n | `STATUS`   | (Optional) `STATUS` shall be a scalar\\nvariable of the default `INTEGER` kind. It is `INTENT(OUT)`.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_alarm\\n\\n  external handler_print\\n\\n  integer i\\n\\n  call alarm (3, handler_print, i)\\n\\n  print *, i\\n\\n  call sleep(10)\\n\\nend program test_alarm\\n\\n```\\n\\n     \\nThis will cause the external routine `handler_print` to be called\\nafter 3 seconds. \\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n"},"BESSEL_YN":{"doc":"`BESSEL_YN` — Bessel function of the second kind\\n\\n### Description\\n`BESSEL_YN(N, X)` computes the Bessel function of the second kind of\\norder `N` of `X`. This function is available under the name\\n`BESYN` as a GNU extension.  If `N` and `X` are arrays,\\ntheir ranks and shapes shall conform.\\n\\n     \\n`BESSEL_YN(N1, N2, X)` returns an array with the Bessel functions\\nof the first kind of the orders `N1` to `N2`.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `RESULT = BESSEL_YN(N1, N2, X)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n . \\n\\n | `N1`  | Shall be a non-negative scalar of type  `INTEGER`. \\n\\n | `N2`  | Shall be a non-negative scalar of type  `INTEGER`. \\n\\n | `X`  | Shall be a scalar or an array of type  `REAL`;\\nfor `BESSEL_YN(N1, N2, X)` it shall be scalar.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is a scalar of type `REAL`. It has the same\\nkind as `X`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_besyn\\n\\n  real(8) :: x = 1.0_8\\n\\n  x = bessel_yn(5,x)\\n\\nend program test_besyn\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name                | Argument             | Return type      | Standard\\n\\n | `DBESYN(N,X)`  | `INTEGER N`  | `REAL(8)`   | GNU extension\\n\\n | </td><td valign=\\"top\\" width=\\"20%\\">`REAL(8) X`  | </td><td valign=\\"top\\" width=\\"25%\\">\\n\\n\\n\\n\\n\\n### Notes\\nThe transformational function uses a recurrence algorithm which might,\\nfor some values of `X`, lead to different results than calls to\\nthe elemental function.\\n\\n\\n\\n### Standard\\nFortran 2008 and later, negative `N` is allowed as GNU extension\\n\\n\\n\\n### Class\\nElemental function, except for the transformational function\\n`BESSEL_YN(N1, N2, X)`\\n\\n"},"AIMAG":{"doc":"`AIMAG` — Imaginary part of complex number\\n\\n### Description\\n`AIMAG(Z)` yields the imaginary part of complex argument `Z`. \\nThe `IMAG(Z)` and `IMAGPART(Z)` intrinsic functions are provided\\nfor compatibility with *g77*, and their use in new code is\\nstrongly discouraged.\\n\\n\\n\\n### Syntax\\n`RESULT = AIMAG(Z)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `REAL` with the\\nkind type parameter of the argument.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_aimag\\n\\n  complex(4) z4\\n\\n  complex(8) z8\\n\\n  z4 = cmplx(1.e0_4, 0.e0_4)\\n\\n  z8 = cmplx(0.e0_8, 1.e0_8)\\n\\n  print *, aimag(z4), dimag(z8)\\n\\nend program test_aimag\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name                | Argument             | Return type      | Standard\\n\\n | `AIMAG(Z)`     | `COMPLEX Z`     | `REAL`      | GNU extension\\n\\n | `DIMAG(Z)`     | `COMPLEX(8) Z`  | `REAL(8)`   | GNU extension\\n\\n | `IMAG(Z)`      | `COMPLEX Z`     | `REAL`      | GNU extension\\n\\n | `IMAGPART(Z)`  | `COMPLEX Z`     | `REAL`      | GNU extension\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later, has overloads that are GNU extensions\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"UNPACK":{"doc":"`UNPACK` — Unpack an array of rank one into an array\\n\\n### Description\\nStore the elements of `VECTOR` in an array of higher rank.\\n\\n\\n\\n### Syntax\\n`RESULT = UNPACK(VECTOR, MASK, FIELD)`\\n\\n\\n### Arguments\\n\\n     \\n | `VECTOR`  | Shall be an array of any type and rank one. It\\nshall have at least as many elements as `MASK` has `TRUE` values. \\n\\n | `MASK`    | Shall be an array of type `LOGICAL`. \\n\\n | `FIELD`   | Shall be of the same type as `VECTOR` and have\\nthe same shape as `MASK`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe resulting array corresponds to `FIELD` with `TRUE` elements\\nof `MASK` replaced by values from `VECTOR` in array element order.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_unpack\\n\\n  integer :: vector(2)  = (/1,1/)\\n\\n  logical :: mask(4)  = (/ .TRUE., .FALSE., .FALSE., .TRUE. /)\\n\\n  integer :: field(2,2) = 0, unity(2,2)\\n\\n\\n  ! result: unity matrix\\n\\n  unity = unpack(vector, reshape(mask, (/2,2/)), field)\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n\\n### See also\\n<a href=\\"PACK.html#PACK\\">PACK</a>, <a href=\\"SPREAD.html#SPREAD\\">SPREAD</a>\\n"},"REPEAT":{"doc":"`REPEAT` — Repeated string concatenation\\n\\n### Description\\nConcatenates `NCOPIES` copies of a string.\\n\\n\\n\\n### Syntax\\n`RESULT = REPEAT(STRING, NCOPIES)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `NCOPIES`  | Shall be scalar and of type `INTEGER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nA new scalar of type `CHARACTER` built up from `NCOPIES` copies\\nof `STRING`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_repeat\\n\\n  write(*,*) repeat(\\"x\\", 5)   ! \\"xxxxx\\"\\n\\nend program\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n"},"FLUSH":{"doc":"`FLUSH` — Flush I/O unit(s)\\n\\n### Description\\nFlushes Fortran unit(s) currently open for output. Without the optional\\nargument, all units are flushed, otherwise just the unit specified.\\n\\n\\n\\n### Syntax\\n`CALL FLUSH(UNIT)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Notes\\nBeginning with the Fortran 2003 standard, there is a `FLUSH`statement that should be preferred over the `FLUSH` intrinsic.\\n\\n     \\nThe `FLUSH` intrinsic and the Fortran 2003 `FLUSH` statement\\nhave identical effect: they flush the runtime library\'s I/O buffer so\\nthat the data becomes visible to other processes. This does not guarantee\\nthat the data is committed to disk.\\n\\n     \\n\\nOn POSIX systems, you can request that all data is transferred  to  the\\nstorage device by calling the `fsync` function, with the POSIX file\\ndescriptor of the I/O unit as argument (retrieved with GNU intrinsic\\n`FNUM`). The following example shows how:\\n\\n     \\n<pre class=\\"smallexample\\">            ! Declare the interface for POSIX fsync function\\n            interface\\n              function fsync (fd) bind(c,name=\\"fsync\\")\\n              use iso_c_binding, only: c_int\\n                integer(c_int), value :: fd\\n                integer(c_int) :: fsync\\n              end function fsync\\n            end interface\\n          \\n            ! Variable declaration\\n            integer :: ret\\n          \\n            ! Opening unit 10\\n            open (10,file=\\"foo\\")\\n          \\n            ! ...\\n            ! Perform I/O on unit 10\\n            ! ...\\n          \\n            ! Flush and sync\\n            flush(10)\\n            ret = fsync(fnum(10))\\n          \\n            ! Handle possible error\\n            if (ret /= 0) stop \\"Error calling FSYNC\\"\\n</pre>\\n     \\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n"},"GET_COMMAND":{"doc":"`GET_COMMAND` — Get the entire command line\\n\\n### Description\\nRetrieve the entire command line that was used to invoke the program.\\n\\n\\n\\n### Syntax\\n`CALL GET_COMMAND([COMMAND, LENGTH, STATUS])`\\n\\n\\n### Arguments\\n\\n     \\n and\\nof default kind. \\n\\n | `LENGTH`  | (Optional) Shall be of type `INTEGER` and of\\ndefault kind. \\n\\n | `STATUS`  | (Optional) Shall be of type `INTEGER` and of\\ndefault kind.\\n\\n\\n\\n\\n\\n\\n### Return value\\nIf `COMMAND` is present, stores the entire command line that was used\\nto invoke the program in `COMMAND`. If `LENGTH` is present, it is\\nassigned the length of the command line. If `STATUS` is present, it\\nis assigned 0 upon success of the command, -1 if `COMMAND` is too\\nshort to store the command line, or a positive value in case of an error.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_get_command\\n\\n  CHARACTER(len=255) :: cmd\\n\\n  CALL get_command(cmd)\\n\\n  WRITE (*,*) TRIM(cmd)\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 2003 and later\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\n<a href=\\"GET_005fCOMMAND_005fARGUMENT.html#GET_005fCOMMAND_005fARGUMENT\\">GET_COMMAND_ARGUMENT</a>, <a href=\\"COMMAND_005fARGUMENT_005fCOUNT.html#COMMAND_005fARGUMENT_005fCOUNT\\">COMMAND_ARGUMENT_COUNT</a>\\n"},"CO_BROADCAST":{"doc":"`CO_BROADCAST` — Copy a value to all images the current set of images\\n\\n### Description\\n`CO_BROADCAST` copies the value of argument `A` on the image with\\nimage index `SOURCE_IMAGE` to all images in the current team.  `A`\\nbecomes defined as if by intrinsic assignment.  If the execution was\\nsuccessful and `STAT` is present, it is assigned the value zero.  If the\\nexecution failed, `STAT` gets assigned a nonzero value and, if present,\\n`ERRMSG` gets assigned a value describing the occurred error.\\n\\n\\n\\n### Syntax\\n`CALL CO_BROADCAST(A, SOURCE_IMAGE [, STAT, ERRMSG])`\\n\\n\\n### Arguments\\n\\n     \\n | `A`             | INTENT(INOUT) argument; shall have the same\\ndynamic type and type paramters on all images of the current team. If it\\nis an array, it shall have the same shape on all images. \\n\\n | `SOURCE_IMAGE`  | a scalar integer expression. \\nIt shall have the same the same value on all images and refer to an\\nimage of the current team. \\n\\n | `STAT`          | (optional) a scalar integer variable\\n\\n | `ERRMSG`        | (optional) a scalar character variable\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test\\n\\n  integer :: val(3)\\n\\n  if (this_image() == 1) then\\n\\n    val = [1, 5, 3]\\n\\n  end if\\n\\n  call co_broadcast (val, source_image=1)\\n\\n  print *, this_image, \\":\\", val\\n\\nend program test\\n\\n```\\n\\n\\n\\n### Standard\\nTechnical Specification (TS) 18508 or later\\n\\n\\n\\n### Class\\nCollective subroutine\\n\\n\\n\\n### See also\\n<a href=\\"CO_005fMAX.html#CO_005fMAX\\">CO_MAX</a>, <a href=\\"CO_005fMIN.html#CO_005fMIN\\">CO_MIN</a>, <a href=\\"CO_005fSUM.html#CO_005fSUM\\">CO_SUM</a>, <a href=\\"CO_005fREDUCE.html#CO_005fREDUCE\\">CO_REDUCE</a>\\n"},"ATOMIC_DEFINE":{"doc":"`ATOMIC_DEFINE` — Setting a variable atomically\\n\\n### Description\\n`ATOMIC_DEFINE(ATOM, VALUE)` defines the variable `ATOM` with the value\\n`VALUE` atomically. When `STAT` is present and the invokation was\\nsuccessful, it is assigned the value 0. If it is present and the invokation\\nhas failed, it is assigned a positive value; in particular, for a coindexed\\n`ATOM`, if the remote image has stopped, it is assigned the value of\\n`ISO_FORTRAN_ENV`\'s `STAT_STOPPED_IMAGE` and if the remote image has\\nfailed, the value `STAT_FAILED_IMAGE`.\\n\\n\\n\\n### Syntax\\n`CALL ATOMIC_DEFINE (ATOM, VALUE [, STAT])`\\n\\n\\n### Arguments\\n\\n     \\n | `ATOM`    | Scalar coarray or coindexed variable of either integer\\ntype with `ATOMIC_INT_KIND` kind or logical type with\\n`ATOMIC_LOGICAL_KIND` kind.\\n\\n     \\n\\n\\n | `VALUE`   | Scalar of the same type as `ATOM`. If the kind\\nis different, the value is converted to the kind of `ATOM`. \\n\\n | `STAT`    | (optional) Scalar default-kind integer variable.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram atomic\\n\\n  use iso_fortran_env\\n\\n  integer(atomic_int_kind) :: atom[*]\\n\\n  call atomic_define (atom[1], this_image())\\n\\nend program atomic\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 2008 and later; with `STAT`, TS 18508 or later\\n\\n\\n\\n### Class\\nAtomic subroutine\\n\\n\\n\\n### See also\\n<a href=\\"ATOMIC_005fREF.html#ATOMIC_005fREF\\">ATOMIC_REF</a>, <a href=\\"ATOMIC_005fCAS.html#ATOMIC_005fCAS\\">ATOMIC_CAS</a>, <a href=\\"ISO_005fFORTRAN_005fENV.html#ISO_005fFORTRAN_005fENV\\">ISO_FORTRAN_ENV</a>,\\n<a href=\\"ATOMIC_005fADD.html#ATOMIC_005fADD\\">ATOMIC_ADD</a>, <a href=\\"ATOMIC_005fAND.html#ATOMIC_005fAND\\">ATOMIC_AND</a>, <a href=\\"ATOMIC_005fOR.html#ATOMIC_005fOR\\">ATOMIC_OR</a>, <a href=\\"ATOMIC_005fXOR.html#ATOMIC_005fXOR\\">ATOMIC_XOR</a>\\n"},"RANDOM_SEED":{"doc":"`RANDOM_SEED` — Initialize a pseudo-random number sequence\\n\\n### Description\\nRestarts or queries the state of the pseudorandom number generator used by\\n`RANDOM_NUMBER`.\\n\\n     \\nIf `RANDOM_SEED` is called without arguments, it is initialized\\nto a default state. The example below shows how to initialize the\\nrandom seed with a varying seed in order to ensure a different random\\nnumber sequence for each invocation of the program. Note that setting\\nany of the seed values to zero should be avoided as it can result in\\npoor quality random numbers being generated.\\n\\n\\n\\n\\n### Syntax\\n`CALL RANDOM_SEED([SIZE, PUT, GET])`\\n\\n\\n### Arguments\\n\\n     \\n | `SIZE`  | (Optional) Shall be a scalar and of type default\\n`INTEGER`, with `INTENT(OUT)`. It specifies the minimum size\\nof the arrays used with the `PUT` and `GET` arguments. \\n\\n | `PUT`   | (Optional) Shall be an array of type default\\n`INTEGER` and rank one. It is `INTENT(IN)` and the size of\\nthe array must be larger than or equal to the number returned by the\\n`SIZE` argument. \\n\\n | `GET`   | (Optional) Shall be an array of type default\\n`INTEGER` and rank one. It is `INTENT(OUT)` and the size\\nof the array must be larger than or equal to the number returned by\\nthe `SIZE` argument.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nsubroutine init_random_seed()\\n\\n  use iso_fortran_env, only: int64\\n\\n  implicit none\\n\\n  integer, allocatable :: seed(:)\\n\\n  integer :: i, n, un, istat, dt(8), pid\\n\\n  integer(int64) :: t\\n\\n\\n  call random_seed(size = n)\\n\\n  allocate(seed(n))\\n\\n  ! First try if the OS provides a random number generator\\n\\n  open(newunit=un, file=\\"/dev/urandom\\", access=\\"stream\\", &\\n\\n       form=\\"unformatted\\", action=\\"read\\", status=\\"old\\", iostat=istat)\\n\\n  if (istat == 0) then\\n\\n     read(un) seed\\n\\n     close(un)\\n\\n  else\\n\\n     ! Fallback to XOR:ing the current time and pid. The PID is\\n\\n     ! useful in case one launches multiple instances of the same\\n\\n     ! program in parallel.\\n\\n     call system_clock(t)\\n\\n     if (t == 0) then\\n\\n        call date_and_time(values=dt)\\n\\n        t = (dt(1) - 1970) * 365_int64 * 24 * 60 * 60 * 1000 &\\n\\n             + dt(2) * 31_int64 * 24 * 60 * 60 * 1000 &\\n\\n             + dt(3) * 24_int64 * 60 * 60 * 1000 &\\n\\n             + dt(5) * 60 * 60 * 1000 &\\n\\n             + dt(6) * 60 * 1000 + dt(7) * 1000 &\\n\\n             + dt(8)\\n\\n     end if\\n\\n     pid = getpid()\\n\\n     t = ieor(t, int(pid, kind(t)))\\n\\n     do i = 1, n\\n\\n        seed(i) = lcg(t)\\n\\n     end do\\n\\n  end if\\n\\n  call random_seed(put=seed)\\n\\ncontains\\n\\n  ! This simple PRNG might not be good enough for real work, but is\\n\\n  ! sufficient for seeding a better PRNG.\\n\\n  function lcg(s)\\n\\n    integer :: lcg\\n\\n    integer(int64) :: s\\n\\n    if (s == 0) then\\n\\n       s = 104729\\n\\n    else\\n\\n       s = mod(s, 4294967296_int64)\\n\\n    end if\\n\\n    s = mod(s * 279470273_int64, 4294967291_int64)\\n\\n    lcg = int(mod(s, int(huge(0), int64)), kind(0))\\n\\n  end function lcg\\n\\nend subroutine init_random_seed\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\n<a href=\\"RANDOM_005fNUMBER.html#RANDOM_005fNUMBER\\">RANDOM_NUMBER</a>\\n"},"PACK":{"doc":"`PACK` — Pack an array into an array of rank one\\n\\n### Description\\nStores the elements of `ARRAY` in an array of rank one.\\n\\n     \\nThe beginning of the resulting array is made up of elements whose `MASK`\\nequals `TRUE`. Afterwards, positions are filled with elements taken from\\n`VECTOR`.\\n\\n\\n\\n\\n### Syntax\\n`RESULT = PACK(ARRAY, MASK[,VECTOR])`\\n\\n\\n### Arguments\\n\\n     \\n | `ARRAY`   | Shall be an array of any type. \\n\\n | `MASK`    | Shall be an array of type `LOGICAL` and\\nof the same size as `ARRAY`. Alternatively, it may be a `LOGICAL`scalar. \\n\\n | `VECTOR`  | (Optional) shall be an array of the same type\\nas `ARRAY` and of rank one. If present, the number of elements in\\n`VECTOR` shall be equal to or greater than the number of true elements\\nin `MASK`. If `MASK` is scalar, the number of elements in\\n`VECTOR` shall be equal to or greater than the number of elements in\\n`ARRAY`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe result is an array of rank one and the same type as that of `ARRAY`. \\nIf `VECTOR` is present, the result size is that of `VECTOR`, the\\nnumber of `TRUE` values in `MASK` otherwise.\\n\\n\\n\\n### Example\\nGathering nonzero elements from an array:\\n```\\n\\n\\nPROGRAM test_pack_1\\n\\n  INTEGER :: m(6)\\n\\n  m = (/ 1, 0, 0, 0, 5, 0 /)\\n\\n  WRITE(*, FMT=\\"(6(I0, \' \'))\\") pack(m, m /= 0)  ! \\"1 5\\"\\n\\nEND PROGRAM\\n\\n```\\n\\n     \\nGathering nonzero elements from an array and appending elements from `VECTOR`:\\n     \\n<pre class=\\"smallexample\\">          PROGRAM test_pack_2\\n            INTEGER :: m(4)\\n            m = (/ 1, 0, 0, 2 /)\\n            WRITE(*, FMT=\\"(4(I0, \' \'))\\") pack(m, m /= 0, (/ 0, 0, 3, 4 /))  ! \\"1 2 3 4\\"\\n          END PROGRAM\\n</pre>\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n\\n### See also\\n<a href=\\"UNPACK.html#UNPACK\\">UNPACK</a>\\n"},"NEW_LINE":{"doc":"`NEW_LINE` — New line character\\n\\n### Description\\n`NEW_LINE(C)` returns the new-line character.\\n\\n\\n\\n### Syntax\\n`RESULT = NEW_LINE(C)`\\n\\n\\n### Arguments\\n\\n     \\n | `C`     | The argument shall be a scalar or array of the\\ntype `CHARACTER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nReturns a `CHARACTER` scalar of length one with the new-line character of\\nthe same kind as parameter `C`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram newline\\n\\n  implicit none\\n\\n  write(*,\'(A)\') \'This is record 1.\'//NEW_LINE(\'A\')//\'This is record 2.\'\\n\\nend program newline\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 2003 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n"},"DIM":{"doc":"`DIM` — Positive difference\\n\\n### Description\\n`DIM(X,Y)` returns the difference `X-Y` if the result is positive;\\notherwise returns zero.\\n\\n\\n\\n### Syntax\\n`RESULT = DIM(X, Y)`\\n\\n\\n### Arguments\\n\\n     \\n\\n\\n | `Y`  | The type shall be the same type and kind as `X`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` or `REAL`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_dim\\n\\n    integer :: i\\n\\n    real(8) :: x\\n\\n    i = dim(4, 15)\\n\\n    x = dim(4.345_8, 2.111_8)\\n\\n    print *, i\\n\\n    print *, x\\n\\nend program test_dim\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name              | Argument                | Return type        | Standard\\n\\n | `DIM(X,Y)`   | `REAL(4) X, Y`     | `REAL(4)`     | Fortran 77 and later\\n\\n | `IDIM(X,Y)`  | `INTEGER(4) X, Y`  | `INTEGER(4)`  | Fortran 77 and later\\n\\n | `DDIM(X,Y)`  | `REAL(8) X, Y`     | `REAL(8)`     | Fortran 77 and later\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"IBCLR":{"doc":"`IBCLR` — Clear bit\\n\\n### Description\\n`IBCLR` returns the value of `I` with the bit at position\\n`POS` set to zero.\\n\\n\\n\\n### Syntax\\n`RESULT = IBCLR(I, POS)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `POS`  | The type shall be `INTEGER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of the same kind as\\n`I`.\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"IBITS.html#IBITS\\">IBITS</a>, <a href=\\"IBSET.html#IBSET\\">IBSET</a>, <a href=\\"IAND.html#IAND\\">IAND</a>, <a href=\\"IOR.html#IOR\\">IOR</a>, <a href=\\"IEOR.html#IEOR\\">IEOR</a>, <a href=\\"MVBITS.html#MVBITS\\">MVBITS</a>\\n\\n   "},"TRANSPOSE":{"doc":"`TRANSPOSE` — Transpose an array of rank two\\n\\n### Description\\nTranspose an array of rank two. Element (i, j) of the result has the value\\n`MATRIX(j, i)`, for all i, j.\\n\\n\\n\\n### Syntax\\n`RESULT = TRANSPOSE(MATRIX)`\\n\\n\\n### Arguments\\n\\n     \\n | `MATRIX`  | Shall be an array of any type and have a rank of two.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe result has the same type as `MATRIX`, and has shape\\n`(/ m, n /)` if `MATRIX` has shape `(/ n, m /)`. \\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n"},"ISATTY":{"doc":"`ISATTY` — Whether a unit is a terminal device.\\n\\n### Description\\nDetermine whether a unit is connected to a terminal device.\\n\\n\\n\\n### Syntax\\n`RESULT = ISATTY(UNIT)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nReturns `.TRUE.` if the `UNIT` is connected to a terminal\\ndevice, `.FALSE.` otherwise.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_isatty\\n\\n  INTEGER(kind=1) :: unit\\n\\n  DO unit = 1, 10\\n\\n    write(*,*) isatty(unit=unit)\\n\\n  END DO\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nFunction\\n\\n\\n\\n### See also\\n<a href=\\"TTYNAM.html#TTYNAM\\">TTYNAM</a>\\n"},"SCALE":{"doc":"`SCALE` — Scale a real value\\n\\n### Description\\n`SCALE(X,I)` returns `X * RADIX(X)**I`.\\n\\n\\n\\n### Syntax\\n`RESULT = SCALE(X, I)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `I`  | The type of the argument shall be a `INTEGER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of the same type and kind as `X`. \\nIts value is `X * RADIX(X)**I`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_scale\\n\\n  real :: x = 178.1387e-4\\n\\n  integer :: i = 5\\n\\n  print *, scale(x,i), x*radix(x)**i\\n\\nend program test_scale\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"GERROR":{"doc":"`GERROR` — Get last system error message\\n\\n### Description\\nReturns the system error message corresponding to the last system error. \\nThis resembles the functionality of `strerror(3)` in C.\\n\\n\\n\\n### Syntax\\n`CALL GERROR(RESULT)`\\n\\n\\n### Arguments\\n\\n     \\n and of default\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_gerror\\n\\n  CHARACTER(len=100) :: msg\\n\\n  CALL gerror(msg)\\n\\n  WRITE(*,*) msg\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\n<a href=\\"IERRNO.html#IERRNO\\">IERRNO</a>, <a href=\\"PERROR.html#PERROR\\">PERROR</a>\\n"},"BESSEL_Y0":{"doc":"`BESSEL_Y0` — Bessel function of the second kind of order 0\\n\\n### Description\\n`BESSEL_Y0(X)` computes the Bessel function of the second kind of\\norder 0 of `X`. This function is available under the name\\n`BESY0` as a GNU extension.\\n\\n\\n\\n### Syntax\\n`RESULT = BESSEL_Y0(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `REAL`. It has the same kind as `X`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_besy0\\n\\n  real(8) :: x = 0.0_8\\n\\n  x = bessel_y0(x)\\n\\nend program test_besy0\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name             | Argument           | Return type        | Standard\\n\\n | `DBESY0(X)` | `REAL(8) X`   | `REAL(8)`     | GNU extension\\n\\n\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"ATOMIC_AND":{"doc":"`ATOMIC_AND` — Atomic bitwise AND operation\\n\\n### Description\\n`ATOMIC_AND(ATOM, VALUE)` atomically defines `ATOM` with the bitwise\\nAND between the values of `ATOM` and `VALUE`. When `STAT` is present\\nand the invokation was successful, it is assigned the value 0. If it is present\\nand the invokation has failed, it is assigned a positive value; in particular,\\nfor a coindexed `ATOM`, if the remote image has stopped, it is assigned the\\nvalue of `ISO_FORTRAN_ENV`\'s `STAT_STOPPED_IMAGE` and if the remote\\nimage has failed, the value `STAT_FAILED_IMAGE`.\\n\\n\\n\\n### Syntax\\n`CALL ATOMIC_AND (ATOM, VALUE [, STAT])`\\n\\n\\n### Arguments\\n\\n     \\n | `ATOM`    | Scalar coarray or coindexed variable of integer\\ntype with `ATOMIC_INT_KIND` kind. \\n\\n | `VALUE`   | Scalar of the same type as `ATOM`. If the kind\\nis different, the value is converted to the kind of `ATOM`. \\n\\n | `STAT`    | (optional) Scalar default-kind integer variable.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram atomic\\n\\n  use iso_fortran_env\\n\\n  integer(atomic_int_kind) :: atom[*]\\n\\n  call atomic_and (atom[1], int(b\'10100011101\'))\\n\\nend program atomic\\n\\n```\\n\\n\\n\\n### Standard\\nTS 18508 or later\\n\\n\\n\\n### Class\\nAtomic subroutine\\n\\n\\n\\n### See also\\n<a href=\\"ATOMIC_005fDEFINE.html#ATOMIC_005fDEFINE\\">ATOMIC_DEFINE</a>, <a href=\\"ATOMIC_005fFETCH_005fAND.html#ATOMIC_005fFETCH_005fAND\\">ATOMIC_FETCH_AND</a>, <a href=\\"ISO_005fFORTRAN_005fENV.html#ISO_005fFORTRAN_005fENV\\">ISO_FORTRAN_ENV</a>,\\n<a href=\\"ATOMIC_005fADD.html#ATOMIC_005fADD\\">ATOMIC_ADD</a>, <a href=\\"ATOMIC_005fOR.html#ATOMIC_005fOR\\">ATOMIC_OR</a>, <a href=\\"ATOMIC_005fXOR.html#ATOMIC_005fXOR\\">ATOMIC_XOR</a>\\n"},"EVENT_QUERY":{"doc":"`EVENT_QUERY` — Query whether a coarray event has occurred\\n\\n### Description\\n`EVENT_QUERY` assignes the number of events to `COUNT` which have been\\nposted to the `EVENT` variable and not yet been removed by calling\\n`EVENT WAIT`. When `STAT` is present and the invokation was successful,\\nit is assigned the value 0. If it is present and the invokation has failed,\\nit is assigned a positive value and `COUNT` is assigned the value -1.\\n\\n\\n\\n### Syntax\\n`CALL EVENT_QUERY (EVENT, COUNT [, STAT])`\\n\\n\\n### Arguments\\n\\n     \\n,\\ndefined in `ISO_FORTRAN_ENV`; shall not be coindexed. \\n\\n | `COUNT`   | (intent(out))Scalar integer with at least the\\nprecision of default integer. \\n\\n | `STAT`    | (optional) Scalar default-kind integer variable.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram atomic\\n\\n  use iso_fortran_env\\n\\n  implicit none\\n\\n  type(event_type) :: event_value_has_been_set[*]\\n\\n  integer :: cnt\\n\\n  if (this_image() == 1) then\\n\\n    call event_query (event_value_has_been_set, cnt)\\n\\n    if (cnt > 0) write(*,*) \\"Value has been set\\"\\n\\n  elseif (this_image() == 2) then\\n\\n    event post (event_value_has_been_set[1])\\n\\n  end if\\n\\nend program atomic\\n\\n```\\n\\n     \\n\\n### Standard\\nTS 18508 or later\\n\\n\\n\\n### Class\\n subroutine\\n\\n\\n"},"SYSTEM":{"doc":"`SYSTEM` — Execute a shell command\\n\\n### Description\\nPasses the command `COMMAND` to a shell (see `system(3)`). If\\nargument `STATUS` is present, it contains the value returned by\\n`system(3)`, which is presumably 0 if the shell command succeeded. \\nNote that which shell is used to invoke the command is system-dependent\\nand environment-dependent.\\n\\n     \\nThis intrinsic is provided in both subroutine and function forms;\\nhowever, only one form can be used in any given program unit.\\n\\n     \\n\\nNote that the `system` function need not be thread-safe. It is\\nthe responsibility of the user to ensure that `system` is not\\ncalled concurrently.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `STATUS = SYSTEM(COMMAND)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n type. \\n\\n | `STATUS`   | (Optional) Shall be of default `INTEGER` type.\\n\\n\\n\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n\\n### See also\\n<a href=\\"EXECUTE_005fCOMMAND_005fLINE.html#EXECUTE_005fCOMMAND_005fLINE\\">EXECUTE_COMMAND_LINE</a>, which is part of the Fortran 2008 standard\\nand should considered in new code for future portability. \\n"},"IACHAR":{"doc":"`IACHAR` — Code in <acronym>ASCII</acronym> collating sequence\\n\\n### Description\\n`IACHAR(C)` returns the code for the <acronym>ASCII</acronym> character\\nin the first character position of `C`.\\n\\n\\n\\n### Syntax\\n`RESULT = IACHAR(C [, KIND])`\\n\\n\\n### Arguments\\n\\n     \\n\\n\\n | `KIND`  | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of kind `KIND`. If\\n`KIND` is absent, the return value is of default integer kind.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_iachar\\n\\n  integer i\\n\\n  i = iachar(\' \')\\n\\nend program test_iachar\\n\\n```\\n\\n\\n\\n### Notes\\nSee <a href=\\"ICHAR.html#ICHAR\\">ICHAR</a> for a discussion of converting between numerical values\\nand formatted string representations.\\n\\n\\n\\n### Standard\\nFortran 95 and later, with `KIND` argument Fortran 2003 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"ACHAR.html#ACHAR\\">ACHAR</a>, <a href=\\"CHAR.html#CHAR\\">CHAR</a>, <a href=\\"ICHAR.html#ICHAR\\">ICHAR</a>\\n\\n   "},"PRODUCT":{"doc":"`PRODUCT` — Product of array elements\\n\\n### Description\\nMultiplies the elements of `ARRAY` along dimension `DIM` if\\nthe corresponding element in `MASK` is `TRUE`.\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `RESULT = PRODUCT(ARRAY, DIM[, MASK])`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n,\\n`REAL` or `COMPLEX`. \\n\\n | `DIM`    | (Optional) shall be a scalar of type\\n`INTEGER` with a value in the range from 1 to n, where n\\nequals the rank of `ARRAY`. \\n\\n | `MASK`   | (Optional) shall be of type `LOGICAL`and either be a scalar or an array of the same shape as `ARRAY`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe result is of the same type as `ARRAY`.\\n\\n     \\nIf `DIM` is absent, a scalar with the product of all elements in\\n`ARRAY` is returned. Otherwise, an array of rank n-1, where n equals\\nthe rank of `ARRAY`, and a shape similar to that of `ARRAY` with\\ndimension `DIM` dropped is returned.\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_product\\n\\n  INTEGER :: x(5) = (/ 1, 2, 3, 4 ,5 /)\\n\\n  print *, PRODUCT(x)                    ! all elements, product = 120\\n\\n  print *, PRODUCT(x, MASK=MOD(x, 2)==1) ! odd elements, product = 15\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n\\n### See also\\n<a href=\\"SUM.html#SUM\\">SUM</a>\\n"},"XOR":{"doc":"`XOR` — Bitwise logical exclusive OR\\n\\n### Description\\nBitwise logical exclusive or.\\n\\n     \\nThis intrinsic routine is provided for backwards compatibility with\\nGNU Fortran 77.  For integer arguments, programmers should consider\\nthe use of the <a href=\\"IEOR.html#IEOR\\">IEOR</a> intrinsic and for logical arguments the\\n`.NEQV.` operator, which are both defined by the Fortran standard.\\n\\n\\n\\n\\n### Syntax\\n`RESULT = XOR(I, J)`\\n\\n\\n### Arguments\\n\\n     \\n\\ntype or a scalar `LOGICAL` type. \\n\\n | `J`  | The type shall be the same as the type of `I`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return type is either a scalar `INTEGER` or a scalar\\n`LOGICAL`.  If the kind type parameters differ, then the\\nsmaller kind type is implicitly converted to larger kind, and the\\nreturn has the larger kind.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_xor\\n\\n  LOGICAL :: T = .TRUE., F = .FALSE.\\n\\n  INTEGER :: a, b\\n\\n  DATA a / Z\'F\' /, b / Z\'3\' /\\n\\n\\n  WRITE (*,*) XOR(T, T), XOR(T, F), XOR(F, T), XOR(F, F)\\n\\n  WRITE (*,*) XOR(a, b)\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nFunction\\n\\n\\n\\n### See also\\nFortran 95 elemental function: <a href=\\"IEOR.html#IEOR\\">IEOR</a>\\n"},"MAXEXPONENT":{"doc":"`MAXEXPONENT` — Maximum exponent of a real kind\\n\\n### Description\\n`MAXEXPONENT(X)` returns the maximum exponent in the model of the\\ntype of `X`.\\n\\n\\n\\n### Syntax\\n`RESULT = MAXEXPONENT(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of the default integer\\nkind.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram exponents\\n\\n  real(kind=4) :: x\\n\\n  real(kind=8) :: y\\n\\n\\n  print *, minexponent(x), maxexponent(x)\\n\\n  print *, minexponent(y), maxexponent(y)\\n\\nend program exponents\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n"},"ERFC":{"doc":"`ERFC` — Error function\\n\\n### Description\\n`ERFC(X)` computes the complementary error function of `X`.\\n\\n\\n\\n### Syntax\\n`RESULT = ERFC(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `REAL` and of the same kind as `X`. \\nIt lies in the range  0 \\\\leq erfc (x) \\\\leq 2 .\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_erfc\\n\\n  real(8) :: x = 0.17_8\\n\\n  x = erfc(x)\\n\\nend program test_erfc\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name             | Argument           | Return type        | Standard\\n\\n | `DERFC(X)`  | `REAL(8) X`   | `REAL(8)`     | GNU extension\\n\\n\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"FTELL":{"doc":"`FTELL` — Current stream position\\n\\n### Description\\nRetrieves the current position within an open file.\\n\\n     \\nThis intrinsic is provided in both subroutine and function forms; however,\\nonly one form can be used in any given program unit.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `OFFSET = FTELL(UNIT)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `UNIT`     | Shall of type `INTEGER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nIn either syntax, `OFFSET` is set to the current offset of unit\\nnumber `UNIT`, or to -1 if the unit is not currently open.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_ftell\\n\\n  INTEGER :: i\\n\\n  OPEN(10, FILE=\\"temp.dat\\")\\n\\n  CALL ftell(10,i)\\n\\n  WRITE(*,*) i\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n\\n### See also\\n<a href=\\"FSEEK.html#FSEEK\\">FSEEK</a>\\n"},"CPU_TIME":{"doc":"`CPU_TIME` — CPU elapsed time in seconds\\n\\n### Description\\nReturns a `REAL` value representing the elapsed CPU time in\\nseconds.  This is useful for testing segments of code to determine\\nexecution time.\\n\\n     \\nIf a time source is available, time will be reported with microsecond\\nresolution. If no time source is available, `TIME` is set to\\n`-1.0`.\\n\\n     \\n\\nNote that `TIME` may contain a, system dependent, arbitrary offset\\nand may not start with `0.0`. For `CPU_TIME`, the absolute\\nvalue is meaningless, only differences between subsequent calls to\\nthis subroutine, as shown in the example below, should be used.\\n\\n\\n\\n\\n### Syntax\\n`CALL CPU_TIME(TIME)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nNone\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_cpu_time\\n\\n    real :: start, finish\\n\\n    call cpu_time(start)\\n\\n        ! put code to test here\\n\\n    call cpu_time(finish)\\n\\n    print \'(\\"Time = \\",f6.3,\\" seconds.\\")\',finish-start\\n\\nend program test_cpu_time\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\n<a href=\\"SYSTEM_005fCLOCK.html#SYSTEM_005fCLOCK\\">SYSTEM_CLOCK</a>, <a href=\\"DATE_005fAND_005fTIME.html#DATE_005fAND_005fTIME\\">DATE_AND_TIME</a>\\n"},"IALL":{"doc":"`IALL` — Bitwise AND of array elements\\n\\n### Description\\nReduces with bitwise AND the elements of `ARRAY` along dimension `DIM`\\nif the corresponding element in `MASK` is `TRUE`.\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `RESULT = IALL(ARRAY, DIM[, MASK])`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n\\n\\n | `DIM`    | (Optional) shall be a scalar of type\\n`INTEGER` with a value in the range from 1 to n, where n\\nequals the rank of `ARRAY`. \\n\\n | `MASK`   | (Optional) shall be of type `LOGICAL`and either be a scalar or an array of the same shape as `ARRAY`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe result is of the same type as `ARRAY`.\\n\\n     \\nIf `DIM` is absent, a scalar with the bitwise ALL of all elements in\\n`ARRAY` is returned. Otherwise, an array of rank n-1, where n equals\\nthe rank of `ARRAY`, and a shape similar to that of `ARRAY` with\\ndimension `DIM` dropped is returned.\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_iall\\n\\n  INTEGER(1) :: a(2)\\n\\n\\n  a(1) = b\'00100100\'\\n\\n  a(2) = b\'01101010\'\\n\\n\\n  ! prints 00100000\\n\\n  PRINT \'(b8.8)\', IALL(a)\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n\\n### See also\\n<a href=\\"IANY.html#IANY\\">IANY</a>, <a href=\\"IPARITY.html#IPARITY\\">IPARITY</a>, <a href=\\"IAND.html#IAND\\">IAND</a>\\n"},"PERROR":{"doc":"`PERROR` — Print system error message\\n\\n### Description\\nPrints (on the C `stderr` stream) a newline-terminated error\\nmessage corresponding to the last system error. This is prefixed by\\n`STRING`, a colon and a space. See `perror(3)`.\\n\\n\\n\\n### Syntax\\n`CALL PERROR(STRING)`\\n\\n\\n### Arguments\\n\\n     \\n and of the\\ndefault kind.\\n\\n\\n\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\n<a href=\\"IERRNO.html#IERRNO\\">IERRNO</a>\\n"},"COMPILER_OPTIONS":{"doc":"`COMPILER_OPTIONS` — Options passed to the compiler\\n\\n### Description\\n`COMPILER_OPTIONS` returns a string with the options used for\\ncompiling.\\n\\n\\n\\n### Syntax\\n`STR = COMPILER_OPTIONS()`\\n\\n\\n### Arguments\\nNone.\\n\\n\\n\\n### Return value\\nThe return value is a default-kind string with system-dependent length. \\nIt contains the compiler flags used to compile the file, which called\\nthe `COMPILER_OPTIONS` intrinsic.\\n\\n\\n\\n### Example\\n```\\n\\n\\nuse iso_fortran_env\\n\\nprint \'(4a)\', \'This file was compiled by \', &\\n\\n              compiler_version(), \' using the options \', &\\n\\n              compiler_options()\\n\\nend\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 2008\\n\\n\\n\\n### Class\\nInquiry function of the module `ISO_FORTRAN_ENV`\\n\\n\\n### See also\\n<a href=\\"COMPILER_005fVERSION.html#COMPILER_005fVERSION\\">COMPILER_VERSION</a>, <a href=\\"ISO_005fFORTRAN_005fENV.html#ISO_005fFORTRAN_005fENV\\">ISO_FORTRAN_ENV</a>\\n"},"TRANSFER":{"doc":"`TRANSFER` — Transfer bit patterns\\n\\n### Description\\nInterprets the bitwise representation of `SOURCE` in memory as if it\\nis the representation of a variable or array of the same type and type\\nparameters as `MOLD`.\\n\\n     \\nThis is approximately equivalent to the C concept of <em>casting</em> one\\ntype to another.\\n\\n\\n\\n\\n### Syntax\\n`RESULT = TRANSFER(SOURCE, MOLD[, SIZE])`\\n\\n\\n### Arguments\\n\\n     \\n | `SOURCE`  | Shall be a scalar or an array of any type. \\n\\n | `MOLD`    | Shall be a scalar or an array of any type. \\n\\n | `SIZE`    | (Optional) shall be a scalar of type\\n`INTEGER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe result has the same type as `MOLD`, with the bit level\\nrepresentation of `SOURCE`.  If `SIZE` is present, the result is\\na one-dimensional array of length `SIZE`.  If `SIZE` is absent\\nbut `MOLD` is an array (of any size or shape), the result is a one-\\ndimensional array of the minimum length needed to contain the entirety\\nof the bitwise representation of `SOURCE`.   If `SIZE` is absent\\nand `MOLD` is a scalar, the result is a scalar.\\n\\n     \\nIf the bitwise representation of the result is longer than that of\\n`SOURCE`, then the leading bits of the result correspond to those of\\n`SOURCE` and any trailing bits are filled arbitrarily.\\n\\n     \\n\\nWhen the resulting bit representation does not correspond to a valid\\nrepresentation of a variable of the same type as `MOLD`, the results\\nare undefined, and subsequent operations on the result cannot be\\nguaranteed to produce sensible behavior.  For example, it is possible to\\ncreate `LOGICAL` variables for which `VAR` and\\n`.NOT.``VAR` both appear to be true.\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_transfer\\n\\n  integer :: x = 2143289344\\n\\n  print *, transfer(x, 1.0)    ! prints \\"NaN\\" on i686\\n\\nEND PROGRAM\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n"},"ACHAR":{"doc":"`ACHAR` — Character in <acronym>ASCII</acronym> collating sequence\\n\\n### Description\\n`ACHAR(I)` returns the character located at position `I`in the <acronym>ASCII</acronym> collating sequence.\\n\\n\\n\\n### Syntax\\n`RESULT = ACHAR(I [, KIND])`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `KIND`  | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `CHARACTER` with a length of one. \\nIf the `KIND` argument is present, the return value is of the\\nspecified kind and of the default kind otherwise.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_achar\\n\\n  character c\\n\\n  c = achar(32)\\n\\nend program test_achar\\n\\n```\\n\\n\\n\\n### Notes\\nSee <a href=\\"ICHAR.html#ICHAR\\">ICHAR</a> for a discussion of converting between numerical values\\nand formatted string representations.\\n\\n\\n\\n### Standard\\nFortran 77 and later, with `KIND` argument Fortran 2003 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"CHAR.html#CHAR\\">CHAR</a>, <a href=\\"IACHAR.html#IACHAR\\">IACHAR</a>, <a href=\\"ICHAR.html#ICHAR\\">ICHAR</a>\\n\\n   "},"SHAPE":{"doc":"`SHAPE` — Determine the shape of an array\\n\\n### Description\\nDetermines the shape of an array.\\n\\n\\n\\n### Syntax\\n`RESULT = SHAPE(SOURCE [, KIND])`\\n\\n\\n### Arguments\\n\\n     \\n | `SOURCE`  | Shall be an array or scalar of any type. \\nIf `SOURCE` is a pointer it must be associated and allocatable\\narrays must be allocated. \\n\\n | `KIND`    | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nAn `INTEGER` array of rank one with as many elements as `SOURCE`\\nhas dimensions. The elements of the resulting array correspond to the extend\\nof `SOURCE` along the respective dimensions. If `SOURCE` is a scalar,\\nthe result is the rank one array of size zero. If `KIND` is absent, the\\nreturn value has the default integer kind otherwise the specified kind.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_shape\\n\\n  INTEGER, DIMENSION(-1:1, -1:2) :: A\\n\\n  WRITE(*,*) SHAPE(A)             ! (/ 3, 4 /)\\n\\n  WRITE(*,*) SIZE(SHAPE(42))      ! (/ /)\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later, with `KIND` argument Fortran 2003 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n\\n### See also\\n<a href=\\"RESHAPE.html#RESHAPE\\">RESHAPE</a>, <a href=\\"SIZE.html#SIZE\\">SIZE</a>\\n"},"IMAGE_INDEX":{"doc":"`IMAGE_INDEX` — Function that converts a cosubscript to an image index\\n\\n### Description\\nReturns the image index belonging to a cosubscript.\\n\\n\\n\\n### Syntax\\n`RESULT = IMAGE_INDEX(COARRAY, SUB)`\\n\\n\\n### Return value\\nScalar default integer with the value of the image index which corresponds\\nto the cosubscripts. For invalid cosubscripts the result is zero.\\n\\n\\n\\n### Example\\n```\\n\\n\\nINTEGER :: array[2,-1:4,8,*]\\n\\n! Writes  28 (or 0 if there are fewer than 28 images)\\n\\nWRITE (*,*) IMAGE_INDEX (array, [2,0,3,1])\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nInquiry function.\\n\\n\\n\\n### See also\\n<a href=\\"THIS_005fIMAGE.html#THIS_005fIMAGE\\">THIS_IMAGE</a>, <a href=\\"NUM_005fIMAGES.html#NUM_005fIMAGES\\">NUM_IMAGES</a>\\n"},"ACOSD":{"doc":"`ACOSD` — Arccosine function, degrees\\n\\n### Description\\nACOSD(X) computes the arccosine of X in degrees (inverse of COSD(X)).\\nThis function is for compatibility only and should be avoided in favor of standard constructs wherever possible.\\n### Standard\\nGNU Extension, enabled with -fdec-math\\n### Class\\nElemental function\\n### Syntax\\nRESULT = ACOSD(X)\\n### Arguments\\n- X: The type shall either be REAL with a magnitude that is less than or equal to one - or the type shall be COMPLEX.\\n### Return value\\nThe return value is of the same type and kind as X. The real part of the result is in degrees and lies in the range 0 \\\\leq \\\\Re \\\\acos(x) \\\\leq 180.\\n"},"SHIFTA":{"doc":"`SHIFTA` — Right shift with fill\\n\\n### Description\\n`SHIFTA` returns a value corresponding to `I` with all of the\\nbits shifted right by `SHIFT` places.  If the absolute value of\\n`SHIFT` is greater than `BIT_SIZE(I)`, the value is undefined. \\nBits shifted out from the right end are lost. The fill is arithmetic: the\\nbits shifted in from the left end are equal to the leftmost bit, which in\\ntwo\'s complement representation is the sign bit.\\n\\n\\n\\n### Syntax\\n`RESULT = SHIFTA(I, SHIFT)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `SHIFT`  | The type shall be `INTEGER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of the same kind as\\n`I`.\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"SHIFTL.html#SHIFTL\\">SHIFTL</a>, <a href=\\"SHIFTR.html#SHIFTR\\">SHIFTR</a>\\n"},"FPUT":{"doc":"`FPUT` — Write a single character in stream mode to stdout\\n\\n### Description\\nWrite a single character in stream mode to stdout by bypassing normal\\nformatted output. Stream I/O should not be mixed with normal record-oriented\\n(formatted or unformatted) I/O on the same unit; the results are unpredictable.\\n\\n     \\nThis intrinsic is provided in both subroutine and function forms; however,\\nonly one form can be used in any given program unit.\\n\\n     \\n\\nNote that the `FGET` intrinsic is provided for backwards compatibility with\\n*g77*.  GNU Fortran provides the Fortran 2003 Stream facility. \\nProgrammers should consider the use of new stream IO feature in new code\\nfor future portability. See also <a href=\\"Fortran-2003-status.html#Fortran-2003-status\\">Fortran 2003 status</a>.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `STATUS = FPUT(C)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n and of default\\nkind. \\n\\n | `STATUS`  | (Optional) status flag of type `INTEGER`. \\nReturns 0 on success, -1 on end-of-file and a system specific positive\\nerror code otherwise.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_fput\\n\\n  CHARACTER(len=10) :: str = \\"gfortran\\"\\n\\n  INTEGER :: i\\n\\n  DO i = 1, len_trim(str)\\n\\n    CALL fput(str(i:i))\\n\\n  END DO\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n\\n### See also\\n<a href=\\"FPUTC.html#FPUTC\\">FPUTC</a>, <a href=\\"FGET.html#FGET\\">FGET</a>, <a href=\\"FGETC.html#FGETC\\">FGETC</a>\\n"},"BTEST":{"doc":"`BTEST` — Bit test function\\n\\n### Description\\n`BTEST(I,POS)` returns logical `.TRUE.` if the bit at `POS`\\nin `I` is set.  The counting of the bits starts at 0.\\n\\n\\n\\n### Syntax\\n`RESULT = BTEST(I, POS)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `POS`  | The type shall be `INTEGER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `LOGICAL`\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_btest\\n\\n    integer :: i = 32768 + 1024 + 64\\n\\n    integer :: pos\\n\\n    logical :: bool\\n\\n    do pos=0,16\\n\\n        bool = btest(i, pos)\\n\\n        print *, pos, bool\\n\\n    end do\\n\\nend program test_btest\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"POPPAR":{"doc":"`POPPAR` — Parity of the number of bits set\\n\\n### Description\\n`POPPAR(I)` returns parity of the integer `I`, i.e. the parity\\nof the number of bits set (\'1\' bits) in the binary representation of\\n`I`. It is equal to 0 if `I` has an even number of bits set,\\nand 1 for an odd number of \'1\' bits.\\n\\n\\n\\n### Syntax\\n`RESULT = POPPAR(I)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of the default integer\\nkind.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_population\\n\\n  print *, popcnt(127),       poppar(127)\\n\\n  print *, popcnt(huge(0_4)), poppar(huge(0_4))\\n\\n  print *, popcnt(huge(0_8)), poppar(huge(0_8))\\n\\nend program test_population\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"POPCNT.html#POPCNT\\">POPCNT</a>, <a href=\\"LEADZ.html#LEADZ\\">LEADZ</a>, <a href=\\"TRAILZ.html#TRAILZ\\">TRAILZ</a>\\n\\n\\n"},"C_SIZEOF":{"doc":"`C_SIZEOF` — Size in bytes of an expression\\n\\n### Description\\n`C_SIZEOF(X)` calculates the number of bytes of storage the\\nexpression `X` occupies.\\n\\n\\n\\n### Syntax\\n`N = C_SIZEOF(X)`\\n\\n\\n### Arguments\\n\\n     \\n | `X`  | The argument shall be an interoperable data entity.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type integer and of the system-dependent kind\\n`C_SIZE_T` (from the `ISO_C_BINDING` module). Its value is the\\nnumber of bytes occupied by the argument.  If the argument has the\\n`POINTER` attribute, the number of bytes of the storage area pointed\\nto is returned.  If the argument is of a derived type with `POINTER`or `ALLOCATABLE` components, the return value does not account for\\nthe sizes of the data pointed to by these components.\\n\\n\\n\\n### Example\\n```\\n\\n\\nuse iso_c_binding\\n\\ninteger(c_int) :: i\\n\\nreal(c_float) :: r, s(5)\\n\\nprint *, (c_sizeof(s)/c_sizeof(r) == 5)\\n\\nend\\n\\n```\\n\\n     \\nThe example will print `.TRUE.` unless you are using a platform\\nwhere default `REAL` variables are unusually padded.\\n\\n\\n\\n\\n### Standard\\nFortran 2008\\n\\n\\n\\n### Class\\nInquiry function of the module `ISO_C_BINDING`\\n\\n\\n### See also\\n<a href=\\"SIZEOF.html#SIZEOF\\">SIZEOF</a>, <a href=\\"STORAGE_005fSIZE.html#STORAGE_005fSIZE\\">STORAGE_SIZE</a>\\n"},"ATOMIC_ADD":{"doc":"`ATOMIC_ADD` — Atomic ADD operation\\n\\n### Description\\n`ATOMIC_ADD(ATOM, VALUE)` atomically adds the value of `VAR` to the\\nvariable `ATOM`. When `STAT` is present and the invokation was\\nsuccessful, it is assigned the value 0. If it is present and the invokation\\nhas failed, it is assigned a positive value; in particular, for a coindexed\\n`ATOM`, if the remote image has stopped, it is assigned the value of\\n`ISO_FORTRAN_ENV`\'s `STAT_STOPPED_IMAGE` and if the remote image has\\nfailed, the value `STAT_FAILED_IMAGE`.\\n\\n\\n\\n### Syntax\\n`CALL ATOMIC_ADD (ATOM, VALUE [, STAT])`\\n\\n\\n### Arguments\\n\\n     \\n | `ATOM`    | Scalar coarray or coindexed variable of integer\\ntype with `ATOMIC_INT_KIND` kind. \\n\\n | `VALUE`   | Scalar of the same type as `ATOM`. If the kind\\nis different, the value is converted to the kind of `ATOM`. \\n\\n | `STAT`    | (optional) Scalar default-kind integer variable.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram atomic\\n\\n  use iso_fortran_env\\n\\n  integer(atomic_int_kind) :: atom[*]\\n\\n  call atomic_add (atom[1], this_image())\\n\\nend program atomic\\n\\n```\\n\\n\\n\\n### Standard\\nTS 18508 or later\\n\\n\\n\\n### Class\\nAtomic subroutine\\n\\n\\n\\n### See also\\n<a href=\\"ATOMIC_005fDEFINE.html#ATOMIC_005fDEFINE\\">ATOMIC_DEFINE</a>, <a href=\\"ATOMIC_005fFETCH_005fADD.html#ATOMIC_005fFETCH_005fADD\\">ATOMIC_FETCH_ADD</a>, <a href=\\"ISO_005fFORTRAN_005fENV.html#ISO_005fFORTRAN_005fENV\\">ISO_FORTRAN_ENV</a>,\\n<a href=\\"ATOMIC_005fAND.html#ATOMIC_005fAND\\">ATOMIC_AND</a>, <a href=\\"ATOMIC_005fOR.html#ATOMIC_005fOR\\">ATOMIC_OR</a>, <a href=\\"ATOMIC_005fXOR.html#ATOMIC_005fXOR\\">ATOMIC_XOR</a>\\n"},"TAND":{"doc":"`TAND` — Tangent function, degrees\\n\\n### Description\\nTAND(X) computes the tangent of X in degrees.\\nThis function is for compatibility only and should be avoided in favor of standard constructs wherever possible.\\n### Standard\\nGNU Extension, enabled with -fdec-math\\n### Class\\nElemental function\\n### Syntax\\nRESULT = TAND(X)\\n### Arguments\\n- X: The type shall be REAL or COMPLEX.\\n### Return value\\nThe return value has same type and kind as X, and its value is in degrees.\\n"},"ACOSH":{"doc":"`ACOSH` — Inverse hyperbolic cosine function\\n\\n### Description\\n`ACOSH(X)` computes the inverse hyperbolic cosine of `X`.\\n\\n\\n\\n### Syntax\\n`RESULT = ACOSH(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value has the same type and kind as `X`. If `X` is\\ncomplex, the imaginary part of the result is in radians and lies between\\n 0 \\\\leq \\\\Im \\\\acosh(x) \\\\leq \\\\pi.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_acosh\\n\\n  REAL(8), DIMENSION(3) :: x = (/ 1.0, 2.0, 3.0 /)\\n\\n  WRITE (*,*) ACOSH(x)\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name              | Argument           | Return type        | Standard\\n\\n | `DACOSH(X)`  | `REAL(8) X`   | `REAL(8)`     | GNU extension\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\nInverse function: <a href=\\"COSH.html#COSH\\">COSH</a>\\n"},"SELECTED_REAL_KIND":{"doc":"`SELECTED_REAL_KIND` — Choose real kind\\n\\n### Description\\n`SELECTED_REAL_KIND(P,R)` returns the kind value of a real data type\\nwith decimal precision of at least `P` digits, exponent range of\\nat least `R`, and with a radix of `RADIX`.\\n\\n\\n\\n### Syntax\\n`RESULT = SELECTED_REAL_KIND([P, R, RADIX])`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `R`  | (Optional) shall be a scalar and of type `INTEGER`. \\n\\n | `RADIX`  | (Optional) shall be a scalar and of type `INTEGER`.\\n\\n\\nBefore Fortran 2008, at least one of the arguments `R` or `P` shall\\nbe present; since Fortran 2008, they are assumed to be zero if absent.\\n\\n\\n\\n\\n### Return value\\n\\n`SELECTED_REAL_KIND` returns the value of the kind type parameter of\\na real data type with decimal precision of at least `P` digits, a\\ndecimal exponent range of at least `R`, and with the requested\\n`RADIX`. If the `RADIX` parameter is absent, real kinds with\\nany radix can be returned. If more than one real data type meet the\\ncriteria, the kind of the data type with the smallest decimal precision\\nis returned. If no real data type matches the criteria, the result is\\n          <dl>\\n**-1 if the processor does not support a real data type with a** precision greater than or equal to `P`, but the `R` and\\n`RADIX` requirements can be fulfilled\\n\\n**-2 if the processor does not support a real type with an exponent** range greater than or equal to `R`, but `P` and `RADIX`are fulfillable\\n\\n**-3 if `RADIX` but not `P` and `R` requirements** are fulfillable\\n\\n**-4 if `RADIX` and either `P` or `R` requirements** are fulfillable\\n\\n<dt>-5 if there is no real type with the given `RADIX`</dt><dd></dd></dl>\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram real_kinds\\n\\n  integer,parameter :: p6 = selected_real_kind(6)\\n\\n  integer,parameter :: p10r100 = selected_real_kind(10,100)\\n\\n  integer,parameter :: r400 = selected_real_kind(r=400)\\n\\n  real(kind=p6) :: x\\n\\n  real(kind=p10r100) :: y\\n\\n  real(kind=r400) :: z\\n\\n\\n  print *, precision(x), range(x)\\n\\n  print *, precision(y), range(y)\\n\\n  print *, precision(z), range(z)\\n\\nend program real_kinds\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later, with `RADIX` Fortran 2008 or later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n\\n### See also\\n<a href=\\"PRECISION.html#PRECISION\\">PRECISION</a>, <a href=\\"RANGE.html#RANGE\\">RANGE</a>, <a href=\\"RADIX.html#RADIX\\">RADIX</a>\\n\\n\\n"},"FGETC":{"doc":"`FGETC` — Read a single character in stream mode\\n\\n### Description\\nRead a single character in stream mode by bypassing normal formatted output. \\nStream I/O should not be mixed with normal record-oriented (formatted or\\nunformatted) I/O on the same unit; the results are unpredictable.\\n\\n     \\nThis intrinsic is provided in both subroutine and function forms; however,\\nonly one form can be used in any given program unit.\\n\\n     \\n\\nNote that the `FGET` intrinsic is provided for backwards compatibility\\nwith *g77*.  GNU Fortran provides the Fortran 2003 Stream facility. \\nProgrammers should consider the use of new stream IO feature in new code\\nfor future portability. See also <a href=\\"Fortran-2003-status.html#Fortran-2003-status\\">Fortran 2003 status</a>.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `STATUS = FGETC(UNIT, C)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `C`       | The type shall be `CHARACTER` and of default\\nkind. \\n\\n | `STATUS`  | (Optional) status flag of type `INTEGER`. \\nReturns 0 on success, -1 on end-of-file and a system specific positive\\nerror code otherwise.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_fgetc\\n\\n  INTEGER :: fd = 42, status\\n\\n  CHARACTER :: c\\n\\n\\n  OPEN(UNIT=fd, FILE=\\"/etc/passwd\\", ACTION=\\"READ\\", STATUS = \\"OLD\\")\\n\\n  DO\\n\\n    CALL fgetc(fd, c, status)\\n\\n    IF (status /= 0) EXIT\\n\\n    call fput(c)\\n\\n  END DO\\n\\n  CLOSE(UNIT=fd)\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n\\n### See also\\n<a href=\\"FGET.html#FGET\\">FGET</a>, <a href=\\"FPUT.html#FPUT\\">FPUT</a>, <a href=\\"FPUTC.html#FPUTC\\">FPUTC</a>\\n"},"EXIT":{"doc":"`EXIT` — Exit the program with status.\\n\\n### Description\\n`EXIT` causes immediate termination of the program with status.  If status\\nis omitted it returns the canonical <em>success</em> for the system.  All Fortran\\nI/O units are closed.\\n\\n\\n\\n### Syntax\\n`CALL EXIT([STATUS])`\\n\\n\\n### Arguments\\n\\n     \\n of the default kind.\\n\\n\\n\\n\\n\\n\\n### Return value\\n`STATUS` is passed to the parent process on exit.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_exit\\n\\n  integer :: STATUS = 0\\n\\n  print *, \'This program is going to exit.\'\\n\\n  call EXIT(STATUS)\\n\\nend program test_exit\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\n<a href=\\"ABORT.html#ABORT\\">ABORT</a>, <a href=\\"KILL.html#KILL\\">KILL</a>\\n"},"SELECTED_CHAR_KIND":{"doc":"`SELECTED_CHAR_KIND` — Choose character kind\\n\\n### Description\\n\\n`SELECTED_CHAR_KIND(NAME)` returns the kind value for the character\\nset named `NAME`, if a character set with such a name is supported,\\nor -1 otherwise. Currently, supported character sets include\\n“ASCII” and “DEFAULT”, which are equivalent, and “ISO_10646”\\n(Universal Character Set, UCS-4) which is commonly known as Unicode.\\n\\n\\n\\n### Syntax\\n`RESULT = SELECTED_CHAR_KIND(NAME)`\\n\\n\\n### Arguments\\n\\n     \\n | `NAME`  | Shall be a scalar and of the default character type.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram character_kind\\n\\n  use iso_fortran_env\\n\\n  implicit none\\n\\n  integer, parameter :: ascii = selected_char_kind (\\"ascii\\")\\n\\n  integer, parameter :: ucs4  = selected_char_kind (\'ISO_10646\')\\n\\n\\n  character(kind=ascii, len=26) :: alphabet\\n\\n  character(kind=ucs4,  len=30) :: hello_world\\n\\n\\n  alphabet = ascii_\\"abcdefghijklmnopqrstuvwxyz\\"\\n\\n  hello_world = ucs4_\'Hello World and Ni Hao -- \' &\\n\\n                // char (int (z\'4F60\'), ucs4)     &\\n\\n                // char (int (z\'597D\'), ucs4)\\n\\n\\n  write (*,*) alphabet\\n\\n\\n  open (output_unit, encoding=\'UTF-8\')\\n\\n  write (*,*) trim (hello_world)\\n\\nend program character_kind\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 2003 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n"},"BLE":{"doc":"`BLE` — Bitwise less than or equal to\\n\\n### Description\\nDetermines whether an integral is a bitwise less than or equal to\\nanother.\\n\\n\\n\\n### Syntax\\n`RESULT = BLE(I, J)`\\n\\n\\n### Arguments\\n\\n     \\n type. \\n\\n | `J`  | Shall be of `INTEGER` type, and of the same kind\\nas `I`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `LOGICAL` and of the default kind.\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"BGT.html#BGT\\">BGT</a>, <a href=\\"BGE.html#BGE\\">BGE</a>, <a href=\\"BLT.html#BLT\\">BLT</a>\\n"},"MALLOC":{"doc":"`MALLOC` — Allocate dynamic memory\\n\\n### Description\\n`MALLOC(SIZE)` allocates `SIZE` bytes of dynamic memory and\\nreturns the address of the allocated memory. The `MALLOC` intrinsic\\nis an extension intended to be used with Cray pointers, and is provided\\nin GNU Fortran to allow the user to compile legacy code. For new code\\nusing Fortran 95 pointers, the memory allocation intrinsic is\\n`ALLOCATE`.\\n\\n\\n\\n### Syntax\\n`PTR = MALLOC(SIZE)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER(K)`, with `K` such that\\nvariables of type `INTEGER(K)` have the same size as\\nC pointers (`sizeof(void *)`).\\n\\n\\n\\n### Example\\nThe following example demonstrates the use of `MALLOC` and\\n`FREE` with Cray pointers.\\n\\n```\\n\\n\\nprogram test_malloc\\n\\n  implicit none\\n\\n  integer i\\n\\n  real*8 x(*), z\\n\\n  pointer(ptr_x,x)\\n\\n\\n  ptr_x = malloc(20*8)\\n\\n  do i = 1, 20\\n\\n    x(i) = sqrt(1.0d0 / i)\\n\\n  end do\\n\\n  z = 0\\n\\n  do i = 1, 20\\n\\n    z = z + x(i)\\n\\n    print *, z\\n\\n  end do\\n\\n  call free(ptr_x)\\n\\nend program test_malloc\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nFunction\\n\\n\\n\\n### See also\\n<a href=\\"FREE.html#FREE\\">FREE</a>\\n"},"C_ASSOCIATED":{"doc":"`C_ASSOCIATED` — Status of a C pointer\\n\\n### Description\\n`C_ASSOCIATED(c_ptr_1[, c_ptr_2])` determines the status of the C pointer\\n`c_ptr_1` or if `c_ptr_1` is associated with the target `c_ptr_2`.\\n\\n\\n\\n### Syntax\\n`RESULT = C_ASSOCIATED(c_ptr_1[, c_ptr_2])`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `c_ptr_2`  | (Optional) Scalar of the same type as `c_ptr_1`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `LOGICAL`; it is `.false.` if either\\n`c_ptr_1` is a C NULL pointer or if `c_ptr1` and `c_ptr_2`\\npoint to different addresses.\\n\\n\\n\\n### Example\\n```\\n\\n\\nsubroutine association_test(a,b)\\n\\n  use iso_c_binding, only: c_associated, c_loc, c_ptr\\n\\n  implicit none\\n\\n  real, pointer :: a\\n\\n  type(c_ptr) :: b\\n\\n  if(c_associated(b, c_loc(a))) &\\n\\n     stop \'b and a do not point to same target\'\\n\\nend subroutine association_test\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 2003 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n\\n### See also\\n<a href=\\"C_005fLOC.html#C_005fLOC\\">C_LOC</a>, <a href=\\"C_005fFUNLOC.html#C_005fFUNLOC\\">C_FUNLOC</a>\\n"},"IS_IOSTAT_EOR":{"doc":"`IS_IOSTAT_EOR` — Test for end-of-record value\\n\\n### Description\\n`IS_IOSTAT_EOR` tests whether an variable has the value of the I/O\\nstatus “end of record”. The function is equivalent to comparing the\\nvariable with the `IOSTAT_EOR` parameter of the intrinsic module\\n`ISO_FORTRAN_ENV`.\\n\\n\\n\\n### Syntax\\n`RESULT = IS_IOSTAT_EOR(I)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nReturns a `LOGICAL` of the default kind, which `.TRUE.` if\\n`I` has the value which indicates an end of file condition for\\n`IOSTAT=` specifiers, and is `.FALSE.` otherwise.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM iostat\\n\\n  IMPLICIT NONE\\n\\n  INTEGER :: stat, i(50)\\n\\n  OPEN(88, FILE=\'test.dat\', FORM=\'UNFORMATTED\')\\n\\n  READ(88, IOSTAT=stat) i\\n\\n  IF(IS_IOSTAT_EOR(stat)) STOP \'END OF RECORD\'\\n\\nEND PROGRAM\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 2003 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"FREE":{"doc":"`FREE` — Frees memory\\n\\n### Description\\nFrees memory previously allocated by `MALLOC`. The `FREE`intrinsic is an extension intended to be used with Cray pointers, and is\\nprovided in GNU Fortran to allow user to compile legacy code. For\\nnew code using Fortran 95 pointers, the memory de-allocation intrinsic is\\n`DEALLOCATE`.\\n\\n\\n\\n### Syntax\\n`CALL FREE(PTR)`\\n\\n\\n### Arguments\\n\\n     \\n. It represents the\\nlocation of the memory that should be de-allocated.\\n\\n\\n\\n\\n\\n\\n### Return value\\nNone\\n\\n\\n\\n### Example\\nSee `MALLOC` for an example.\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\n<a href=\\"MALLOC.html#MALLOC\\">MALLOC</a>\\n"},"COUNT":{"doc":"`COUNT` — Count function\\n\\n### Description\\n\\nCounts the number of `.TRUE.` elements in a logical `MASK`,\\nor, if the `DIM` argument is supplied, counts the number of\\nelements along each row of the array in the `DIM` direction. \\nIf the array has zero size, or all of the elements of `MASK` are\\n`.FALSE.`, then the result is `0`.\\n\\n\\n\\n### Syntax\\n`RESULT = COUNT(MASK [, DIM, KIND])`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `DIM`   | (Optional) The type shall be `INTEGER`. \\n\\n | `KIND`  | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of kind `KIND`. If\\n`KIND` is absent, the return value is of default integer kind. \\nIf `DIM` is present, the result is an array with a rank one less\\nthan the rank of `ARRAY`, and a size corresponding to the shape\\nof `ARRAY` with the `DIM` dimension removed.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_count\\n\\n    integer, dimension(2,3) :: a, b\\n\\n    logical, dimension(2,3) :: mask\\n\\n    a = reshape( (/ 1, 2, 3, 4, 5, 6 /), (/ 2, 3 /))\\n\\n    b = reshape( (/ 0, 7, 3, 4, 5, 8 /), (/ 2, 3 /))\\n\\n    print \'(3i3)\', a(1,:)\\n\\n    print \'(3i3)\', a(2,:)\\n\\n    print *\\n\\n    print \'(3i3)\', b(1,:)\\n\\n    print \'(3i3)\', b(2,:)\\n\\n    print *\\n\\n    mask = a.ne.b\\n\\n    print \'(3l3)\', mask(1,:)\\n\\n    print \'(3l3)\', mask(2,:)\\n\\n    print *\\n\\n    print \'(3i3)\', count(mask)\\n\\n    print *\\n\\n    print \'(3i3)\', count(mask, 1)\\n\\n    print *\\n\\n    print \'(3i3)\', count(mask, 2)\\n\\nend program test_count\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later, with `KIND` argument Fortran 2003 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n"},"CMPLX":{"doc":"`CMPLX` — Complex conversion function\\n\\n### Description\\n`CMPLX(X [, Y [, KIND]])` returns a complex number where `X` is converted to\\nthe real component.  If `Y` is present it is converted to the imaginary\\ncomponent.  If `Y` is not present then the imaginary component is set to\\n0.0.  If `X` is complex then `Y` must not be present.\\n\\n\\n\\n### Syntax\\n`RESULT = CMPLX(X [, Y [, KIND]])`\\n\\n\\n### Arguments\\n\\n     \\n,\\nor `COMPLEX`. \\n\\n | `Y`  | (Optional; only allowed if `X` is not\\n`COMPLEX`.)  May be `INTEGER` or `REAL`. \\n\\n | `KIND`  | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of `COMPLEX` type, with a kind equal to\\n`KIND` if it is specified.  If `KIND` is not specified, the\\nresult is of the default `COMPLEX` kind, regardless of the kinds of\\n`X` and `Y`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_cmplx\\n\\n    integer :: i = 42\\n\\n    real :: x = 3.14\\n\\n    complex :: z\\n\\n    z = cmplx(i, x)\\n\\n    print *, z, cmplx(x)\\n\\nend program test_cmplx\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 77 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"COMPLEX.html#COMPLEX\\">COMPLEX</a>\\n"},"RANK":{"doc":"`RANK` — Rank of a data object\\n\\n### Description\\n`RANK(A)` returns the rank of a scalar or array data object.\\n\\n\\n\\n### Syntax\\n`RESULT = RANK(A)`\\n\\n\\n### Arguments\\n\\n     \\n | `A`  | can be of any type\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of the default integer\\nkind. For arrays, their rank is returned; for scalars zero is returned.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_rank\\n\\n  integer :: a\\n\\n  real, allocatable :: b(:,:)\\n\\n\\n  print *, rank(a), rank(b) ! Prints:  0  2\\n\\nend program test_rank\\n\\n```\\n\\n     \\n\\n### Standard\\nTechnical Specification (TS) 29113\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n"},"MASKL":{"doc":"`MASKL` — Left justified mask\\n\\n### Description\\n`MASKL(I[, KIND])` has its leftmost `I` bits set to 1, and the\\nremaining bits set to 0.\\n\\n\\n\\n### Syntax\\n`RESULT = MASKL(I[, KIND])`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `KIND`  | Shall be a scalar constant expression of type\\n`INTEGER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER`. If `KIND` is present, it\\nspecifies the kind value of the return type; otherwise, it is of the\\ndefault integer kind.\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"MASKR.html#MASKR\\">MASKR</a>\\n"},"FINDLOC":{"doc":"`FINDLOC` — Search an array for a value\\n\\n### Description\\nDetermines the location of the element in the array with the value given in the VALUE argument, or, if the DIM argument is supplied, determines the locations of the maximum element along each row of the array in the DIM direction. If MASK is present, only the elements for which MASK is .TRUE. are considered. If more than one element in the array has the value VALUE, the location returned is that of the first such element in array element order if the BACK is not present or if it is .FALSE.. If BACK is true, the location returned is that of the last such element. If the array has zero size, or all of the elements of MASK are .FALSE., then the result is an array of zeroes. Similarly, if DIM is supplied and all of the elements of MASK along a given row are zero, the result value for that row is zero.\\n### Standard\\nFortran 2008 and later.\\n### Class\\nTransformational function\\n### Syntax\\nRESULT = FINDLOC(ARRAY, VALUE, DIM [, MASK] [,KIND] [,BACK])\\nRESULT = FINDLOC(ARRAY, VALUE, [, MASK] [,KIND] [,BACK])\\n### Arguments\\n- ARRAY: Shall be an array of intrinsic type.\\n- VALUE: A scalar of intrinsic type which is in type conformance with ARRAY.\\n- DIM: (Optional) Shall be a scalar of type INTEGER, with a value between one and the rank of ARRAY, inclusive. It may not be an optional dummy argument.\\n- KIND: (Optional) An INTEGER initialization expression indicating the kind parameter of the result.\\n- BACK: (Optional) A scalar of type LOGICAL.\\n### Return value\\nIf DIM is absent, the result is a rank-one array with a length equal to the rank of ARRAY. If DIM is present, the result is an array with a rank one less than the rank of ARRAY, and a size corresponding to the size of ARRAY with the DIM dimension removed. If DIM is present and ARRAY has a rank of one, the result is a scalar. If the optional argument KIND is present, the result is an integer of kind KIND, otherwise it is of default kind.\\n"},"CHMOD":{"doc":"`CHMOD` — Change access permissions of files\\n\\n### Description\\n`CHMOD` changes the permissions of a file.\\n\\n     \\nThis intrinsic is provided in both subroutine and function forms; however,\\nonly one form can be used in any given program unit.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `STATUS = CHMOD(NAME, MODE)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n\\n | `NAME`  | Scalar `CHARACTER` of default kind with the\\nfile name. Trailing blanks are ignored unless the character\\n`achar(0)` is present, then all characters up to and excluding\\n`achar(0)` are used as the file name.\\n\\n     \\n\\n\\n | `MODE`  | Scalar `CHARACTER` of default kind giving the\\nfile permission. `MODE` uses the same syntax as the `chmod` utility\\nas defined by the POSIX standard. The argument shall either be a string of\\na nonnegative octal number or a symbolic mode.\\n\\n     \\n\\n\\n | `STATUS`  | (optional) scalar `INTEGER`, which is\\n`0` on success and nonzero otherwise.\\n\\n\\n\\n\\n\\n\\n### Return value\\nIn either syntax, `STATUS` is set to `0` on success and nonzero\\notherwise.\\n\\n\\n\\n### Example\\n`CHMOD` as subroutine\\n```\\n\\n\\nprogram chmod_test\\n\\n  implicit none\\n\\n  integer :: status\\n\\n  call chmod(\'test.dat\',\'u+x\',status)\\n\\n  print *, \'Status: \', status\\n\\nend program chmod_test\\n\\n```\\n\\n     \\n`CHMOD` as function:\\n     \\n<pre class=\\"smallexample\\">          program chmod_test\\n            implicit none\\n            integer :: status\\n            status = chmod(\'test.dat\',\'u+x\')\\n            print *, \'Status: \', status\\n          end program chmod_test\\n</pre>\\n     \\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n"},"COSH":{"doc":"`COSH` — Hyperbolic cosine function\\n\\n### Description\\n`COSH(X)` computes the hyperbolic cosine of `X`.\\n\\n\\n\\n### Syntax\\n`X = COSH(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value has same type and kind as `X`. If `X` is\\ncomplex, the imaginary part of the result is in radians. If `X`\\nis `REAL`, the return value has a lower bound of one,\\n\\\\cosh (x) \\\\geq 1.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_cosh\\n\\n  real(8) :: x = 1.0_8\\n\\n  x = cosh(x)\\n\\nend program test_cosh\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name             | Argument           | Return type        | Standard\\n\\n | `COSH(X)`   | `REAL(4) X`   | `REAL(4)`     | Fortran 77 and later\\n\\n | `DCOSH(X)`  | `REAL(8) X`   | `REAL(8)`     | Fortran 77 and later\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later, for a complex argument Fortran 2008 or later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\nInverse function: <a href=\\"ACOSH.html#ACOSH\\">ACOSH</a>\\n\\n   "},"LSHIFT":{"doc":"`LSHIFT` — Left shift bits\\n\\n### Description\\n`LSHIFT` returns a value corresponding to `I` with all of the\\nbits shifted left by `SHIFT` places.  If the absolute value of\\n`SHIFT` is greater than `BIT_SIZE(I)`, the value is undefined. \\nBits shifted out from the left end are lost; zeros are shifted in from\\nthe opposite end.\\n\\n     \\nThis function has been superseded by the `ISHFT` intrinsic, which\\nis standard in Fortran 95 and later, and the `SHIFTL` intrinsic,\\nwhich is standard in Fortran 2008 and later.\\n\\n\\n\\n\\n### Syntax\\n`RESULT = LSHIFT(I, SHIFT)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `SHIFT`  | The type shall be `INTEGER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of the same kind as\\n`I`.\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"ISHFT.html#ISHFT\\">ISHFT</a>, <a href=\\"ISHFTC.html#ISHFTC\\">ISHFTC</a>, <a href=\\"RSHIFT.html#RSHIFT\\">RSHIFT</a>, <a href=\\"SHIFTA.html#SHIFTA\\">SHIFTA</a>, <a href=\\"SHIFTL.html#SHIFTL\\">SHIFTL</a>,\\n<a href=\\"SHIFTR.html#SHIFTR\\">SHIFTR</a>\\n\\n   "},"HUGE":{"doc":"`HUGE` — Largest number of a kind\\n\\n### Description\\n`HUGE(X)` returns the largest number that is not an infinity in\\nthe model of the type of `X`.\\n\\n\\n\\n### Syntax\\n`RESULT = HUGE(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of the same type and kind as `X`\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_huge_tiny\\n\\n  print *, huge(0), huge(0.0), huge(0.0d0)\\n\\n  print *, tiny(0.0), tiny(0.0d0)\\n\\nend program test_huge_tiny\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n"},"TIME":{"doc":"`TIME` — Time function\\n\\n### Description\\nReturns the current time encoded as an integer (in the manner of the\\nfunction `time(3)` in the C standard library). This value is\\nsuitable for passing to `CTIME`, `GMTIME`, and `LTIME`.\\n\\n     \\nThis intrinsic is not fully portable, such as to systems with 32-bit\\n`INTEGER` types but supporting times wider than 32 bits. Therefore,\\nthe values returned by this intrinsic might be, or become, negative, or\\nnumerically less than previous values, during a single run of the\\ncompiled program.\\n\\n     \\n\\nSee <a href=\\"TIME8.html#TIME8\\">TIME8</a>, for information on a similar intrinsic that might be\\nportable to more GNU Fortran implementations, though to fewer Fortran\\ncompilers.\\n\\n\\n\\n\\n### Syntax\\n`RESULT = TIME()`\\n\\n\\n### Return value\\nThe return value is a scalar of type `INTEGER(4)`.\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nFunction\\n\\n\\n\\n### See also\\n<a href=\\"CTIME.html#CTIME\\">CTIME</a>, <a href=\\"GMTIME.html#GMTIME\\">GMTIME</a>, <a href=\\"LTIME.html#LTIME\\">LTIME</a>, <a href=\\"MCLOCK.html#MCLOCK\\">MCLOCK</a>, <a href=\\"TIME8.html#TIME8\\">TIME8</a>\\n\\n   "},"SQRT":{"doc":"`SQRT` — Square-root function\\n\\n### Description\\n`SQRT(X)` computes the square root of `X`.\\n\\n\\n\\n### Syntax\\n`RESULT = SQRT(X)`\\n\\n\\n### Arguments\\n\\n     \\n or\\n`COMPLEX`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `REAL` or `COMPLEX`. \\nThe kind type parameter is the same as `X`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_sqrt\\n\\n  real(8) :: x = 2.0_8\\n\\n  complex :: z = (1.0, 2.0)\\n\\n  x = sqrt(x)\\n\\n  z = sqrt(z)\\n\\nend program test_sqrt\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name              | Argument              | Return type           | Standard\\n\\n | `SQRT(X)`    | `REAL(4) X`      | `REAL(4)`        | Fortran 95 and later\\n\\n | `DSQRT(X)`   | `REAL(8) X`      | `REAL(8)`        | Fortran 95 and later\\n\\n | `CSQRT(X)`   | `COMPLEX(4) X`   | `COMPLEX(4)`     | Fortran 95 and later\\n\\n | `ZSQRT(X)`   | `COMPLEX(8) X`   | `COMPLEX(8)`     | GNU extension\\n\\n | `CDSQRT(X)`  | `COMPLEX(8) X`   | `COMPLEX(8)`     | GNU extension\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"SIN":{"doc":"`SIN` — Sine function\\n\\n### Description\\n`SIN(X)` computes the sine of `X`.\\n\\n\\n\\n### Syntax\\n`RESULT = SIN(X)`\\n\\n\\n### Arguments\\n\\n     \\n or\\n`COMPLEX`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value has same type and kind as `X`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_sin\\n\\n  real :: x = 0.0\\n\\n  x = sin(x)\\n\\nend program test_sin\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name             | Argument              | Return type        | Standard\\n\\n | `SIN(X)`    | `REAL(4) X`      | `REAL(4)`     | f77, gnu\\n\\n | `DSIN(X)`   | `REAL(8) X`      | `REAL(8)`     | f95, gnu\\n\\n | `CSIN(X)`   | `COMPLEX(4) X`   | `COMPLEX(4)`  | f95, gnu\\n\\n | `ZSIN(X)`   | `COMPLEX(8) X`   | `COMPLEX(8)`  | f95, gnu\\n\\n | `CDSIN(X)`  | `COMPLEX(8) X`   | `COMPLEX(8)`  | f95, gnu\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"ASIN.html#ASIN\\">ASIN</a>\\n"},"TIME8":{"doc":"`TIME8` — Time function (64-bit)\\n\\n### Description\\nReturns the current time encoded as an integer (in the manner of the\\nfunction `time(3)` in the C standard library). This value is\\nsuitable for passing to `CTIME`, `GMTIME`, and `LTIME`.\\n\\n     \\n<em>Warning:</em> this intrinsic does not increase the range of the timing\\nvalues over that returned by `time(3)`. On a system with a 32-bit\\n`time(3)`, `TIME8` will return a 32-bit value, even though\\nit is converted to a 64-bit `INTEGER(8)` value. That means\\noverflows of the 32-bit value can still occur. Therefore, the values\\nreturned by this intrinsic might be or become negative or numerically\\nless than previous values during a single run of the compiled program.\\n\\n\\n\\n\\n### Syntax\\n`RESULT = TIME8()`\\n\\n\\n### Return value\\nThe return value is a scalar of type `INTEGER(8)`.\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nFunction\\n\\n\\n\\n### See also\\n<a href=\\"CTIME.html#CTIME\\">CTIME</a>, <a href=\\"GMTIME.html#GMTIME\\">GMTIME</a>, <a href=\\"LTIME.html#LTIME\\">LTIME</a>, <a href=\\"MCLOCK8.html#MCLOCK8\\">MCLOCK8</a>, <a href=\\"TIME.html#TIME\\">TIME</a>\\n\\n   "},"RADIX":{"doc":"`RADIX` — Base of a model number\\n\\n### Description\\n`RADIX(X)` returns the base of the model representing the entity `X`.\\n\\n\\n\\n### Syntax\\n`RESULT = RADIX(X)`\\n\\n\\n### Arguments\\n\\n     \\n\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is a scalar of type `INTEGER` and of the default\\ninteger kind.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_radix\\n\\n  print *, \\"The radix for the default integer kind is\\", radix(0)\\n\\n  print *, \\"The radix for the default real kind is\\", radix(0.0)\\n\\nend program test_radix\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n\\n### See also\\n<a href=\\"SELECTED_005fREAL_005fKIND.html#SELECTED_005fREAL_005fKIND\\">SELECTED_REAL_KIND</a>\\n\\n\\n"},"DOT_PRODUCT":{"doc":"`DOT_PRODUCT` — Dot product function\\n\\n### Description\\n`DOT_PRODUCT(VECTOR_A, VECTOR_B)` computes the dot product multiplication\\nof two vectors `VECTOR_A` and `VECTOR_B`.  The two vectors may be\\neither numeric or logical and must be arrays of rank one and of equal size. If\\nthe vectors are `INTEGER` or `REAL`, the result is\\n`SUM(VECTOR_A*VECTOR_B)`. If the vectors are `COMPLEX`, the result\\nis `SUM(CONJG(VECTOR_A)*VECTOR_B)`. If the vectors are `LOGICAL`,\\nthe result is `ANY(VECTOR_A .AND. VECTOR_B)`.\\n\\n\\n\\n### Syntax\\n`RESULT = DOT_PRODUCT(VECTOR_A, VECTOR_B)`\\n\\n\\n### Arguments\\n\\n     \\n, rank 1. \\n\\n | `VECTOR_B`  | The type shall be numeric if `VECTOR_A` is of numeric type or `LOGICAL` if `VECTOR_A` is of type `LOGICAL`. `VECTOR_B` shall be a rank-one array.\\n\\n\\n\\n\\n\\n\\n### Return value\\nIf the arguments are numeric, the return value is a scalar of numeric type,\\n`INTEGER`, `REAL`, or `COMPLEX`.  If the arguments are\\n`LOGICAL`, the return value is `.TRUE.` or `.FALSE.`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_dot_prod\\n\\n    integer, dimension(3) :: a, b\\n\\n    a = (/ 1, 2, 3 /)\\n\\n    b = (/ 4, 5, 6 /)\\n\\n    print \'(3i3)\', a\\n\\n    print *\\n\\n    print \'(3i3)\', b\\n\\n    print *\\n\\n    print *, dot_product(a,b)\\n\\nend program test_dot_prod\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n"},"ATOMIC_OR":{"doc":"`ATOMIC_OR` — Atomic bitwise OR operation\\n\\n### Description\\n`ATOMIC_OR(ATOM, VALUE)` atomically defines `ATOM` with the bitwise\\nAND between the values of `ATOM` and `VALUE`. When `STAT` is present\\nand the invokation was successful, it is assigned the value 0. If it is present\\nand the invokation has failed, it is assigned a positive value; in particular,\\nfor a coindexed `ATOM`, if the remote image has stopped, it is assigned the\\nvalue of `ISO_FORTRAN_ENV`\'s `STAT_STOPPED_IMAGE` and if the remote\\nimage has failed, the value `STAT_FAILED_IMAGE`.\\n\\n\\n\\n### Syntax\\n`CALL ATOMIC_OR (ATOM, VALUE [, STAT])`\\n\\n\\n### Arguments\\n\\n     \\n | `ATOM`    | Scalar coarray or coindexed variable of integer\\ntype with `ATOMIC_INT_KIND` kind. \\n\\n | `VALUE`   | Scalar of the same type as `ATOM`. If the kind\\nis different, the value is converted to the kind of `ATOM`. \\n\\n | `STAT`    | (optional) Scalar default-kind integer variable.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram atomic\\n\\n  use iso_fortran_env\\n\\n  integer(atomic_int_kind) :: atom[*]\\n\\n  call atomic_or (atom[1], int(b\'10100011101\'))\\n\\nend program atomic\\n\\n```\\n\\n\\n\\n### Standard\\nTS 18508 or later\\n\\n\\n\\n### Class\\nAtomic subroutine\\n\\n\\n\\n### See also\\n<a href=\\"ATOMIC_005fDEFINE.html#ATOMIC_005fDEFINE\\">ATOMIC_DEFINE</a>, <a href=\\"ATOMIC_005fFETCH_005fOR.html#ATOMIC_005fFETCH_005fOR\\">ATOMIC_FETCH_OR</a>, <a href=\\"ISO_005fFORTRAN_005fENV.html#ISO_005fFORTRAN_005fENV\\">ISO_FORTRAN_ENV</a>,\\n<a href=\\"ATOMIC_005fADD.html#ATOMIC_005fADD\\">ATOMIC_ADD</a>, <a href=\\"ATOMIC_005fOR.html#ATOMIC_005fOR\\">ATOMIC_OR</a>, <a href=\\"ATOMIC_005fXOR.html#ATOMIC_005fXOR\\">ATOMIC_XOR</a>\\n"},"INT8":{"doc":"`INT8` — Convert to 64-bit integer type\\n\\n### Description\\nConvert to a `KIND=8` integer type. This is equivalent to the\\nstandard `INT` intrinsic with an optional argument of\\n`KIND=8`, and is only included for backwards compatibility.\\n\\n\\n\\n### Syntax\\n`RESULT = INT8(A)`\\n\\n\\n### Arguments\\n\\n     \\n,\\n`REAL`, or `COMPLEX`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is a `INTEGER(8)` variable.\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"INT.html#INT\\">INT</a>, <a href=\\"INT2.html#INT2\\">INT2</a>, <a href=\\"LONG.html#LONG\\">LONG</a>\\n"},"IOR":{"doc":"`IOR` — Bitwise logical or\\n\\n### Description\\n`IOR` returns the bitwise Boolean inclusive-OR of `I` and\\n`J`.\\n\\n\\n\\n### Syntax\\n`RESULT = IOR(I, J)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `J`  | The type shall be `INTEGER`, of the same\\nkind as `I`.  (As a GNU extension, different kinds are also\\npermitted.)\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return type is `INTEGER`, of the same kind as the\\narguments.  (If the argument kinds differ, it is of the same kind as\\nthe larger argument.)\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"IEOR.html#IEOR\\">IEOR</a>, <a href=\\"IAND.html#IAND\\">IAND</a>, <a href=\\"IBITS.html#IBITS\\">IBITS</a>, <a href=\\"IBSET.html#IBSET\\">IBSET</a>, <a href=\\"IBCLR.html#IBCLR\\">IBCLR</a>, <a href=\\"NOT.html#NOT\\">NOT</a>\\n"},"LCOBOUND":{"doc":"`LCOBOUND` — Lower codimension bounds of an array\\n\\n### Description\\nReturns the lower bounds of a coarray, or a single lower cobound\\nalong the `DIM` codimension. \\n\\n\\n### Syntax\\n`RESULT = LCOBOUND(COARRAY [, DIM [, KIND]])`\\n\\n\\n### Arguments\\n\\n     \\n | `ARRAY`  | Shall be an coarray, of any type. \\n\\n | `DIM`  | (Optional) Shall be a scalar `INTEGER`. \\n\\n | `KIND`  | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of kind `KIND`. If\\n`KIND` is absent, the return value is of default integer kind. \\nIf `DIM` is absent, the result is an array of the lower cobounds of\\n`COARRAY`.  If `DIM` is present, the result is a scalar\\ncorresponding to the lower cobound of the array along that codimension.\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n\\n### See also\\n<a href=\\"UCOBOUND.html#UCOBOUND\\">UCOBOUND</a>, <a href=\\"LBOUND.html#LBOUND\\">LBOUND</a>\\n"},"ISHFT":{"doc":"`ISHFT` — Shift bits\\n\\n### Description\\n`ISHFT` returns a value corresponding to `I` with all of the\\nbits shifted `SHIFT` places.  A value of `SHIFT` greater than\\nzero corresponds to a left shift, a value of zero corresponds to no\\nshift, and a value less than zero corresponds to a right shift.  If the\\nabsolute value of `SHIFT` is greater than `BIT_SIZE(I)`, the\\nvalue is undefined.  Bits shifted out from the left end or right end are\\nlost; zeros are shifted in from the opposite end.\\n\\n\\n\\n### Syntax\\n`RESULT = ISHFT(I, SHIFT)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `SHIFT`  | The type shall be `INTEGER`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of the same kind as\\n`I`.\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"ISHFTC.html#ISHFTC\\">ISHFTC</a>\\n"},"CO_SUM":{"doc":"`CO_SUM` — Sum of values on the current set of images\\n\\n### Description\\n`CO_SUM` sums up the values of each element of `A` on all\\nimages of the current team.  If `RESULT_IMAGE` is present, the summed-up\\nvalues are returned in `A` on the specified image only and the value\\nof `A` on the other images become undefined.  If `RESULT_IMAGE` is\\nnot present, the value is returned on all images.  If the execution was\\nsuccessful and `STAT` is present, it is assigned the value zero.  If the\\nexecution failed, `STAT` gets assigned a nonzero value and, if present,\\n`ERRMSG` gets assigned a value describing the occurred error.\\n\\n\\n\\n### Syntax\\n`CALL CO_MIN(A [, RESULT_IMAGE, STAT, ERRMSG])`\\n\\n\\n### Arguments\\n\\n     \\n | `A`             | shall be an integer, real or complex variable,\\nwhich has the same type and type parameters on all images of the team. \\n\\n | `RESULT_IMAGE`  | (optional) a scalar integer expression; if\\npresent, it shall have the same the same value on all images and refer to an\\nimage of the current team. \\n\\n | `STAT`          | (optional) a scalar integer variable\\n\\n | `ERRMSG`        | (optional) a scalar character variable\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test\\n\\n  integer :: val\\n\\n  val = this_image ()\\n\\n  call co_sum (val, result_image=1)\\n\\n  if (this_image() == 1) then\\n\\n    write(*,*) \\"The sum is \\", val ! prints (n**2 + n)/2, with n = num_images()\\n\\n  end if\\n\\nend program test\\n\\n```\\n\\n\\n\\n### Standard\\nTechnical Specification (TS) 18508 or later\\n\\n\\n\\n### Class\\nCollective subroutine\\n\\n\\n\\n### See also\\n<a href=\\"CO_005fMAX.html#CO_005fMAX\\">CO_MAX</a>, <a href=\\"CO_005fMIN.html#CO_005fMIN\\">CO_MIN</a>, <a href=\\"CO_005fREDUCE.html#CO_005fREDUCE\\">CO_REDUCE</a>, <a href=\\"CO_005fBROADCAST.html#CO_005fBROADCAST\\">CO_BROADCAST</a>\\n"},"IPARITY":{"doc":"`IPARITY` — Bitwise XOR of array elements\\n\\n### Description\\nReduces with bitwise XOR (exclusive or) the elements of `ARRAY` along\\ndimension `DIM` if the corresponding element in `MASK` is `TRUE`.\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `RESULT = IPARITY(ARRAY, DIM[, MASK])`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n\\n\\n | `DIM`    | (Optional) shall be a scalar of type\\n`INTEGER` with a value in the range from 1 to n, where n\\nequals the rank of `ARRAY`. \\n\\n | `MASK`   | (Optional) shall be of type `LOGICAL`and either be a scalar or an array of the same shape as `ARRAY`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe result is of the same type as `ARRAY`.\\n\\n     \\nIf `DIM` is absent, a scalar with the bitwise XOR of all elements in\\n`ARRAY` is returned. Otherwise, an array of rank n-1, where n equals\\nthe rank of `ARRAY`, and a shape similar to that of `ARRAY` with\\ndimension `DIM` dropped is returned.\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_iparity\\n\\n  INTEGER(1) :: a(2)\\n\\n\\n  a(1) = b\'00100100\'\\n\\n  a(2) = b\'01101010\'\\n\\n\\n  ! prints 01001110\\n\\n  PRINT \'(b8.8)\', IPARITY(a)\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n\\n### See also\\n<a href=\\"IANY.html#IANY\\">IANY</a>, <a href=\\"IALL.html#IALL\\">IALL</a>, <a href=\\"IEOR.html#IEOR\\">IEOR</a>, <a href=\\"PARITY.html#PARITY\\">PARITY</a>\\n"},"MINLOC":{"doc":"`MINLOC` — Location of the minimum value within an array\\n\\n### Description\\nDetermines the location of the element in the array with the minimum\\nvalue, or, if the `DIM` argument is supplied, determines the\\nlocations of the minimum element along each row of the array in the\\n`DIM` direction.  If `MASK` is present, only the elements for\\nwhich `MASK` is `.TRUE.` are considered.  If more than one\\nelement in the array has the minimum value, the location returned is\\nthat of the first such element in array element order.  If the array has\\nzero size, or all of the elements of `MASK` are `.FALSE.`, then\\nthe result is an array of zeroes.  Similarly, if `DIM` is supplied\\nand all of the elements of `MASK` along a given row are zero, the\\nresult value for that row is zero.\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `RESULT = MINLOC(ARRAY [, MASK])`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n or\\n`REAL`. \\n\\n | `DIM`    | (Optional) Shall be a scalar of type\\n`INTEGER`, with a value between one and the rank of `ARRAY`,\\ninclusive.  It may not be an optional dummy argument. \\n\\n | `MASK`   | Shall be an array of type `LOGICAL`,\\nand conformable with `ARRAY`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nIf `DIM` is absent, the result is a rank-one array with a length\\nequal to the rank of `ARRAY`.  If `DIM` is present, the result\\nis an array with a rank one less than the rank of `ARRAY`, and a\\nsize corresponding to the size of `ARRAY` with the `DIM`\\ndimension removed.  If `DIM` is present and `ARRAY` has a rank\\nof one, the result is a scalar.  In all cases, the result is of default\\n`INTEGER` type.\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n\\n### See also\\n<a href=\\"MIN.html#MIN\\">MIN</a>, <a href=\\"MINVAL.html#MINVAL\\">MINVAL</a>\\n\\n   "},"MODULO":{"doc":"`MODULO` — Modulo function\\n\\n### Description\\n`MODULO(A,P)` computes the `A` modulo `P`.\\n\\n\\n\\n### Syntax\\n`RESULT = MODULO(A, P)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `P`  | Shall be a scalar of the same type and kind as `A`. \\nIt shall not be zero.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe type and kind of the result are those of the arguments.\\n          <dl>\\n**If `A` and `P` are of type `INTEGER`:** `MODULO(A,P)` has the value `R` such that `A=Q*P+R`, where\\n`Q` is an integer and `R` is between 0 (inclusive) and `P`\\n(exclusive). \\n\\n**If `A` and `P` are of type `REAL`:** `MODULO(A,P)` has the value of `A - FLOOR (A / P) * P`. \\n\\n</dl>\\n     The returned value has the same sign as P and a magnitude less than\\nthe magnitude of P.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_modulo\\n\\n  print *, modulo(17,3)\\n\\n  print *, modulo(17.5,5.5)\\n\\n\\n  print *, modulo(-17,3)\\n\\n  print *, modulo(-17.5,5.5)\\n\\n\\n  print *, modulo(17,-3)\\n\\n  print *, modulo(17.5,-5.5)\\n\\nend program\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"MOD.html#MOD\\">MOD</a>\\n\\n   "},"ITIME":{"doc":"`ITIME` — Get current local time subroutine (hour/minutes/seconds)\\n\\n### Description\\n`IDATE(VALUES)` Fills `VALUES` with the numerical values at the\\ncurrent local time. The hour (in the range 1-24), minute (in the range 1-60),\\nand seconds (in the range 1-60) appear in elements 1, 2, and 3 of `VALUES`,\\nrespectively.\\n\\n\\n\\n### Syntax\\n`CALL ITIME(VALUES)`\\n\\n\\n### Arguments\\n\\n     \\n\\nand the kind shall be the default integer kind.\\n\\n\\n\\n\\n\\n\\n### Return value\\nDoes not return anything.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_itime\\n\\n  integer, dimension(3) :: tarray\\n\\n  call itime(tarray)\\n\\n  print *, tarray(1)\\n\\n  print *, tarray(2)\\n\\n  print *, tarray(3)\\n\\nend program test_itime\\n\\n```\\n\\n     \\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n"},"FPUTC":{"doc":"`FPUTC` — Write a single character in stream mode\\n\\n### Description\\nWrite a single character in stream mode by bypassing normal formatted\\noutput. Stream I/O should not be mixed with normal record-oriented\\n(formatted or unformatted) I/O on the same unit; the results are unpredictable.\\n\\n     \\nThis intrinsic is provided in both subroutine and function forms; however,\\nonly one form can be used in any given program unit.\\n\\n     \\n\\nNote that the `FGET` intrinsic is provided for backwards compatibility with\\n*g77*.  GNU Fortran provides the Fortran 2003 Stream facility. \\nProgrammers should consider the use of new stream IO feature in new code\\nfor future portability. See also <a href=\\"Fortran-2003-status.html#Fortran-2003-status\\">Fortran 2003 status</a>.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `STATUS = FPUTC(UNIT, C)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `C`       | The type shall be `CHARACTER` and of default\\nkind. \\n\\n | `STATUS`  | (Optional) status flag of type `INTEGER`. \\nReturns 0 on success, -1 on end-of-file and a system specific positive\\nerror code otherwise.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_fputc\\n\\n  CHARACTER(len=10) :: str = \\"gfortran\\"\\n\\n  INTEGER :: fd = 42, i\\n\\n\\n  OPEN(UNIT = fd, FILE = \\"out\\", ACTION = \\"WRITE\\", STATUS=\\"NEW\\")\\n\\n  DO i = 1, len_trim(str)\\n\\n    CALL fputc(fd, str(i:i))\\n\\n  END DO\\n\\n  CLOSE(fd)\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n\\n### See also\\n<a href=\\"FPUT.html#FPUT\\">FPUT</a>, <a href=\\"FGET.html#FGET\\">FGET</a>, <a href=\\"FGETC.html#FGETC\\">FGETC</a>\\n"},"MIN":{"doc":"`MIN` — Minimum value of an argument list\\n\\n### Description\\nReturns the argument with the smallest (most negative) value.\\n\\n\\n\\n### Syntax\\n`RESULT = MIN(A1, A2 [, A3, ...])`\\n\\n\\n### Arguments\\n\\n     \\n or\\n`REAL`. \\n\\n | `A2`, `A3`, ...  | An expression of the same type and kind\\nas `A1`.  (As a GNU extension, arguments of different kinds are\\npermitted.)\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value corresponds to the maximum value among the arguments,\\nand has the same type and kind as the first argument.\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name               | Argument              | Return type         | Standard\\n\\n | `MIN0(A1)`    | `INTEGER(4) A1`  | `INTEGER(4)`   | Fortran 77 and later\\n\\n | `AMIN0(A1)`   | `INTEGER(4) A1`  | `REAL(4)`      | Fortran 77 and later\\n\\n | `MIN1(A1)`    | `REAL A1`        | `INTEGER(4)`   | Fortran 77 and later\\n\\n | `AMIN1(A1)`   | `REAL(4) A1`     | `REAL(4)`      | Fortran 77 and later\\n\\n | `DMIN1(A1)`   | `REAL(8) A1`     | `REAL(8)`      | Fortran 77 and later\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"MAX.html#MAX\\">MAX</a>, <a href=\\"MINLOC.html#MINLOC\\">MINLOC</a>, <a href=\\"MINVAL.html#MINVAL\\">MINVAL</a>\\n"},"BESSEL_JN":{"doc":"`BESSEL_JN` — Bessel function of the first kind\\n\\n### Description\\n`BESSEL_JN(N, X)` computes the Bessel function of the first kind of\\norder `N` of `X`. This function is available under the name\\n`BESJN` as a GNU extension.  If `N` and `X` are arrays,\\ntheir ranks and shapes shall conform.\\n\\n     \\n`BESSEL_JN(N1, N2, X)` returns an array with the Bessel functions\\nof the first kind of the orders `N1` to `N2`.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `RESULT = BESSEL_JN(N1, N2, X)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `N1`  | Shall be a non-negative scalar of type  `INTEGER`. \\n\\n | `N2`  | Shall be a non-negative scalar of type  `INTEGER`. \\n\\n | `X`  | Shall be a scalar or an array of type  `REAL`;\\nfor `BESSEL_JN(N1, N2, X)` it shall be scalar.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is a scalar of type `REAL`. It has the same\\nkind as `X`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_besjn\\n\\n  real(8) :: x = 1.0_8\\n\\n  x = bessel_jn(5,x)\\n\\nend program test_besjn\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name                 | Argument             | Return type        | Standard\\n\\n | `DBESJN(N, X)`  | `INTEGER N`     | `REAL(8)`     | GNU extension\\n\\n | </td><td valign=\\"top\\" width=\\"20%\\">`REAL(8) X`     | </td><td valign=\\"top\\" width=\\"25%\\">\\n\\n\\n\\n\\n\\n### Notes\\nThe transformational function uses a recurrence algorithm which might,\\nfor some values of `X`, lead to different results than calls to\\nthe elemental function.\\n\\n\\n\\n### Standard\\nFortran 2008 and later, negative `N` is allowed as GNU extension\\n\\n\\n\\n### Class\\nElemental function, except for the transformational function\\n`BESSEL_JN(N1, N2, X)`\\n\\n"},"IERRNO":{"doc":"`IERRNO` — Get the last system error number\\n\\n### Description\\nReturns the last system error number, as given by the C `errno`variable.\\n\\n\\n\\n### Syntax\\n`RESULT = IERRNO()`\\n\\n\\n### Arguments\\nNone.\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of the default integer\\nkind.\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nFunction\\n\\n\\n\\n### See also\\n<a href=\\"PERROR.html#PERROR\\">PERROR</a>\\n"},"SIND":{"doc":"`SIND` — Sine function, degrees\\n\\n### Description\\nIND(X) computes the sine of X in degrees.\\nThis function is for compatibility only and should be avoided in favor of standard constructs wherever possible.\\n### Standard\\nGNU Extension, enabled with -fdec-math\\n### Class\\nElemental function\\n### Syntax\\nRESULT = SIND(X)\\n### Arguments\\n- X: The type shall be REAL or COMPLEX.\\n    ### Return value\\nThe return value has same type and kind as X, and its value is in degrees.\\n"},"IS_CONTIGUOUS":{"doc":"`IS_CONTIGUOUS` — Test whether an array is contiguous\\n\\n### Description\\nIS_CONTIGUOUS tests whether an array is contiguous.\\n### Standard\\nFortran 2008 and later.\\n### Class\\nInquiry function\\n### Syntax\\nRESULT = IS_CONTIGUOUS(ARRAY)\\n### Arguments\\n- ARRAY: Shall be an array of any type.\\n### Return value\\nReturns a LOGICAL of the default kind, which .TRUE. if ARRAY is contiguous and false otherwise.\\n"},"COMPILER_VERSION":{"doc":"`COMPILER_VERSION` — Compiler version string\\n\\n### Description\\n`COMPILER_VERSION` returns a string with the name and the\\nversion of the compiler.\\n\\n\\n\\n### Syntax\\n`STR = COMPILER_VERSION()`\\n\\n\\n### Arguments\\nNone.\\n\\n\\n\\n### Return value\\nThe return value is a default-kind string with system-dependent length. \\nIt contains the name of the compiler and its version number.\\n\\n\\n\\n### Example\\n```\\n\\n\\nuse iso_fortran_env\\n\\nprint \'(4a)\', \'This file was compiled by \', &\\n\\n              compiler_version(), \' using the options \', &\\n\\n              compiler_options()\\n\\nend\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 2008\\n\\n\\n\\n### Class\\nInquiry function of the module `ISO_FORTRAN_ENV`\\n\\n\\n### See also\\n<a href=\\"COMPILER_005fOPTIONS.html#COMPILER_005fOPTIONS\\">COMPILER_OPTIONS</a>, <a href=\\"ISO_005fFORTRAN_005fENV.html#ISO_005fFORTRAN_005fENV\\">ISO_FORTRAN_ENV</a>\\n"},"C_F_POINTER":{"doc":"`C_F_POINTER` — Convert C into Fortran pointer\\n\\n### Description\\n`C_F_POINTER(CPTR, FPTR[, SHAPE])` assigns the target of the C pointer\\n`CPTR` to the Fortran pointer `FPTR` and specifies its shape.\\n\\n\\n\\n### Syntax\\n`CALL C_F_POINTER(CPTR, FPTR[, SHAPE])`\\n\\n\\n### Arguments\\n\\n     \\n. It is\\n`INTENT(IN)`. \\n\\n | `FPTR`   | pointer interoperable with `cptr`. It is\\n`INTENT(OUT)`. \\n\\n | `SHAPE`  | (Optional) Rank-one array of type `INTEGER`with `INTENT(IN)`. It shall be present\\nif and only if `fptr` is an array. The size\\nmust be equal to the rank of `fptr`.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram main\\n\\n  use iso_c_binding\\n\\n  implicit none\\n\\n  interface\\n\\n    subroutine my_routine(p) bind(c,name=\'myC_func\')\\n\\n      import :: c_ptr\\n\\n      type(c_ptr), intent(out) :: p\\n\\n    end subroutine\\n\\n  end interface\\n\\n  type(c_ptr) :: cptr\\n\\n  real,pointer :: a(:)\\n\\n  call my_routine(cptr)\\n\\n  call c_f_pointer(cptr, a, [12])\\n\\nend program main\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 2003 and later\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\n<a href=\\"C_005fLOC.html#C_005fLOC\\">C_LOC</a>, <a href=\\"C_005fF_005fPROCPOINTER.html#C_005fF_005fPROCPOINTER\\">C_F_PROCPOINTER</a>\\n"},"FSTAT":{"doc":"`FSTAT` — Get file status\\n\\n### Description\\n`FSTAT` is identical to <a href=\\"STAT.html#STAT\\">STAT</a>, except that information about an\\nalready opened file is obtained.\\n\\n     \\nThe elements in `VALUES` are the same as described by <a href=\\"STAT.html#STAT\\">STAT</a>.\\n\\n     \\n\\nThis intrinsic is provided in both subroutine and function forms; however,\\nonly one form can be used in any given program unit.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `STATUS = FSTAT(UNIT, VALUES)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `VALUES`  | The type shall be `INTEGER(4), DIMENSION(13)`. \\n\\n | `STATUS`  | (Optional) status flag of type `INTEGER(4)`. Returns 0\\non success and a system specific error code otherwise.\\n\\n\\n\\n\\n\\n\\n### Example\\nSee <a href=\\"STAT.html#STAT\\">STAT</a> for an example.\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n\\n### See also\\nTo stat a link: <a href=\\"LSTAT.html#LSTAT\\">LSTAT</a>, to stat a file: <a href=\\"STAT.html#STAT\\">STAT</a>\\n"},"GETPID":{"doc":"`GETPID` — Process ID function\\n\\n### Description\\nReturns the numerical process identifier of the current process.\\n\\n\\n\\n### Syntax\\n`RESULT = GETPID()`\\n\\n\\n### Return value\\nThe return value of `GETPID` is an `INTEGER` of the default\\nkind.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram info\\n\\n  print *, \\"The current process ID is \\", getpid()\\n\\n  print *, \\"Your numerical user ID is \\", getuid()\\n\\n  print *, \\"Your numerical group ID is \\", getgid()\\n\\nend program info\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nFunction\\n\\n\\n\\n### See also\\n<a href=\\"GETGID.html#GETGID\\">GETGID</a>, <a href=\\"GETUID.html#GETUID\\">GETUID</a>\\n"},"CTIME":{"doc":"`CTIME` — Convert a time into a string\\n\\n### Description\\n`CTIME` converts a system time value, such as returned by\\n`TIME8`, to a string. The output will be of the form ‘<samp><span class=\\"samp\\">Sat\\nAug 19 18:13:14 1995</span></samp>’.\\n\\n     \\nThis intrinsic is provided in both subroutine and function forms; however,\\nonly one form can be used in any given program unit.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n. \\n\\n | `RESULT = CTIME(TIME)`.\\n\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `RESULT`   | The type shall be of type `CHARACTER` and\\nof default kind. It is an `INTENT(OUT)` argument. If the length\\nof this variable is too short for the time and date string to fit\\ncompletely, it will be blank on procedure return.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe converted date and time as a string.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_ctime\\n\\n    integer(8) :: i\\n\\n    character(len=30) :: date\\n\\n    i = time8()\\n\\n\\n    ! Do something, main part of the program\\n\\n\\n    call ctime(i,date)\\n\\n    print *, \'Program was started on \', date\\n\\nend program test_ctime\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n\\n### See also\\n<a href=\\"DATE_005fAND_005fTIME.html#DATE_005fAND_005fTIME\\">DATE_AND_TIME</a>, <a href=\\"GMTIME.html#GMTIME\\">GMTIME</a>, <a href=\\"LTIME.html#LTIME\\">LTIME</a>, <a href=\\"TIME.html#TIME\\">TIME</a>, <a href=\\"TIME8.html#TIME8\\">TIME8</a>\\n"},"MAX":{"doc":"`MAX` — Maximum value of an argument list\\n\\n### Description\\nReturns the argument with the largest (most positive) value.\\n\\n\\n\\n### Syntax\\n`RESULT = MAX(A1, A2 [, A3 [, ...]])`\\n\\n\\n### Arguments\\n\\n     \\n or\\n`REAL`. \\n\\n | `A2`, `A3`, ...  | An expression of the same type and kind\\nas `A1`.  (As a GNU extension, arguments of different kinds are\\npermitted.)\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value corresponds to the maximum value among the arguments,\\nand has the same type and kind as the first argument.\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name              | Argument              | Return type          | Standard\\n\\n | `MAX0(A1)`   | `INTEGER(4) A1`  | `INTEGER(4)`    | Fortran 77 and later\\n\\n | `AMAX0(A1)`  | `INTEGER(4) A1`  | `REAL(MAX(X))`  | Fortran 77 and later\\n\\n | `MAX1(A1)`   | `REAL A1`        | `INT(MAX(X))`   | Fortran 77 and later\\n\\n | `AMAX1(A1)`  | `REAL(4) A1`     | `REAL(4)`       | Fortran 77 and later\\n\\n | `DMAX1(A1)`  | `REAL(8) A1`     | `REAL(8)`       | Fortran 77 and later\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"MAXLOC.html#MAXLOC\\">MAXLOC</a> <a href=\\"MAXVAL.html#MAXVAL\\">MAXVAL</a>, <a href=\\"MIN.html#MIN\\">MIN</a>\\n\\n   "},"LONG":{"doc":"`LONG` — Convert to integer type\\n\\n### Description\\nConvert to a `KIND=4` integer type, which is the same size as a C\\n`long` integer.  This is equivalent to the standard `INT`intrinsic with an optional argument of `KIND=4`, and is only\\nincluded for backwards compatibility.\\n\\n\\n\\n### Syntax\\n`RESULT = LONG(A)`\\n\\n\\n### Arguments\\n\\n     \\n,\\n`REAL`, or `COMPLEX`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is a `INTEGER(4)` variable.\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"INT.html#INT\\">INT</a>, <a href=\\"INT2.html#INT2\\">INT2</a>, <a href=\\"INT8.html#INT8\\">INT8</a>\\n"},"MAXLOC":{"doc":"`MAXLOC` — Location of the maximum value within an array\\n\\n### Description\\nDetermines the location of the element in the array with the maximum\\nvalue, or, if the `DIM` argument is supplied, determines the\\nlocations of the maximum element along each row of the array in the\\n`DIM` direction.  If `MASK` is present, only the elements for\\nwhich `MASK` is `.TRUE.` are considered.  If more than one\\nelement in the array has the maximum value, the location returned is\\nthat of the first such element in array element order.  If the array has\\nzero size, or all of the elements of `MASK` are `.FALSE.`, then\\nthe result is an array of zeroes.  Similarly, if `DIM` is supplied\\nand all of the elements of `MASK` along a given row are zero, the\\nresult value for that row is zero.\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `RESULT = MAXLOC(ARRAY [, MASK])`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n or\\n`REAL`. \\n\\n | `DIM`    | (Optional) Shall be a scalar of type\\n`INTEGER`, with a value between one and the rank of `ARRAY`,\\ninclusive.  It may not be an optional dummy argument. \\n\\n | `MASK`   | Shall be an array of type `LOGICAL`,\\nand conformable with `ARRAY`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nIf `DIM` is absent, the result is a rank-one array with a length\\nequal to the rank of `ARRAY`.  If `DIM` is present, the result\\nis an array with a rank one less than the rank of `ARRAY`, and a\\nsize corresponding to the size of `ARRAY` with the `DIM`\\ndimension removed.  If `DIM` is present and `ARRAY` has a rank\\nof one, the result is a scalar.  In all cases, the result is of default\\n`INTEGER` type.\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n\\n### See also\\n<a href=\\"MAX.html#MAX\\">MAX</a>, <a href=\\"MAXVAL.html#MAXVAL\\">MAXVAL</a>\\n\\n   "},"MATMUL":{"doc":"`MATMUL` — matrix multiplication\\n\\n### Description\\nPerforms a matrix multiplication on numeric or logical arguments.\\n\\n\\n\\n### Syntax\\n`RESULT = MATMUL(MATRIX_A, MATRIX_B)`\\n\\n\\n### Arguments\\n\\n     \\n,\\n`REAL`, `COMPLEX`, or `LOGICAL` type, with a rank of\\none or two. \\n\\n | `MATRIX_B`  | An array of `INTEGER`,\\n`REAL`, or `COMPLEX` type if `MATRIX_A` is of a numeric\\ntype; otherwise, an array of `LOGICAL` type. The rank shall be one\\nor two, and the first (or only) dimension of `MATRIX_B` shall be\\nequal to the last (or only) dimension of `MATRIX_A`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe matrix product of `MATRIX_A` and `MATRIX_B`.  The type and\\nkind of the result follow the usual type and kind promotion rules, as\\nfor the `*` or `.AND.` operators.\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n\\n### See also\\n"},"IAND":{"doc":"`IAND` — Bitwise logical and\\n\\n### Description\\nBitwise logical `AND`.\\n\\n\\n\\n### Syntax\\n`RESULT = IAND(I, J)`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `J`  | The type shall be `INTEGER`, of the same\\nkind as `I`.  (As a GNU extension, different kinds are also\\npermitted.)\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return type is `INTEGER`, of the same kind as the\\narguments.  (If the argument kinds differ, it is of the same kind as\\nthe larger argument.)\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_iand\\n\\n  INTEGER :: a, b\\n\\n  DATA a / Z\'F\' /, b / Z\'3\' /\\n\\n  WRITE (*,*) IAND(a, b)\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"IOR.html#IOR\\">IOR</a>, <a href=\\"IEOR.html#IEOR\\">IEOR</a>, <a href=\\"IBITS.html#IBITS\\">IBITS</a>, <a href=\\"IBSET.html#IBSET\\">IBSET</a>, <a href=\\"IBCLR.html#IBCLR\\">IBCLR</a>, <a href=\\"NOT.html#NOT\\">NOT</a>\\n\\n   "},"NUM_IMAGES":{"doc":"`NUM_IMAGES` — Function that returns the number of images\\n\\n### Description\\nReturns the number of images.\\n\\n\\n\\n### Syntax\\n`RESULT = NUM_IMAGES(DISTANCE, FAILED)`\\n\\n\\n### Arguments\\n\\n     \\n | `DISTANCE`  | (optional, intent(in)) Nonnegative scalar integer\\n\\n | `FAILED`    | (optional, intent(in)) Scalar logical expression\\n\\n\\n\\n\\n\\n\\n### Return value\\nScalar default-kind integer.  If `DISTANCE` is not present or has value 0,\\nthe number of images in the current team is returned. For values smaller or\\nequal distance to the initial team, it returns the number of images index\\non the ancestor team which has a distance of `DISTANCE` from the invoking\\nteam. If `DISTANCE` is larger than the distance to the initial team, the\\nnumber of images of the initial team is returned. If `FAILED` is not present\\nthe total number of images is returned; if it has the value `.TRUE.`,\\nthe number of failed images is returned, otherwise, the number of images which\\ndo have not the failed status.\\n\\n\\n\\n### Example\\n```\\n\\n\\nINTEGER :: value[*]\\n\\nINTEGER :: i\\n\\nvalue = THIS_IMAGE()\\n\\nSYNC ALL\\n\\nIF (THIS_IMAGE() == 1) THEN\\n\\n  DO i = 1, NUM_IMAGES()\\n\\n    WRITE(*,\'(2(a,i0))\') \'value[\', i, \'] is \', value[i]\\n\\n  END DO\\n\\nEND IF\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 2008 and later. With `DISTANCE` or `FAILED` argument,\\nTechnical Specification (TS) 18508 or later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n\\n### See also\\n<a href=\\"THIS_005fIMAGE.html#THIS_005fIMAGE\\">THIS_IMAGE</a>, <a href=\\"IMAGE_005fINDEX.html#IMAGE_005fINDEX\\">IMAGE_INDEX</a>\\n"},"LINK":{"doc":"`LINK` — Create a hard link\\n\\n### Description\\nMakes a (hard) link from file `PATH1` to `PATH2`. A null\\ncharacter (`CHAR(0)`) can be used to mark the end of the names in\\n`PATH1` and `PATH2`; otherwise, trailing blanks in the file\\nnames are ignored.  If the `STATUS` argument is supplied, it\\ncontains 0 on success or a nonzero error code upon return; see\\n`link(2)`.\\n\\n     \\nThis intrinsic is provided in both subroutine and function forms;\\nhowever, only one form can be used in any given program unit.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `STATUS = LINK(PATH1, PATH2)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n type. \\n\\n | `PATH2`  | Shall be of default `CHARACTER` type. \\n\\n | `STATUS`  | (Optional) Shall be of default `INTEGER` type.\\n\\n\\n\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n\\n### See also\\n<a href=\\"SYMLNK.html#SYMLNK\\">SYMLNK</a>, <a href=\\"UNLINK.html#UNLINK\\">UNLINK</a>\\n"},"LOG":{"doc":"`LOG` — Natural logarithm function\\n\\n### Description\\n`LOG(X)` computes the natural logarithm of `X`, i.e. the\\nlogarithm to the base e.\\n\\n\\n\\n### Syntax\\n`RESULT = LOG(X)`\\n\\n\\n### Arguments\\n\\n     \\n or\\n`COMPLEX`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `REAL` or `COMPLEX`. \\nThe kind type parameter is the same as `X`. \\nIf `X` is `COMPLEX`, the imaginary part \\\\omega is in the range\\n-\\\\pi < \\\\omega \\\\leq \\\\pi.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_log\\n\\n  real(8) :: x = 2.7182818284590451_8\\n\\n  complex :: z = (1.0, 2.0)\\n\\n  x = log(x)    ! will yield (approximately) 1\\n\\n  z = log(z)\\n\\nend program test_log\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name             | Argument           | Return type        | Standard\\n\\n | `ALOG(X)`   | `REAL(4) X`   | `REAL(4)`     | f95, gnu\\n\\n | `DLOG(X)`   | `REAL(8) X`   | `REAL(8)`     | f95, gnu\\n\\n | `CLOG(X)`   | `COMPLEX(4) X`   | `COMPLEX(4)`     | f95, gnu\\n\\n | `ZLOG(X)`   | `COMPLEX(8) X`   | `COMPLEX(8)`     | f95, gnu\\n\\n | `CDLOG(X)`  | `COMPLEX(8) X`   | `COMPLEX(8)`     | f95, gnu\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"ERF":{"doc":"`ERF` — Error function\\n\\n### Description\\n`ERF(X)` computes the error function of `X`.\\n\\n\\n\\n### Syntax\\n`RESULT = ERF(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `REAL`, of the same kind as\\n`X` and lies in the range -1 \\\\leq erf (x) \\\\leq 1 .\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_erf\\n\\n  real(8) :: x = 0.17_8\\n\\n  x = erf(x)\\n\\nend program test_erf\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name             | Argument           | Return type        | Standard\\n\\n | `DERF(X)`   | `REAL(8) X`   | `REAL(8)`     | GNU extension\\n\\n\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"ALL":{"doc":"`ALL` — All values in `MASK` along `DIM` are true\\n\\n### Description\\n`ALL(MASK [, DIM])` determines if all the values are true in `MASK`\\nin the array along dimension `DIM`.\\n\\n\\n\\n### Syntax\\n`RESULT = ALL(MASK [, DIM])`\\n\\n\\n### Arguments\\n\\n     \\n and\\nit shall not be scalar. \\n\\n | `DIM`   | (Optional) `DIM` shall be a scalar integer\\nwith a value that lies between one and the rank of `MASK`.\\n\\n\\n\\n\\n\\n\\n### Return value\\n`ALL(MASK)` returns a scalar value of type `LOGICAL` where\\nthe kind type parameter is the same as the kind type parameter of\\n`MASK`.  If `DIM` is present, then `ALL(MASK, DIM)` returns\\nan array with the rank of `MASK` minus 1.  The shape is determined from\\nthe shape of `MASK` where the `DIM` dimension is elided.\\n\\n          <dl>\\n**(A)** `ALL(MASK)` is true if all elements of `MASK` are true. \\nIt also is true if `MASK` has zero size; otherwise, it is false. \\n\\n**(B)** If the rank of `MASK` is one, then `ALL(MASK,DIM)` is equivalent\\nto `ALL(MASK)`.  If the rank is greater than one, then `ALL(MASK,DIM)`is determined by applying `ALL` to the array sections. \\n\\n</dl>\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_all\\n\\n  logical l\\n\\n  l = all((/.true., .true., .true./))\\n\\n  print *, l\\n\\n  call section\\n\\n  contains\\n\\n    subroutine section\\n\\n      integer a(2,3), b(2,3)\\n\\n      a = 1\\n\\n      b = 1\\n\\n      b(2,2) = 2\\n\\n      print *, all(a .eq. b, 1)\\n\\n      print *, all(a .eq. b, 2)\\n\\n    end subroutine section\\n\\nend program test_all\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n"},"TRIM":{"doc":"`TRIM` — Remove trailing blank characters of a string\\n\\n### Description\\nRemoves trailing blank characters of a string.\\n\\n\\n\\n### Syntax\\n`RESULT = TRIM(STRING)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nA scalar of type `CHARACTER` which length is that of `STRING`\\nless the number of trailing blanks.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_trim\\n\\n  CHARACTER(len=10), PARAMETER :: s = \\"GFORTRAN  \\"\\n\\n  WRITE(*,*) LEN(s), LEN(TRIM(s))  ! \\"10 8\\", with/without trailing blanks\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n\\n### See also\\n<a href=\\"ADJUSTL.html#ADJUSTL\\">ADJUSTL</a>, <a href=\\"ADJUSTR.html#ADJUSTR\\">ADJUSTR</a>\\n"},"MERGE":{"doc":"`MERGE` — Merge variables\\n\\n### Description\\nSelect values from two arrays according to a logical mask.  The result\\nis equal to `TSOURCE` if `MASK` is `.TRUE.`, or equal to\\n`FSOURCE` if it is `.FALSE.`.\\n\\n\\n\\n### Syntax\\n`RESULT = MERGE(TSOURCE, FSOURCE, MASK)`\\n\\n\\n### Arguments\\n\\n     \\n | `TSOURCE`  | May be of any type. \\n\\n | `FSOURCE`  | Shall be of the same type and type parameters\\nas `TSOURCE`. \\n\\n | `MASK`     | Shall be of type `LOGICAL`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe result is of the same type and type parameters as `TSOURCE`.\\n\\n   \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"CHDIR":{"doc":"`CHDIR` — Change working directory\\n\\n### Description\\nChange current working directory to a specified path.\\n\\n     \\nThis intrinsic is provided in both subroutine and function forms; however,\\nonly one form can be used in any given program unit.\\n\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `STATUS = CHDIR(NAME)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n of default\\nkind and shall specify a valid path within the file system. \\n\\n | `STATUS`  | (Optional) `INTEGER` status flag of the default\\nkind.  Returns 0 on success, and a system specific and nonzero error code\\notherwise.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_chdir\\n\\n  CHARACTER(len=255) :: path\\n\\n  CALL getcwd(path)\\n\\n  WRITE(*,*) TRIM(path)\\n\\n  CALL chdir(\\"/tmp\\")\\n\\n  CALL getcwd(path)\\n\\n  WRITE(*,*) TRIM(path)\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine, function\\n\\n\\n\\n### See also\\n<a href=\\"GETCWD.html#GETCWD\\">GETCWD</a>\\n"},"GETUID":{"doc":"`GETUID` — User ID function\\n\\n### Description\\nReturns the numerical user ID of the current process.\\n\\n\\n\\n### Syntax\\n`RESULT = GETUID()`\\n\\n\\n### Return value\\nThe return value of `GETUID` is an `INTEGER` of the default\\nkind.\\n\\n\\n\\n### Example\\nSee `GETPID` for an example.\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nFunction\\n\\n\\n\\n### See also\\n<a href=\\"GETPID.html#GETPID\\">GETPID</a>, <a href=\\"GETLOG.html#GETLOG\\">GETLOG</a>\\n"},"SAME_TYPE_AS":{"doc":"`SAME_TYPE_AS` —  Query dynamic types for equality\\n\\n### Description\\nQuery dynamic types for equality.\\n\\n\\n\\n### Syntax\\n`RESULT = SAME_TYPE_AS(A, B)`\\n\\n\\n### Arguments\\n\\n     \\n | `A`  | Shall be an object of extensible declared type or\\nunlimited polymorphic. \\n\\n | `B`  | Shall be an object of extensible declared type or\\nunlimited polymorphic.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is a scalar of type default logical. It is true if and\\nonly if the dynamic type of A is the same as the dynamic type of B.\\n\\n\\n\\n### Standard\\nFortran 2003 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n\\n### See also\\n<a href=\\"EXTENDS_005fTYPE_005fOF.html#EXTENDS_005fTYPE_005fOF\\">EXTENDS_TYPE_OF</a>\\n\\n   "},"AND":{"doc":"`AND` — Bitwise logical AND\\n\\n### Description\\nBitwise logical `AND`.\\n\\n     \\nThis intrinsic routine is provided for backwards compatibility with\\nGNU Fortran 77.  For integer arguments, programmers should consider\\nthe use of the <a href=\\"IAND.html#IAND\\">IAND</a> intrinsic defined by the Fortran standard.\\n\\n\\n\\n\\n### Syntax\\n`RESULT = AND(I, J)`\\n\\n\\n### Arguments\\n\\n     \\n\\ntype or a scalar `LOGICAL` type. \\n\\n | `J`  | The type shall be the same as the type of `I`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return type is either a scalar `INTEGER` or a scalar\\n`LOGICAL`.  If the kind type parameters differ, then the\\nsmaller kind type is implicitly converted to larger kind, and the\\nreturn has the larger kind.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_and\\n\\n  LOGICAL :: T = .TRUE., F = .FALSE.\\n\\n  INTEGER :: a, b\\n\\n  DATA a / Z\'F\' /, b / Z\'3\' /\\n\\n\\n  WRITE (*,*) AND(T, T), AND(T, F), AND(F, T), AND(F, F)\\n\\n  WRITE (*,*) AND(a, b)\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nFunction\\n\\n\\n\\n### See also\\nFortran 95 elemental function: <a href=\\"IAND.html#IAND\\">IAND</a>\\n"},"GETLOG":{"doc":"`GETLOG` — Get login name\\n\\n### Description\\nGets the username under which the program is running.\\n\\n\\n\\n### Syntax\\n`CALL GETLOG(C)`\\n\\n\\n### Arguments\\n\\n     \\n and of default kind.\\n\\n\\n\\n\\n\\n\\n### Return value\\nStores the current user name in `LOGIN`.  (On systems where POSIX\\nfunctions `geteuid` and `getpwuid` are not available, and\\nthe `getlogin` function is not implemented either, this will\\nreturn a blank string.)\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM TEST_GETLOG\\n\\n  CHARACTER(32) :: login\\n\\n  CALL GETLOG(login)\\n\\n  WRITE(*,*) login\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\n<a href=\\"GETUID.html#GETUID\\">GETUID</a>\\n"},"LTIME":{"doc":"`LTIME` — Convert time to local time info\\n\\n### Description\\nGiven a system time value `TIME` (as provided by the `TIME8`intrinsic), fills `VALUES` with values extracted from it appropriate\\nto the local time zone using `localtime(3)`.\\n\\n\\n\\n### Syntax\\n`CALL LTIME(TIME, VALUES)`\\n\\n\\n### Arguments\\n\\n     \\n scalar expression\\ncorresponding to a system time, with `INTENT(IN)`. \\n\\n | `VALUES`  | A default `INTEGER` array with 9 elements,\\nwith `INTENT(OUT)`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe elements of `VALUES` are assigned as follows:\\n          <ol start=\\"1\\" type=\\"1\\">\\n<li>Seconds after the minute, range 0–59 or 0–61 to allow for leap\\nseconds\\n</li><li>Minutes after the hour, range 0–59\\n</li><li>Hours past midnight, range 0–23\\n</li><li>Day of month, range 0–31\\n</li><li>Number of months since January, range 0–12\\n</li><li>Years since 1900\\n</li><li>Number of days since Sunday, range 0–6\\n</li><li>Days since January 1\\n</li><li>Daylight savings indicator: positive if daylight savings is in\\neffect, zero if not, and negative if the information is not available.\\n          </li></ol>\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\n<a href=\\"CTIME.html#CTIME\\">CTIME</a>, <a href=\\"GMTIME.html#GMTIME\\">GMTIME</a>, <a href=\\"TIME.html#TIME\\">TIME</a>, <a href=\\"TIME8.html#TIME8\\">TIME8</a>\\n\\n   "},"DIGITS":{"doc":"`DIGITS` — Significant binary digits function\\n\\n### Description\\n`DIGITS(X)` returns the number of significant binary digits of the internal\\nmodel representation of `X`.  For example, on a system using a 32-bit\\nfloating point representation, a default real number would likely return 24.\\n\\n\\n\\n### Syntax\\n`RESULT = DIGITS(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_digits\\n\\n    integer :: i = 12345\\n\\n    real :: x = 3.143\\n\\n    real(8) :: y = 2.33\\n\\n    print *, digits(i)\\n\\n    print *, digits(x)\\n\\n    print *, digits(y)\\n\\nend program test_digits\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n"},"SELECTED_INT_KIND":{"doc":"`SELECTED_INT_KIND` — Choose integer kind\\n\\n### Description\\n`SELECTED_INT_KIND(R)` return the kind value of the smallest integer\\ntype that can represent all values ranging from -10^R (exclusive)\\nto 10^R (exclusive). If there is no integer kind that accommodates\\nthis range, `SELECTED_INT_KIND` returns -1.\\n\\n\\n\\n### Syntax\\n`RESULT = SELECTED_INT_KIND(R)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram large_integers\\n\\n  integer,parameter :: k5 = selected_int_kind(5)\\n\\n  integer,parameter :: k15 = selected_int_kind(15)\\n\\n  integer(kind=k5) :: i5\\n\\n  integer(kind=k15) :: i15\\n\\n\\n  print *, huge(i5), huge(i15)\\n\\n\\n  ! The following inequalities are always true\\n\\n  print *, huge(i5) >= 10_k5**5-1\\n\\n  print *, huge(i15) >= 10_k15**15-1\\n\\nend program large_integers\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n"},"SLEEP":{"doc":"`SLEEP` — Sleep for the specified number of seconds\\n\\n### Description\\nCalling this subroutine causes the process to pause for `SECONDS` seconds.\\n\\n\\n\\n### Syntax\\n`CALL SLEEP(SECONDS)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_sleep\\n\\n  call sleep(5)\\n\\nend\\n\\n```\\n\\n     \\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n"},"SIGN":{"doc":"`SIGN` — Sign copying function\\n\\n### Description\\n`SIGN(A,B)` returns the value of `A` with the sign of `B`.\\n\\n\\n\\n### Syntax\\n`RESULT = SIGN(A, B)`\\n\\n\\n### Arguments\\n\\n     \\n\\n\\n | `B`  | Shall be of the same type and kind as `A`\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe kind of the return value is that of `A` and `B`. \\nIf B\\\\ge 0 then the result is `ABS(A)`, else\\nit is `-ABS(A)`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_sign\\n\\n  print *, sign(-12,1)\\n\\n  print *, sign(-12,0)\\n\\n  print *, sign(-12,-1)\\n\\n\\n  print *, sign(-12.,1.)\\n\\n  print *, sign(-12.,0.)\\n\\n  print *, sign(-12.,-1.)\\n\\nend program test_sign\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name               | Arguments               | Return type        | Standard\\n\\n | `SIGN(A,B)`   | `REAL(4) A, B`     | `REAL(4)`     | f77, gnu\\n\\n | `ISIGN(A,B)`  | `INTEGER(4) A, B`  | `INTEGER(4)`  | f77, gnu\\n\\n | `DSIGN(A,B)`  | `REAL(8) A, B`     | `REAL(8)`     | f77, gnu\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"GETGID":{"doc":"`GETGID` — Group ID function\\n\\n### Description\\nReturns the numerical group ID of the current process.\\n\\n\\n\\n### Syntax\\n`RESULT = GETGID()`\\n\\n\\n### Return value\\nThe return value of `GETGID` is an `INTEGER` of the default\\nkind.\\n\\n\\n\\n### Example\\nSee `GETPID` for an example.\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nFunction\\n\\n\\n\\n### See also\\n<a href=\\"GETPID.html#GETPID\\">GETPID</a>, <a href=\\"GETUID.html#GETUID\\">GETUID</a>\\n"},"IS_IOSTAT_END":{"doc":"`IS_IOSTAT_END` — Test for end-of-file value\\n\\n### Description\\n`IS_IOSTAT_END` tests whether an variable has the value of the I/O\\nstatus “end of file”. The function is equivalent to comparing the variable\\nwith the `IOSTAT_END` parameter of the intrinsic module\\n`ISO_FORTRAN_ENV`.\\n\\n\\n\\n### Syntax\\n`RESULT = IS_IOSTAT_END(I)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nReturns a `LOGICAL` of the default kind, which `.TRUE.` if\\n`I` has the value which indicates an end of file condition for\\n`IOSTAT=` specifiers, and is `.FALSE.` otherwise.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM iostat\\n\\n  IMPLICIT NONE\\n\\n  INTEGER :: stat, i\\n\\n  OPEN(88, FILE=\'test.dat\')\\n\\n  READ(88, *, IOSTAT=stat) i\\n\\n  IF(IS_IOSTAT_END(stat)) STOP \'END OF FILE\'\\n\\nEND PROGRAM\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 2003 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"ANY":{"doc":"`ANY` — Any value in `MASK` along `DIM` is true\\n\\n### Description\\n`ANY(MASK [, DIM])` determines if any of the values in the logical array\\n`MASK` along dimension `DIM` are `.TRUE.`.\\n\\n\\n\\n### Syntax\\n`RESULT = ANY(MASK [, DIM])`\\n\\n\\n### Arguments\\n\\n     \\n and\\nit shall not be scalar. \\n\\n | `DIM`   | (Optional) `DIM` shall be a scalar integer\\nwith a value that lies between one and the rank of `MASK`.\\n\\n\\n\\n\\n\\n\\n### Return value\\n`ANY(MASK)` returns a scalar value of type `LOGICAL` where\\nthe kind type parameter is the same as the kind type parameter of\\n`MASK`.  If `DIM` is present, then `ANY(MASK, DIM)` returns\\nan array with the rank of `MASK` minus 1.  The shape is determined from\\nthe shape of `MASK` where the `DIM` dimension is elided.\\n\\n          <dl>\\n**(A)** `ANY(MASK)` is true if any element of `MASK` is true;\\notherwise, it is false.  It also is false if `MASK` has zero size. \\n\\n**(B)** If the rank of `MASK` is one, then `ANY(MASK,DIM)` is equivalent\\nto `ANY(MASK)`.  If the rank is greater than one, then `ANY(MASK,DIM)`is determined by applying `ANY` to the array sections. \\n\\n</dl>\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_any\\n\\n  logical l\\n\\n  l = any((/.true., .true., .true./))\\n\\n  print *, l\\n\\n  call section\\n\\n  contains\\n\\n    subroutine section\\n\\n      integer a(2,3), b(2,3)\\n\\n      a = 1\\n\\n      b = 1\\n\\n      b(2,2) = 2\\n\\n      print *, any(a .eq. b, 1)\\n\\n      print *, any(a .eq. b, 2)\\n\\n    end subroutine section\\n\\nend program test_any\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n"},"AINT":{"doc":"`AINT` — Truncate to a whole number\\n\\n### Description\\n`AINT(A [, KIND])` truncates its argument to a whole number.\\n\\n\\n\\n### Syntax\\n`RESULT = AINT(A [, KIND])`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `KIND`  | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `REAL` with the kind type parameter of the\\nargument if the optional `KIND` is absent; otherwise, the kind\\ntype parameter will be given by `KIND`.  If the magnitude of\\n`X` is less than one, `AINT(X)` returns zero.  If the\\nmagnitude is equal to or greater than one then it returns the largest\\nwhole number that does not exceed its magnitude.  The sign is the same\\nas the sign of `X`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_aint\\n\\n  real(4) x4\\n\\n  real(8) x8\\n\\n  x4 = 1.234E0_4\\n\\n  x8 = 4.321_8\\n\\n  print *, aint(x4), dint(x8)\\n\\n  x8 = aint(x4,8)\\n\\nend program test_aint\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name            | Argument          | Return type       | Standard\\n\\n | `AINT(A)`  | `REAL(4) A`  | `REAL(4)`    | Fortran 77 and later\\n\\n | `DINT(A)`  | `REAL(8) A`  | `REAL(8)`    | Fortran 77 and later\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"BACKTRACE":{"doc":"`BACKTRACE` — Show a backtrace\\n\\n### Description\\n`BACKTRACE` shows a backtrace at an arbitrary place in user code. Program\\nexecution continues normally afterwards. The backtrace information is printed\\nto the unit corresponding to `ERROR_UNIT` in `ISO_FORTRAN_ENV`.\\n\\n\\n\\n### Syntax\\n`CALL BACKTRACE`\\n\\n\\n### Arguments\\nNone\\n\\n\\n\\n### Standard\\nGNU Extension\\n\\n\\n\\n### Class\\nSubroutine\\n\\n\\n\\n### See also\\n<a href=\\"ABORT.html#ABORT\\">ABORT</a>\\n"},"ATAN2D":{"doc":"`ATAN2D` — Arctangent function, degrees\\n\\n### Description\\nATAN2D(Y, X) computes the principal value of the argument function of the complex number X + i Y in degrees. This function can be used to transform from Cartesian into polar coordinates and allows to determine the angle in the correct quadrant.\\nThis function is for compatibility only and should be avoided in favor of standard constructs wherever possible.\\n### Standard\\nGNU Extension, enabled with -fdec-math\\n### Class\\nElemental function\\n### Syntax\\nRESULT = ATAN2D(Y, X)\\n### Arguments\\n- Y: The type shall be REAL.\\n- X: The type and kind type parameter shall be the same as Y. If Y is zero, then X must be nonzero.\\n### Return value\\nThe return value has the same type and kind type parameter as Y. It is the principal value of the complex number X + i Y. If X is nonzero, then it lies in the range -180 \\\\le \\\\atan (x) \\\\leq 180. The sign is positive if Y is positive. If Y is zero, then the return value is zero if X is strictly positive, 180 if X is negative and Y is positive zero (or the processor does not handle signed zeros), and -180 if X is negative and Y is negative zero. Finally, if X is zero, then the magnitude of the result is 90.\\n"},"NINT":{"doc":"`NINT` — Nearest whole number\\n\\n### Description\\n`NINT(A)` rounds its argument to the nearest whole number.\\n\\n\\n\\n### Syntax\\n`RESULT = NINT(A [, KIND])`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `KIND`  | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nReturns `A` with the fractional portion of its magnitude eliminated by\\nrounding to the nearest whole number and with its sign preserved,\\nconverted to an `INTEGER` of the default kind.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_nint\\n\\n  real(4) x4\\n\\n  real(8) x8\\n\\n  x4 = 1.234E0_4\\n\\n  x8 = 4.321_8\\n\\n  print *, nint(x4), idnint(x8)\\n\\nend program test_nint\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name              | Argument            | Return Type      | Standard\\n\\n | `NINT(A)`    | `REAL(4) A`    | `INTEGER`  | Fortran 95 and later\\n\\n | `IDNINT(A)`  | `REAL(8) A`    | `INTEGER`  | Fortran 95 and later\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later, with `KIND` argument Fortran 90 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"CEILING.html#CEILING\\">CEILING</a>, <a href=\\"FLOOR.html#FLOOR\\">FLOOR</a>\\n\\n   "},"UBOUND":{"doc":"`UBOUND` — Upper dimension bounds of an array\\n\\n### Description\\nReturns the upper bounds of an array, or a single upper bound\\nalong the `DIM` dimension. \\n\\n\\n### Syntax\\n`RESULT = UBOUND(ARRAY [, DIM [, KIND]])`\\n\\n\\n### Arguments\\n\\n     \\n | `ARRAY`  | Shall be an array, of any type. \\n\\n | `DIM`  | (Optional) Shall be a scalar `INTEGER`. \\n\\n | `KIND` | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `INTEGER` and of kind `KIND`. If\\n`KIND` is absent, the return value is of default integer kind. \\nIf `DIM` is absent, the result is an array of the upper bounds of\\n`ARRAY`.  If `DIM` is present, the result is a scalar\\ncorresponding to the upper bound of the array along that dimension.  If\\n`ARRAY` is an expression rather than a whole array or array\\nstructure component, or if it has a zero extent along the relevant\\ndimension, the upper bound is taken to be the number of elements along\\nthe relevant dimension.\\n\\n\\n\\n### Standard\\nFortran 95 and later, with `KIND` argument Fortran 2003 and later\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n\\n### See also\\n<a href=\\"LBOUND.html#LBOUND\\">LBOUND</a>, <a href=\\"LCOBOUND.html#LCOBOUND\\">LCOBOUND</a>\\n"},"LGE":{"doc":"`LGE` — Lexical greater than or equal\\n\\n### Description\\nDetermines whether one string is lexically greater than or equal to\\nanother string, where the two strings are interpreted as containing\\nASCII character codes.  If the String A and String B are not the same\\nlength, the shorter is compared as if spaces were appended to it to form\\na value that has the same length as the longer.\\n\\n     \\nIn general, the lexical comparison intrinsics `LGE`, `LGT`,\\n`LLE`, and `LLT` differ from the corresponding intrinsic\\noperators `.GE.`, `.GT.`, `.LE.`, and `.LT.`, in\\nthat the latter use the processor\'s character ordering (which is not\\nASCII on some targets), whereas the former always use the ASCII\\nordering.\\n\\n\\n\\n\\n### Syntax\\n`RESULT = LGE(STRING_A, STRING_B)`\\n\\n\\n### Arguments\\n\\n     \\n type. \\n\\n | `STRING_B`  | Shall be of default `CHARACTER` type.\\n\\n\\n\\n\\n\\n\\n### Return value\\nReturns `.TRUE.` if `STRING_A >= STRING_B`, and `.FALSE.`otherwise, based on the ASCII ordering.\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name                            | Argument           | Return type        | Standard\\n\\n | `LGE(STRING_A, STRING_B)`  | `CHARACTER`   | `LOGICAL`     | Fortran 77 and later\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"LGT.html#LGT\\">LGT</a>, <a href=\\"LLE.html#LLE\\">LLE</a>, <a href=\\"LLT.html#LLT\\">LLT</a>\\n"},"RESHAPE":{"doc":"`RESHAPE` — Function to reshape an array\\n\\n### Description\\nReshapes `SOURCE` to correspond to `SHAPE`. If necessary,\\nthe new array may be padded with elements from `PAD` or permuted\\nas defined by `ORDER`.\\n\\n\\n\\n### Syntax\\n`RESULT = RESHAPE(SOURCE, SHAPE[, PAD, ORDER])`\\n\\n\\n### Arguments\\n\\n     \\n | `SOURCE`  | Shall be an array of any type. \\n\\n | `SHAPE`   | Shall be of type `INTEGER` and an\\narray of rank one. Its values must be positive or zero. \\n\\n | `PAD`     | (Optional) shall be an array of the same\\ntype as `SOURCE`. \\n\\n | `ORDER`   | (Optional) shall be of type `INTEGER`and an array of the same shape as `SHAPE`. Its values shall\\nbe a permutation of the numbers from 1 to n, where n is the size of\\n`SHAPE`. If `ORDER` is absent, the natural ordering shall\\nbe assumed.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe result is an array of shape `SHAPE` with the same type as\\n`SOURCE`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nPROGRAM test_reshape\\n\\n  INTEGER, DIMENSION(4) :: x\\n\\n  WRITE(*,*) SHAPE(x)                       ! prints \\"4\\"\\n\\n  WRITE(*,*) SHAPE(RESHAPE(x, (/2, 2/)))    ! prints \\"2 2\\"\\n\\nEND PROGRAM\\n\\n```\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n\\n### See also\\n<a href=\\"SHAPE.html#SHAPE\\">SHAPE</a>\\n"},"LOGICAL":{"doc":"`LOGICAL` — Convert to logical type\\n\\n### Description\\nConverts one kind of `LOGICAL` variable to another.\\n\\n\\n\\n### Syntax\\n`RESULT = LOGICAL(L [, KIND])`\\n\\n\\n### Arguments\\n\\n     \\n. \\n\\n | `KIND`  | (Optional) An `INTEGER` initialization\\nexpression indicating the kind parameter of the result.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is a `LOGICAL` value equal to `L`, with a\\nkind corresponding to `KIND`, or of the default logical kind if\\n`KIND` is not given.\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"INT.html#INT\\">INT</a>, <a href=\\"REAL.html#REAL\\">REAL</a>, <a href=\\"CMPLX.html#CMPLX\\">CMPLX</a>\\n"},"MCLOCK":{"doc":"`MCLOCK` — Time function\\n\\n### Description\\nReturns the number of clock ticks since the start of the process, based\\non the function `clock(3)` in the C standard library.\\n\\n     \\nThis intrinsic is not fully portable, such as to systems with 32-bit\\n`INTEGER` types but supporting times wider than 32 bits. Therefore,\\nthe values returned by this intrinsic might be, or become, negative, or\\nnumerically less than previous values, during a single run of the\\ncompiled program.\\n\\n\\n\\n\\n### Syntax\\n`RESULT = MCLOCK()`\\n\\n\\n### Return value\\nThe return value is a scalar of type `INTEGER(4)`, equal to the\\nnumber of clock ticks since the start of the process, or `-1` if\\nthe system does not support `clock(3)`.\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nFunction\\n\\n\\n\\n### See also\\n<a href=\\"CTIME.html#CTIME\\">CTIME</a>, <a href=\\"GMTIME.html#GMTIME\\">GMTIME</a>, <a href=\\"LTIME.html#LTIME\\">LTIME</a>, <a href=\\"MCLOCK.html#MCLOCK\\">MCLOCK</a>, <a href=\\"TIME.html#TIME\\">TIME</a>\\n\\n   "},"DCMPLX":{"doc":"`DCMPLX` — Double complex conversion function\\n\\n### Description\\n`DCMPLX(X [,Y])` returns a double complex number where `X` is\\nconverted to the real component.  If `Y` is present it is converted to the\\nimaginary component.  If `Y` is not present then the imaginary component is\\nset to 0.0.  If `X` is complex then `Y` must not be present.\\n\\n\\n\\n### Syntax\\n`RESULT = DCMPLX(X [, Y])`\\n\\n\\n### Arguments\\n\\n     \\n,\\nor `COMPLEX`. \\n\\n | `Y`  | (Optional if `X` is not `COMPLEX`.) May be\\n`INTEGER` or `REAL`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `COMPLEX(8)`\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_dcmplx\\n\\n    integer :: i = 42\\n\\n    real :: x = 3.14\\n\\n    complex :: z\\n\\n    z = cmplx(i, x)\\n\\n    print *, dcmplx(i)\\n\\n    print *, dcmplx(x)\\n\\n    print *, dcmplx(z)\\n\\n    print *, dcmplx(x,i)\\n\\nend program test_dcmplx\\n\\n```\\n\\n     \\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"ERFC_SCALED":{"doc":"`ERFC_SCALED` — Error function\\n\\n### Description\\n`ERFC_SCALED(X)` computes the exponentially-scaled complementary\\nerror function of `X`.\\n\\n\\n\\n### Syntax\\n`RESULT = ERFC_SCALED(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of type `REAL` and of the same kind as `X`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_erfc_scaled\\n\\n  real(8) :: x = 0.17_8\\n\\n  x = erfc_scaled(x)\\n\\nend program test_erfc_scaled\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"INT2":{"doc":"`INT2` — Convert to 16-bit integer type\\n\\n### Description\\nConvert to a `KIND=2` integer type. This is equivalent to the\\nstandard `INT` intrinsic with an optional argument of\\n`KIND=2`, and is only included for backwards compatibility.\\n\\n     \\nThe `SHORT` intrinsic is equivalent to `INT2`.\\n\\n\\n\\n\\n### Syntax\\n`RESULT = INT2(A)`\\n\\n\\n### Arguments\\n\\n     \\n,\\n`REAL`, or `COMPLEX`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is a `INTEGER(2)` variable.\\n\\n\\n\\n### Standard\\nGNU extension\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"INT.html#INT\\">INT</a>, <a href=\\"INT8.html#INT8\\">INT8</a>, <a href=\\"LONG.html#LONG\\">LONG</a>\\n"},"SINH":{"doc":"`SINH` — Hyperbolic sine function\\n\\n### Description\\n`SINH(X)` computes the hyperbolic sine of `X`.\\n\\n\\n\\n### Syntax\\n`RESULT = SINH(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value has same type and kind as `X`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_sinh\\n\\n  real(8) :: x = - 1.0_8\\n\\n  x = sinh(x)\\n\\nend program test_sinh\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name             | Argument           | Return type        | Standard\\n\\n | `SINH(X)`   | `REAL(4) X`   | `REAL(4)`     | Fortran 95 and later\\n\\n | `DSINH(X)`  | `REAL(8) X`   | `REAL(8)`     | Fortran 95 and later\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 95 and later, for a complex argument Fortran 2008 or later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"ASINH.html#ASINH\\">ASINH</a>\\n"},"FRACTION":{"doc":"`FRACTION` — Fractional part of the model representation\\n\\n### Description\\n`FRACTION(X)` returns the fractional part of the model\\nrepresentation of `X`.\\n\\n\\n\\n### Syntax\\n`Y = FRACTION(X)`\\n\\n\\n### Arguments\\n\\n     \\n.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of the same type and kind as the argument. \\nThe fractional part of the model representation of `X` is returned;\\nit is `X * RADIX(X)**(-EXPONENT(X))`.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_fraction\\n\\n  real :: x\\n\\n  x = 178.1387e-4\\n\\n  print *, fraction(x), x * radix(x)**(-exponent(x))\\n\\nend program test_fraction\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n"},"ALLOCATED":{"doc":"`ALLOCATED` — Status of an allocatable entity\\n\\n### Description\\n`ALLOCATED(ARRAY)` and `ALLOCATED(SCALAR)` check the allocation\\nstatus of `ARRAY` and `SCALAR`, respectively.\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `RESULT = ALLOCATED(SCALAR)`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n array. \\n\\n | `SCALAR`    | The argument shall be an `ALLOCATABLE` scalar.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is a scalar `LOGICAL` with the default logical\\nkind type parameter.  If the argument is allocated, then the result is\\n`.TRUE.`; otherwise, it returns `.FALSE.`\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_allocated\\n\\n  integer :: i = 4\\n\\n  real(4), allocatable :: x(:)\\n\\n  if (.not. allocated(x)) allocate(x(i))\\n\\nend program test_allocated\\n\\n```\\n\\n     \\n\\n### Standard\\nFortran 95 and later.  Note, the `SCALAR=` keyword and allocatable\\nscalar entities are available in Fortran 2003 and later.\\n\\n\\n\\n### Class\\nInquiry function\\n\\n\\n"},"ACOS":{"doc":"`ACOS` — Arccosine function\\n\\n### Description\\n`ACOS(X)` computes the arccosine of `X` (inverse of `COS(X)`).\\n\\n\\n\\n### Syntax\\n`RESULT = ACOS(X)`\\n\\n\\n### Arguments\\n\\n     \\n with a magnitude that is\\nless than or equal to one - or the type shall be `COMPLEX`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nThe return value is of the same type and kind as `X`. \\nThe real part of the result is in radians and lies in the range\\n0 \\\\leq \\\\Re \\\\acos(x) \\\\leq \\\\pi.\\n\\n\\n\\n### Example\\n```\\n\\n\\nprogram test_acos\\n\\n  real(8) :: x = 0.866_8\\n\\n  x = acos(x)\\n\\nend program test_acos\\n\\n```\\n\\n\\n\\n### Specific names\\n\\n     \\n | Name             | Argument          | Return type      | Standard\\n\\n | `ACOS(X)`   | `REAL(4) X`  | `REAL(4)`   | Fortran 77 and later\\n\\n | `DACOS(X)`  | `REAL(8) X`  | `REAL(8)`   | Fortran 77 and later\\n\\n\\n\\n\\n\\n\\n### Standard\\nFortran 77 and later, for a complex argument Fortran 2008 or later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\nInverse function: <a href=\\"COS.html#COS\\">COS</a>\\n\\n   "},"MAXVAL":{"doc":"`MAXVAL` — Maximum value of an array\\n\\n### Description\\nDetermines the maximum value of the elements in an array value, or, if\\nthe `DIM` argument is supplied, determines the maximum value along\\neach row of the array in the `DIM` direction.  If `MASK` is\\npresent, only the elements for which `MASK` is `.TRUE.` are\\nconsidered.  If the array has zero size, or all of the elements of\\n`MASK` are `.FALSE.`, then the result is `-HUGE(ARRAY)`if `ARRAY` is numeric, or a string of nulls if `ARRAY` is of character\\ntype.\\n\\n\\n\\n### Syntax\\n\\n     \\n\\n\\n | `RESULT = MAXVAL(ARRAY [, MASK])`     <br>\\n\\n\\n\\n\\n\\n### Arguments\\n\\n     \\n or\\n`REAL`. \\n\\n | `DIM`    | (Optional) Shall be a scalar of type\\n`INTEGER`, with a value between one and the rank of `ARRAY`,\\ninclusive.  It may not be an optional dummy argument. \\n\\n | `MASK`   | Shall be an array of type `LOGICAL`,\\nand conformable with `ARRAY`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nIf `DIM` is absent, or if `ARRAY` has a rank of one, the result\\nis a scalar.  If `DIM` is present, the result is an array with a\\nrank one less than the rank of `ARRAY`, and a size corresponding to\\nthe size of `ARRAY` with the `DIM` dimension removed.  In all\\ncases, the result is of the same type and kind as `ARRAY`.\\n\\n\\n\\n### Standard\\nFortran 95 and later\\n\\n\\n\\n### Class\\nTransformational function\\n\\n\\n\\n### See also\\n<a href=\\"MAX.html#MAX\\">MAX</a>, <a href=\\"MAXLOC.html#MAXLOC\\">MAXLOC</a>\\n"},"DSHIFTR":{"doc":"`DSHIFTR` — Combined right shift\\n\\n### Description\\n`DSHIFTR(I, J, SHIFT)` combines bits of `I` and `J`. The\\nleftmost `SHIFT` bits of the result are the rightmost `SHIFT`\\nbits of `I`, and the remaining bits are the leftmost bits of\\n`J`.\\n\\n\\n\\n### Syntax\\n`RESULT = DSHIFTR(I, J, SHIFT)`\\n\\n\\n### Arguments\\n\\n     \\n or a BOZ constant. \\n\\n | `J`  | Shall be of type `INTEGER` or a BOZ constant. \\nIf both `I` and `J` have integer type, then they shall have\\nthe same kind type parameter. `I` and `J` shall not both be\\nBOZ constants. \\n\\n | `SHIFT`  | Shall be of type `INTEGER`. It shall\\nbe nonnegative.  If `I` is not a BOZ constant, then `SHIFT`\\nshall be less than or equal to `BIT_SIZE(I)`; otherwise,\\n`SHIFT` shall be less than or equal to `BIT_SIZE(J)`.\\n\\n\\n\\n\\n\\n\\n### Return value\\nIf either `I` or `J` is a BOZ constant, it is first converted\\nas if by the intrinsic function `INT` to an integer type with the\\nkind type parameter of the other.\\n\\n\\n\\n### Standard\\nFortran 2008 and later\\n\\n\\n\\n### Class\\nElemental function\\n\\n\\n\\n### See also\\n<a href=\\"DSHIFTL.html#DSHIFTL\\">DSHIFTL</a>\\n"}}')}},n={};function t(r){var i=n[r];if(void 0!==i)return i.exports;var o=n[r]={exports:{}};return e[r].call(o.exports,o,o.exports,t),o.exports}t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r=t(7015);module.exports=r})();
//# sourceMappingURL=extension.js.map
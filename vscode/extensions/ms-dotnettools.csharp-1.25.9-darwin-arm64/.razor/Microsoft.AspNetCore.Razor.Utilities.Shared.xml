<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNetCore.Razor.Utilities.Shared</name>
    </assembly>
    <members>
        <member name="M:Microsoft.AspNetCore.Razor.ListExtensions.SetCapacityIfLarger``1(System.Collections.Generic.List{``0},System.Int32)">
            <summary>
             Set the <paramref name="list"/>'s capacity if it is less than <paramref name="newCapacity"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Razor.ListExtensions.ToArrayOrEmpty``1(System.Collections.Generic.List{``0})">
            <summary>
             Copies the elements of the <see cref="T:System.Collections.Generic.List`1"/> to a new array, or returns an
             empty array if the <see cref="T:System.Collections.Generic.List`1"/> is null.
            </summary>
            <remarks>
             On .NET Framework, <see cref="M:System.Collections.Generic.List`1.ToArray"/> will create a new empty array for any
             empty <see cref="T:System.Collections.Generic.List`1"/>. This method avoids that extra allocation.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Razor.PooledObjects.ArrayBuilderPool`1">
            <summary>
            A pool of <see cref="T:System.Collections.Immutable.ImmutableArray`1.Builder"/> instances.
            </summary>
            
            <remarks>
            Instances originating from this pool are intended to be short-lived and are suitable
            for temporary work. Do not return them as the results of methods or store them in fields.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Razor.PooledObjects.DictionaryPool`2">
            <summary>
            A pool of <see cref="T:System.Collections.Generic.Dictionary`2"/> instances.
            </summary>
            
            <remarks>
            Instances originating from this pool are intended to be short-lived and are suitable
            for temporary work. Do not return them as the results of methods or store them in fields.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Razor.PooledObjects.HashSetPool`1">
            <summary>
            A pool of <see cref="T:System.Collections.Generic.HashSet`1"/> instances that compares items using default equality.
            </summary>
            
            <remarks>
            Instances originating from this pool are intended to be short-lived and are suitable
            for temporary work. Do not return them as the results of methods or store them in fields.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Razor.PooledObjects.ListPool`1">
            <summary>
            A pool of <see cref="T:System.Collections.Generic.List`1"/> instances.
            </summary>
            
            <remarks>
            Instances originating from this pool are intended to be short-lived and are suitable
            for temporary work. Do not return them as the results of methods or store them in fields.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Razor.PooledObjects.PooledArrayBuilder`1">
            <summary>
             Wraps a pooled <see cref="T:System.Collections.Immutable.ImmutableArray`1.Builder"/> but doesn't allocate it until
             it's needed. Note: Dispose this to ensure that the pooled array builder is returned
             to the pool.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Razor.PooledObjects.PooledArrayBuilder`1.DrainToImmutable">
            <summary>
             Returns the current contents as an <see cref="T:System.Collections.Immutable.ImmutableArray`1"/> and sets
             the collection to a zero length array.
            </summary>
            <remarks>
             If <see cref="P:System.Collections.Immutable.ImmutableArray`1.Builder.Capacity"/> equals <see cref="P:Microsoft.AspNetCore.Razor.PooledObjects.PooledArrayBuilder`1.Count"/>, the
             internal array will be extracted as an <see cref="T:System.Collections.Immutable.ImmutableArray`1"/> without copying
             the contents. Otherwise, the contents will be copied into a new array. The collection
             will then be set to a zero length array.
            </remarks>
            <returns>An immutable array.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Razor.PooledObjects.PooledHashSet`1">
            <summary>
             Wraps a pooled <see cref="T:System.Collections.Generic.HashSet`1"/> but doesn't allocate it until
             it's needed. Note: Dispose this to ensure that the pooled set is returned
             to the pool.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Razor.PooledObjects.PooledList`1">
            <summary>
             Wraps a pooled <see cref="T:System.Collections.Generic.List`1"/> but doesn't allocate it until
             it's needed. Note: Dispose this to ensure that the pooled list is returned
             to the pool.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Razor.PooledObjects.ReferenceEqualityHashSetPool`1">
            <summary>
            A pool of <see cref="T:System.Collections.Generic.HashSet`1"/> instances that compares items using reference equality.
            </summary>
            
            <remarks>
            Instances originating from this pool are intended to be short-lived and are suitable
            for temporary work. Do not return them as the results of methods or store them in fields.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Razor.PooledObjects.StackPool`1">
            <summary>
            A pool of <see cref="T:System.Collections.Generic.Stack`1"/> instances.
            </summary>
            
            <remarks>
            Instances originating from this pool are intended to be short-lived and are suitable
            for temporary work. Do not return them as the results of methods or store them in fields.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Razor.PooledObjects.StopwatchPool">
            <summary>
            A pool of <see cref="T:System.Diagnostics.Stopwatch"/> instances.
            </summary>
            
            <remarks>
            Instances originating from this pool are intended to be short-lived and are suitable
            for temporary work. Do not return them as the results of methods or store them in fields.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Razor.PooledObjects.StringBuilderPool">
            <summary>
            A pool of <see cref="T:System.Text.StringBuilder"/> instances.
            </summary>
            
            <remarks>
            Instances originating from this pool are intended to be short-lived and are suitable
            for temporary work. Do not return them as the results of methods or store them in fields.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Razor.PooledObjects.StringDictionaryPool`1">
            <summary>
            Pooled <see cref="T:System.Collections.Generic.Dictionary`2"/> instances when the key is of type <see cref="T:System.String"/>.
            </summary>
            
            <remarks>
            Instances originating from this pool are intended to be short-lived and are suitable
            for temporary work. Do not return them as the results of methods or store them in fields.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Razor.PooledObjects.StringHashSetPool">
            <summary>
            A pool of <see cref="T:System.Collections.Generic.HashSet`1"/> instances that compares strings.
            </summary>
            
            <remarks>
            Instances originating from this pool are intended to be short-lived and are suitable
            for temporary work. Do not return them as the results of methods or store them in fields.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Razor.Utilities.Shared.Resources.SR.Non_negative_number_required">
            <summary>Non-negative number required.</summary>
        </member>
        <member name="T:System.Collections.Immutable.ImmutableArrayExtensions">
            <summary>
            <see cref="T:System.Collections.Immutable.ImmutableArray`1"/> extension methods
            </summary>
        </member>
        <member name="M:System.Collections.Immutable.ImmutableArrayExtensions.NullToEmpty``1(System.Collections.Immutable.ImmutableArray{``0})">
            <summary>
            Returns an empty array if the input array is null (default)
            </summary>
        </member>
        <member name="M:System.Collections.Generic.KeyValuePairExtensions.Deconstruct``2(System.Collections.Generic.KeyValuePair{``0,``1},``0@,``1@)">
            <summary>
            Deconstructs a <see cref="T:System.Collections.Generic.KeyValuePair`2"/> into out variables. Provides support
            for assignment like
            <code>
            var (k,v) = kvp;
            </code>
            </summary>
        </member>
    </members>
</doc>

var k=Object.create;var p=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var P=Object.getOwnPropertyNames,v=Object.getOwnPropertySymbols,q=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty,D=Object.prototype.propertyIsEnumerable;var g=(e,s,t)=>s in e?p(e,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[s]=t,m=(e,s)=>{for(var t in s||(s={}))b.call(s,t)&&g(e,t,s[t]);if(v)for(var t of v(s))D.call(s,t)&&g(e,t,s[t]);return e};var A=(e,s)=>()=>(s||e((s={exports:{}}).exports,s),s.exports),N=(e,s)=>{for(var t in s)p(e,t,{get:s[t],enumerable:!0})},h=(e,s,t,c)=>{if(s&&typeof s=="object"||typeof s=="function")for(let i of P(s))!b.call(e,i)&&i!==t&&p(e,i,{get:()=>s[i],enumerable:!(c=x(s,i))||c.enumerable});return e};var S=(e,s,t)=>(t=e!=null?k(q(e)):{},h(s||!e||!e.__esModule?p(t,"default",{value:e,enumerable:!0}):t,e)),L=e=>h(p({},"__esModule",{value:!0}),e);var f=A((M,R)=>{R.exports={name:"sqltools-driver-sqlite",displayName:"SQLTools SQLite",description:"SQLTools SQLite",version:"0.5.0",engines:{vscode:"^1.72.0"},publisher:"mtxr",license:"MIT",private:!0,repository:{type:"git",url:"https://github.com/mtxr/vscode-sqltools.git",directory:"packages/drivers.sqlite"},bugs:{url:"https://github.com/mtxr/vscode-sqltools/labels/sqlite"},keywords:["sqltools-driver","sqlite"],galleryBanner:{theme:"light",color:"#eaeaea"},icon:"icon.png",categories:["Programming Languages","Snippets","Formatters","Other"],extensionDependencies:["mtxr.sqltools"],activationEvents:["*","onLanguage:sql","onCommand:sqltools.*"],main:"./out/extension.js",scripts:{"test:tsc":"tsc --noEmit -p ./tsconfig.json --skipLibCheck",clean:"rimraf -rf out dist *.vsix",predev:"yarn run clean",dev:"yarn run watch",prebuild:"yarn run clean && yarn run tsc-check",build:'cross-env NODE_ENV=production concurrently "npm:build:*"',"build:ext":`yarn run compile:ext --define:process.env.NODE_ENV="'production'" --minify`,"build:ls":`yarn run compile:ls --define:process.env.NODE_ENV="'production'" --minify`,esbuild:"esbuild --platform=node --tsconfig=./tsconfig.json --external:vscode --color=true --format=cjs",prepackage:"yarn run build",package:"vsce package --yarn -o .","compile:ext":`yarn run esbuild --bundle ./src/extension.ts --outfile=./out/extension.js --target=es2017 --define:process.env.PRODUCT="'ext'"`,"compile:ls":`yarn run esbuild --bundle ./src/ls/plugin.ts --outfile=./out/ls/plugin.js --target=es2015 --define:process.env.PRODUCT="'ls'"`,"tsc-check":"yarn run ts --noEmit --preserveWatchOutput",watch:'concurrently "npm:watch:*"',"watch:ext":`yarn run compile:ext --define:process.env.NODE_ENV="'development'" --sourcemap --watch`,"watch:ls":`yarn run compile:ls --define:process.env.NODE_ENV="'development'" --sourcemap --watch`,"dev:tsc":"yarn run tsc-check -w",ts:"tsc -p ."},devDependencies:{"@sqltools/base-driver":"^0.1.11","@types/sqlite3":"^3.1.8","@types/vscode":"^1.72.0",concurrently:"^5.2.0","cross-env":"^7.0.2",esbuild:"^0.15.7",rimraf:"^3.0.2",typescript:"~4.8.3",vsce:"1.77.0"}}});var O={};N(O,{activate:()=>j,deactivate:()=>F});module.exports=L(O);var a=require("vscode");var d=[{displayName:"SQLite (Node)",value:"SQLite"}];var u=S(require("path"));var{publisher:$,name:T}=f(),y="SQLite";async function j(e){let s=a.extensions.getExtension("mtxr.sqltools");if(!s)throw new Error("SQLTools not installed");await s.activate();let t=s.exports,c=`${$}.${T}`,i={extensionId:c,name:`${y} Plugin`,type:"driver",async register(r){r.resourcesMap().set(`driver/${d[0].value}/icons`,{active:e.asAbsolutePath("icons/active.png"),default:e.asAbsolutePath("icons/default.png"),inactive:e.asAbsolutePath("icons/inactive.png")}),d.forEach(({value:o})=>{r.resourcesMap().set(`driver/${o}/extension-id`,c),r.resourcesMap().set(`driver/${o}/connection-schema`,e.asAbsolutePath("connection.schema.json")),r.resourcesMap().set(`driver/${o}/ui-schema`,e.asAbsolutePath("ui.schema.json"))}),await r.client.sendRequest("ls/RegisterPlugin",{path:e.asAbsolutePath("out/ls/plugin.js")})}};return t.registerPlugin(i),{driverName:y,parseBeforeSaveConnection:({connInfo:r})=>{let o=m({},r);if(!r.database)throw new Error("Database is required");if(u.default.isAbsolute(r.database)){let n=a.Uri.file(r.database),l=a.workspace.getWorkspaceFolder(n);l&&(o.database=`\${workspaceFolder:${l.name}}/${a.workspace.asRelativePath(r.database,!1)}`)}return["connectionMethod","id","usePassword","askForPassword"].forEach(n=>delete o[n]),o},parseBeforeEditConnection:({connInfo:r})=>{let o=m({},r);if(["connectionMethod","usePassword","askForPassword"].forEach(n=>delete o[n]),!u.default.isAbsolute(r.database)&&/\$\{workspaceFolder:(.+)}/g.test(r.database)){let n=r.database.match(/\$\{workspaceFolder:(.+)}/)[1],l=a.workspace.workspaceFolders.find(w=>w.name===n);l&&(o.database=u.default.resolve(l.uri.fsPath,r.database.replace(/\$\{workspaceFolder:(.+)}/g,"./")))}return o},driverAliases:d}}function F(){}0&&(module.exports={activate,deactivate});

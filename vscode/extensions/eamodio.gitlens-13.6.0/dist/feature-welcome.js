exports.id=773,exports.ids=[773],exports.modules={8463:(e,t,o)=>{o.d(t,{D:()=>WebviewProviderWithConfigBase});var i=o(9496),n=o(5255),a=o(9338),s=o(6450),c=o(7881),d=o(4092),r=o(5148),m=o(3105),u=o(4336),g=o(5798);class WebviewProviderWithConfigBase{constructor(e,t){this.container=e,this.host=t,this._disposable=r.D.onDidChangeAny(this.onAnyConfigurationChanged,this)}dispose(){this._disposable.dispose()}onActiveChanged(e){e&&this.notifyDidChangeConfiguration()}onMessageReceived(e){if(null!=e)switch(e.method){case g.qi.method:u.Yd.debug(`Webview(${this.host.id}).onMessageReceived: method=${e.method}`),(0,g.mq)(g.qi,e,(async e=>{const t="workspace"===e.scope?i.ConfigurationTarget.Workspace:i.ConfigurationTarget.Global;let o;for(o in e.changes){let i=e.changes[o];if((0,g.NM)(o)){const e=this.customSettings.get(o);null!=e&&"boolean"==typeof i&&await e.update(i);continue}const n=r.D.inspect(o);if(null!=i)if("workspace"===e.scope){if(i===n.workspaceValue)continue}else{if(i===n.globalValue&&i!==n.defaultValue)continue;i===n.defaultValue&&(i=void 0)}await r.D.update(o,i,t)}for(const o of e.removes)await r.D.update(o,void 0,t)}));break;case g.Mb.method:u.Yd.debug(`Webview(${this.host.id}).onMessageReceived: method=${e.method}`),(0,g.mq)(g.Mb,e,(async t=>{switch(t.type){case"commit":case"commit-uncommitted":{const o=new s.aM(this.container,"~/code/eamodio/vscode-gitlens-demo","fe26af408293cba5b4bfd77306e1ac9ff7ccaef8",new s._j("You","eamodio@gmail.com",new Date("2016-11-12T20:41:00.000Z")),new s._j("You","eamodio@gmail.com",new Date("2020-11-01T06:57:21.000Z")),"commit-uncommitted"===t.type?"Uncommitted changes":"Supercharged",["3ac1d3f51d7cf5f438cc69f25f6740536ad80fef"],"commit-uncommitted"===t.type?"Uncommitted changes":"Supercharged",new c.K8("~/code/eamodio/vscode-gitlens-demo","code.ts",c.NV.Modified),void 0,[]);let i,n,m=!1;switch(t.key){case r.D.name("currentLine.format"):m=r.D.get("currentLine.pullRequests.enabled");break;case r.D.name("statusBar.format"):m=r.D.get("statusBar.pullRequests.enabled")}m&&(i=new d.i7({id:"github",name:"GitHub",domain:"github.com",icon:"github"},{name:"Eric Amodio",avatarUrl:"https://avatars1.githubusercontent.com/u/641685?s=32&v=4",url:"https://github.com/eamodio"},"1","Supercharged","https://github.com/gitkraken/vscode-gitlens/pulls/1",d.o0.Merged,new Date("Sat, 12 Nov 2016 19:41:00 GMT"),void 0,new Date("Sat, 12 Nov 2016 20:41:00 GMT")));try{n=a.i.fromTemplate(t.format,o,{dateFormat:r.D.get("defaultDateFormat"),pullRequestOrRemote:i,messageTruncateAtNewLine:!0})}catch{n="Invalid format"}await this.host.notify(g.bo,{preview:n},e.completionId)}}}))}}onAnyConfigurationChanged(e){if(!r.D.changedAny(e,n.m1)){if(!r.D.changedAny(e,[...(0,m.UI)(this.customSettings.values(),(e=>e.name))]))return}this.notifyDidChangeConfiguration()}get customSettings(){return null==this._customSettings&&(this._customSettings=new Map([["rebaseEditor.enabled",{name:"workbench.editorAssociations",enabled:()=>this.container.rebaseEditor.enabled,update:this.container.rebaseEditor.setEnabled}],["currentLine.useUncommittedChangesFormat",{name:"currentLine.uncommittedChangesFormat",enabled:()=>null!=r.D.get("currentLine.uncommittedChangesFormat"),update:async e=>r.D.updateEffective("currentLine.uncommittedChangesFormat",e?"✏️ ${ago}":null)}]])),this._customSettings}getCustomSettings(){const e=Object.create(null);for(const[t,o]of this.customSettings)e[t]=o.enabled();return e}notifyDidChangeConfiguration(){return this.host.notify(g.n,{config:r.D.getAll(!0),customSettings:this.getCustomSettings()})}}},5422:(e,t,o)=>{o.d(t,{WelcomeWebviewProvider:()=>WelcomeWebviewProvider});var i=o(5148),n=o(8463);class WelcomeWebviewProvider extends n.D{includeBootstrap(){return{config:i.D.getAll(!0)}}}}};
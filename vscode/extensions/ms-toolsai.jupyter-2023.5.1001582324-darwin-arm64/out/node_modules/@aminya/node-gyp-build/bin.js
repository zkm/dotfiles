#!/usr/bin/env node
var proc=require("child_process"),os=require("os"),path=require("path");function build(){var e=["win32"===os.platform()?"node-gyp.cmd":"node-gyp","rebuild"];try{e=[process.execPath,path.join(require.resolve("node-gyp/package.json"),"..",require("node-gyp/package.json").bin["node-gyp"]),"rebuild"]}catch(e){}proc.spawn(e[0],e.slice(1),{stdio:"inherit"}).on("exit",(function(e){e&&process.exit(e)}))}function preinstall(){try{require(path.join(__dirname,"index.js"))()}catch(e){console.error(e.message),build()}}function buildFromSource(){return hasFlag("--build-from-source")||"true"===process.env.npm_config_build_from_source}function verbose(){return hasFlag("--verbose")||"verbose"===process.env.npm_config_loglevel}function hasFlag(e){if(!process.env.npm_config_argv)return!1;try{return-1!==JSON.parse(process.env.npm_config_argv).original.indexOf(e)}catch(e){return!1}}buildFromSource()?preinstall():proc.exec(process.execPath,[path.join(__dirname,"build-test.js")],(function(e,r,o){console.log(r),e&&(verbose()&&console.error(o),preinstall())}));
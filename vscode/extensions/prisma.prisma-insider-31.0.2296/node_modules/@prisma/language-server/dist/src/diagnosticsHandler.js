"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createDiagnosticsForIgnore = void 0;
const node_1 = require("vscode-languageserver/node");
const util_1 = require("./util");
function createDiagnosticsForIgnore(lines) {
    const diagnostics = [];
    lines.map((currElement, index) => {
        if (currElement.includes('@@ignore')) {
            const block = (0, util_1.getBlockAtPosition)(index, lines);
            if (block) {
                diagnostics.push({
                    range: { start: block.range.start, end: block.range.end },
                    message: '@@ignore: When using Prisma Migrate, this model will be kept in sync with the database schema, however, it will not be exposed in Prisma Client.',
                    tags: [node_1.DiagnosticTag.Unnecessary],
                    severity: node_1.DiagnosticSeverity.Hint,
                    code: '@@ignore documentation',
                    codeDescription: {
                        href: 'https://pris.ly/d/schema-reference#ignore-1',
                    },
                });
            }
        }
        else if (currElement.includes('@ignore')) {
            diagnostics.push({
                range: {
                    start: { line: index, character: 0 },
                    end: { line: index, character: util_1.MAX_SAFE_VALUE_i32 },
                },
                message: '@ignore: When using Prisma Migrate, this field will be kept in sync with the database schema, however, it will not be exposed in Prisma Client.',
                tags: [node_1.DiagnosticTag.Unnecessary],
                severity: node_1.DiagnosticSeverity.Hint,
                code: '@ignore documentation',
                codeDescription: {
                    href: 'https://pris.ly/d/schema-reference#ignore',
                },
            });
        }
    });
    return diagnostics;
}
exports.createDiagnosticsForIgnore = createDiagnosticsForIgnore;
//# sourceMappingURL=diagnosticsHandler.js.map